import type { CaipAddress } from '../utils/TypeUtil.js';
import type { Balance } from '@web3modal/common';
export interface AccountControllerState {
    isConnected: boolean;
    currentTab: number;
    caipAddress?: CaipAddress;
    address?: string;
    balance?: string;
    balanceSymbol?: string;
    profileName?: string | null;
    profileImage?: string | null;
    addressExplorerUrl?: string;
    smartAccountDeployed?: boolean;
    tokenBalance?: Balance[];
}
export declare const AccountController: {
    state: AccountControllerState;
    subscribe(callback: (newState: AccountControllerState) => void): () => void;
    subscribeKey<K extends keyof AccountControllerState>(key: K, callback: (value: AccountControllerState[K]) => void): () => void;
    setIsConnected(isConnected: AccountControllerState['isConnected']): void;
    setCaipAddress(caipAddress: AccountControllerState['caipAddress']): void;
    setBalance(balance: AccountControllerState['balance'], balanceSymbol: AccountControllerState['balanceSymbol']): void;
    setProfileName(profileName: AccountControllerState['profileName']): void;
    setProfileImage(profileImage: AccountControllerState['profileImage']): void;
    setAddressExplorerUrl(explorerUrl: AccountControllerState['addressExplorerUrl']): void;
    setSmartAccountDeployed(isDeployed: boolean): void;
    setCurrentTab(currentTab: AccountControllerState['currentTab']): void;
    setTokenBalance(tokenBalance: AccountControllerState['tokenBalance']): void;
    fetchTokenBalance(): Promise<void>;
    resetAccount(): void;
};
