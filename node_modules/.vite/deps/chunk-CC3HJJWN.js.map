{
  "version": 3,
  "sources": ["../../@supabase/node-fetch/browser.js"],
  "sourcesContent": ["\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function() {\n    // the only reliable means to get the global object is\n    // `Function('return this')()`\n    // However, this causes CSP violations in Chrome apps.\n    if (typeof self !== 'undefined') { return self; }\n    if (typeof window !== 'undefined') { return window; }\n    if (typeof global !== 'undefined') { return global; }\n    throw new Error('unable to locate global object');\n}\n\nvar globalObject = getGlobal();\n\nexport const fetch = globalObject.fetch;\n\nexport default globalObject.fetch.bind(globalObject);\n\nexport const Headers = globalObject.Headers;\nexport const Request = globalObject.Request;\nexport const Response = globalObject.Response;\n"],
  "mappings": ";AAGA,IAAI,YAAY,WAAW;AAIvB,MAAI,OAAO,SAAS,aAAa;AAAE,WAAO;AAAA,EAAM;AAChD,MAAI,OAAO,WAAW,aAAa;AAAE,WAAO;AAAA,EAAQ;AACpD,MAAI,OAAO,WAAW,aAAa;AAAE,WAAO;AAAA,EAAQ;AACpD,QAAM,IAAI,MAAM,gCAAgC;AACpD;AAEA,IAAI,eAAe,UAAU;AAEtB,IAAM,QAAQ,aAAa;AAElC,IAAO,kBAAQ,aAAa,MAAM,KAAK,YAAY;AAE5C,IAAM,UAAU,aAAa;AAC7B,IAAM,UAAU,aAAa;AAC7B,IAAM,WAAW,aAAa;",
  "names": []
}
