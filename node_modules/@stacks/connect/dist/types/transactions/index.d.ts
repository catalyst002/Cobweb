import { UserSession } from '@stacks/auth';
import { ContractCallOptions, ContractCallRegularOptions, ContractCallSponsoredOptions, ContractDeployOptions, ContractDeployRegularOptions, ContractDeploySponsoredOptions, SignTransactionOptions, STXTransferOptions, STXTransferRegularOptions, STXTransferSponsoredOptions, TransactionOptions } from '../types/transactions';
import { StacksProvider } from '../types';
export declare const getUserSession: (_userSession?: UserSession) => UserSession;
export declare function hasAppPrivateKey(userSession?: UserSession): string | false;
export declare const getKeys: (_userSession?: UserSession) => {
    privateKey: string;
    publicKey: string;
};
export declare function getStxAddress(options: TransactionOptions): string;
export declare const makeContractCallToken: (options: ContractCallOptions) => Promise<string>;
export declare const makeContractDeployToken: (options: ContractDeployOptions) => Promise<string>;
export declare const makeSTXTransferToken: (options: STXTransferOptions) => Promise<string>;
export declare const makeSignTransaction: (options: SignTransactionOptions) => Promise<string>;
export declare function openContractCall(options: ContractCallOptions | ContractCallRegularOptions | ContractCallSponsoredOptions, provider?: StacksProvider): Promise<void>;
export declare function openContractDeploy(options: ContractDeployOptions | ContractDeployRegularOptions | ContractDeploySponsoredOptions, provider?: StacksProvider): Promise<void>;
export declare function openSTXTransfer(options: STXTransferOptions | STXTransferRegularOptions | STXTransferSponsoredOptions, provider?: StacksProvider): Promise<void>;
export declare function openSignTransaction(options: SignTransactionOptions, provider?: StacksProvider): Promise<void>;
