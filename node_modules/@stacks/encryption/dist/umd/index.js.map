{"version":3,"file":"index.js","mappings":"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","sources":["webpack://StacksEncryption/webpack/universalModuleDefinition","webpack://StacksEncryption/webpack/runtime/create fake namespace object","webpack://StacksEncryption/../../node_modules/@noble/hashes/_assert.js","webpack://StacksEncryption/../../node_modules/@noble/hashes/_sha2.js","webpack://StacksEncryption/../../node_modules/@noble/hashes/_u64.js","webpack://StacksEncryption/../../node_modules/@noble/hashes/cryptoBrowser.js","webpack://StacksEncryption/../../node_modules/@noble/hashes/hmac.js","webpack://StacksEncryption/../../node_modules/@noble/hashes/pbkdf2.js","webpack://StacksEncryption/../../node_modules/@noble/hashes/sha256.js","webpack://StacksEncryption/../../node_modules/@noble/hashes/sha512.js","webpack://StacksEncryption/../../node_modules/@noble/hashes/utils.js","webpack://StacksEncryption/../../node_modules/@scure/base/lib/index.js","webpack://StacksEncryption/../../node_modules/@scure/bip39/index.js","webpack://StacksEncryption/../../node_modules/@scure/bip39/wordlists/english.js","webpack://StacksEncryption/../../node_modules/base-x/src/index.js","webpack://StacksEncryption/../../node_modules/base64-js/index.js","webpack://StacksEncryption/../../node_modules/bs58/index.js","webpack://StacksEncryption/webpack/bootstrap","webpack://StacksEncryption/webpack/runtime/compat get default export","webpack://StacksEncryption/webpack/runtime/define property getters","webpack://StacksEncryption/webpack/runtime/global","webpack://StacksEncryption/webpack/runtime/hasOwnProperty shorthand","webpack://StacksEncryption/webpack/runtime/make namespace object","webpack://StacksEncryption/../../node_modules/@noble/hashes/esm/_assert.js","webpack://StacksEncryption/../../node_modules/@noble/hashes/esm/utils.js","webpack://StacksEncryption/../../node_modules/@noble/hashes/esm/cryptoBrowser.js","webpack://StacksEncryption/../../node_modules/@noble/hashes/esm/hmac.js","webpack://StacksEncryption/../../node_modules/@noble/hashes/esm/_sha2.js","webpack://StacksEncryption/../../node_modules/@noble/hashes/esm/sha256.js","webpack://StacksEncryption/../../node_modules/@noble/secp256k1/lib/esm/index.js","webpack://StacksEncryption/../common/dist/esm/utils.js","webpack://StacksEncryption/../common/dist/esm/errors.js","webpack://StacksEncryption/../common/dist/esm/signatures.js","webpack://StacksEncryption/./src/cryptoUtils.ts","webpack://StacksEncryption/./src/aesCipher.ts","webpack://StacksEncryption/../common/dist/esm/buffer.js","webpack://StacksEncryption/../common/dist/esm/keys.js","webpack://StacksEncryption/../common/dist/esm/constants.js","webpack://StacksEncryption/../../node_modules/@noble/hashes/esm/ripemd160.js","webpack://StacksEncryption/../../node_modules/@noble/hashes/esm/_u64.js","webpack://StacksEncryption/../../node_modules/@noble/hashes/esm/sha512.js","webpack://StacksEncryption/./src/sha2Hash.ts","webpack://StacksEncryption/./src/keys.ts","webpack://StacksEncryption/./src/hashRipemd160.ts","webpack://StacksEncryption/./src/varuint.ts","webpack://StacksEncryption/./src/messageSignature.ts","webpack://StacksEncryption/./src/utils.ts","webpack://StacksEncryption/./src/ec.ts","webpack://StacksEncryption/./src/cryptoRandom.ts","webpack://StacksEncryption/./src/encryption.ts","webpack://StacksEncryption/./src/pbkdf2.ts","webpack://StacksEncryption/./src/wallet.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"StacksEncryption\"] = factory();\n\telse\n\t\troot[\"StacksEncryption\"] = factory();\n})(this, () => {\nreturn ","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.output = exports.exists = exports.hash = exports.bytes = exports.bool = exports.number = void 0;\nfunction number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexports.number = number;\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexports.bool = bool;\nfunction bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexports.bytes = bytes;\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexports.hash = hash;\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexports.exists = exists;\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexports.output = output;\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexports.default = assert;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SHA2 = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nclass SHA2 extends utils_js_1.Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = (0, utils_js_1.createView)(this.buffer);\n    }\n    update(data) {\n        _assert_js_1.default.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = (0, utils_js_1.createView)(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        _assert_js_1.default.exists(this);\n        _assert_js_1.default.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = (0, utils_js_1.createView)(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\nexports.SHA2 = SHA2;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.add = exports.toBig = exports.split = exports.fromBig = void 0;\nconst U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexports.fromBig = fromBig;\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexports.split = split;\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\nexports.toBig = toBig;\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\nexports.add = add;\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig: exports.toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexports.default = u64;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = void 0;\nexports.crypto = {\n    node: undefined,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hmac = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// HMAC (RFC 2104)\nclass HMAC extends utils_js_1.Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        _assert_js_1.default.hash(hash);\n        const key = (0, utils_js_1.toBytes)(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        _assert_js_1.default.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        _assert_js_1.default.exists(this);\n        _assert_js_1.default.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nconst hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nexports.hmac = hmac;\nexports.hmac.create = (hash, key) => new HMAC(hash, key);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.pbkdf2Async = exports.pbkdf2 = void 0;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst hmac_js_1 = require(\"./hmac.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash, _password, _salt, _opts) {\n    _assert_js_1.default.hash(hash);\n    const opts = (0, utils_js_1.checkOpts)({ dkLen: 32, asyncTick: 10 }, _opts);\n    const { c, dkLen, asyncTick } = opts;\n    _assert_js_1.default.number(c);\n    _assert_js_1.default.number(dkLen);\n    _assert_js_1.default.number(asyncTick);\n    if (c < 1)\n        throw new Error('PBKDF2: iterations (c) should be >= 1');\n    const password = (0, utils_js_1.toBytes)(_password);\n    const salt = (0, utils_js_1.toBytes)(_salt);\n    // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n    const DK = new Uint8Array(dkLen);\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    const PRF = hmac_js_1.hmac.create(hash, password);\n    const PRFSalt = PRF._cloneInto().update(salt);\n    return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\nfunction pbkdf2Output(PRF, PRFSalt, DK, prfW, u) {\n    PRF.destroy();\n    PRFSalt.destroy();\n    if (prfW)\n        prfW.destroy();\n    u.fill(0);\n    return DK;\n}\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nfunction pbkdf2(hash, password, salt, opts) {\n    const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = (0, utils_js_1.createView)(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        for (let ui = 1; ui < c; ui++) {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        }\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\nexports.pbkdf2 = pbkdf2;\nasync function pbkdf2Async(hash, password, salt, opts) {\n    const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = (0, utils_js_1.createView)(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        await (0, utils_js_1.asyncLoop)(c - 1, asyncTick, (i) => {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        });\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\nexports.pbkdf2Async = pbkdf2Async;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha224 = exports.sha256 = void 0;\nconst _sha2_js_1 = require(\"./_sha2.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends _sha2_js_1.SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = (0, utils_js_1.rotr)(W15, 7) ^ (0, utils_js_1.rotr)(W15, 18) ^ (W15 >>> 3);\n            const s1 = (0, utils_js_1.rotr)(W2, 17) ^ (0, utils_js_1.rotr)(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = (0, utils_js_1.rotr)(E, 6) ^ (0, utils_js_1.rotr)(E, 11) ^ (0, utils_js_1.rotr)(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = (0, utils_js_1.rotr)(A, 2) ^ (0, utils_js_1.rotr)(A, 13) ^ (0, utils_js_1.rotr)(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexports.sha256 = (0, utils_js_1.wrapConstructor)(() => new SHA256());\nexports.sha224 = (0, utils_js_1.wrapConstructor)(() => new SHA224());\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha384 = exports.sha512_256 = exports.sha512_224 = exports.sha512 = exports.SHA512 = void 0;\nconst _sha2_js_1 = require(\"./_sha2.js\");\nconst _u64_js_1 = require(\"./_u64.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = _u64_js_1.default.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nclass SHA512 extends _sha2_js_1.SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = _u64_js_1.default.rotrSH(W15h, W15l, 1) ^ _u64_js_1.default.rotrSH(W15h, W15l, 8) ^ _u64_js_1.default.shrSH(W15h, W15l, 7);\n            const s0l = _u64_js_1.default.rotrSL(W15h, W15l, 1) ^ _u64_js_1.default.rotrSL(W15h, W15l, 8) ^ _u64_js_1.default.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = _u64_js_1.default.rotrSH(W2h, W2l, 19) ^ _u64_js_1.default.rotrBH(W2h, W2l, 61) ^ _u64_js_1.default.shrSH(W2h, W2l, 6);\n            const s1l = _u64_js_1.default.rotrSL(W2h, W2l, 19) ^ _u64_js_1.default.rotrBL(W2h, W2l, 61) ^ _u64_js_1.default.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = _u64_js_1.default.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = _u64_js_1.default.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = _u64_js_1.default.rotrSH(Eh, El, 14) ^ _u64_js_1.default.rotrSH(Eh, El, 18) ^ _u64_js_1.default.rotrBH(Eh, El, 41);\n            const sigma1l = _u64_js_1.default.rotrSL(Eh, El, 14) ^ _u64_js_1.default.rotrSL(Eh, El, 18) ^ _u64_js_1.default.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = _u64_js_1.default.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = _u64_js_1.default.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = _u64_js_1.default.rotrSH(Ah, Al, 28) ^ _u64_js_1.default.rotrBH(Ah, Al, 34) ^ _u64_js_1.default.rotrBH(Ah, Al, 39);\n            const sigma0l = _u64_js_1.default.rotrSL(Ah, Al, 28) ^ _u64_js_1.default.rotrBL(Ah, Al, 34) ^ _u64_js_1.default.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = _u64_js_1.default.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = _u64_js_1.default.add3L(T1l, sigma0l, MAJl);\n            Ah = _u64_js_1.default.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = _u64_js_1.default.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = _u64_js_1.default.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = _u64_js_1.default.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = _u64_js_1.default.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = _u64_js_1.default.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = _u64_js_1.default.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = _u64_js_1.default.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = _u64_js_1.default.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nexports.SHA512 = SHA512;\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexports.sha512 = (0, utils_js_1.wrapConstructor)(() => new SHA512());\nexports.sha512_224 = (0, utils_js_1.wrapConstructor)(() => new SHA512_224());\nexports.sha512_256 = (0, utils_js_1.wrapConstructor)(() => new SHA512_256());\nexports.sha384 = (0, utils_js_1.wrapConstructor)(() => new SHA384());\n","\"use strict\";\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.randomBytes = exports.wrapConstructorWithOpts = exports.wrapConstructor = exports.checkOpts = exports.Hash = exports.concatBytes = exports.toBytes = exports.utf8ToBytes = exports.asyncLoop = exports.nextTick = exports.hexToBytes = exports.bytesToHex = exports.isLE = exports.rotr = exports.createView = exports.u32 = exports.u8 = void 0;\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nconst crypto_1 = require(\"@noble/hashes/crypto\");\n// Cast array to different type\nconst u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.u8 = u8;\nconst u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nexports.u32 = u32;\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.createView = createView;\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexports.rotr = rotr;\nexports.isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!exports.isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nfunction bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nexports.bytesToHex = bytesToHex;\n/**\n * @example hexToBytes('deadbeef')\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nexports.hexToBytes = hexToBytes;\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nconst nextTick = async () => { };\nexports.nextTick = nextTick;\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await (0, exports.nextTick)();\n        ts += diff;\n    }\n}\nexports.asyncLoop = asyncLoop;\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexports.utf8ToBytes = utf8ToBytes;\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\nexports.toBytes = toBytes;\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nfunction concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nexports.concatBytes = concatBytes;\n// For runtime check if class implements interface\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexports.Hash = Hash;\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nfunction checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexports.checkOpts = checkOpts;\nfunction wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexports.wrapConstructor = wrapConstructor;\nfunction wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexports.wrapConstructorWithOpts = wrapConstructorWithOpts;\n/**\n * Secure PRNG\n */\nfunction randomBytes(bytesLength = 32) {\n    if (crypto_1.crypto.web) {\n        return crypto_1.crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto_1.crypto.node) {\n        return new Uint8Array(crypto_1.crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\nexports.randomBytes = randomBytes;\n","\"use strict\";\n/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bytes = exports.stringToBytes = exports.str = exports.bytesToString = exports.hex = exports.utf8 = exports.bech32m = exports.bech32 = exports.base58check = exports.base58xmr = exports.base58xrp = exports.base58flickr = exports.base58 = exports.base64url = exports.base64 = exports.base32crockford = exports.base32hex = exports.base32 = exports.base16 = exports.utils = exports.assertNumber = void 0;\nfunction assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nexports.assertNumber = assertNumber;\nfunction chain(...args) {\n    const wrap = (a, b) => (c) => a(b(c));\n    const encode = Array.from(args)\n        .reverse()\n        .reduce((acc, i) => (acc ? wrap(acc, i.encode) : i.encode), undefined);\n    const decode = args.reduce((acc, i) => (acc ? wrap(acc, i.decode) : i.decode), undefined);\n    return { encode, decode };\n}\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\nfunction convertRadix(data, from, to) {\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            digits[i] = Math.floor(digitBase / to);\n            if (!Number.isSafeInteger(digits[i]) || digits[i] * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!digits[i])\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = (from, to) => from + (to - gcd(from, to));\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0;\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1;\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of strings');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of strings');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\nexports.utils = { alphabet, chain, checksum, radix, radix2, join, padding };\nexports.base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexports.base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexports.base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexports.base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexports.base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexports.base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexports.base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexports.base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexports.base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexports.base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += exports.base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = exports.base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nconst base58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), exports.base58);\nexports.base58check = base58check;\nconst BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        prefix = prefix.toLowerCase();\n        return `${prefix}1${BECH_ALPHABET.encode(words)}${bechChecksum(prefix, words, ENCODING_CONST)}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        str = lowered;\n        const sepIndex = str.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = str.slice(0, sepIndex);\n        const _words = str.slice(sepIndex + 1);\n        if (_words.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(_words).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!_words.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    return { encode, decode, decodeToBytes, decodeUnsafe, fromWords, fromWordsUnsafe, toWords };\n}\nexports.bech32 = genBech32('bech32');\nexports.bech32m = genBech32('bech32m');\nexports.utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexports.hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\nconst CODERS = {\n    utf8: exports.utf8, hex: exports.hex, base16: exports.base16, base32: exports.base32, base64: exports.base64, base64url: exports.base64url, base58: exports.base58, base58xmr: exports.base58xmr\n};\nconst coderTypeError = `Invalid encoding type. Available types: ${Object.keys(CODERS).join(', ')}`;\nconst bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!(bytes instanceof Uint8Array))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexports.bytesToString = bytesToString;\nexports.str = exports.bytesToString;\nconst stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexports.stringToBytes = stringToBytes;\nexports.bytes = exports.stringToBytes;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mnemonicToSeedSync = exports.mnemonicToSeed = exports.validateMnemonic = exports.entropyToMnemonic = exports.mnemonicToEntropy = exports.generateMnemonic = void 0;\n/*! scure-bip39 - MIT License (c) 2022 Patricio Palladino, Paul Miller (paulmillr.com) */\nconst _assert_1 = require(\"@noble/hashes/_assert\");\nconst pbkdf2_1 = require(\"@noble/hashes/pbkdf2\");\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst sha512_1 = require(\"@noble/hashes/sha512\");\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst base_1 = require(\"@scure/base\");\n// Japanese wordlist\nconst isJapanese = (wordlist) => wordlist[0] === '\\u3042\\u3044\\u3053\\u304f\\u3057\\u3093';\n// Normalization replaces equivalent sequences of characters\n// so that any two texts that are equivalent will be reduced\n// to the same sequence of code points, called the normal form of the original text.\nfunction nfkd(str) {\n    if (typeof str !== 'string')\n        throw new TypeError(`Invalid mnemonic type: ${typeof str}`);\n    return str.normalize('NFKD');\n}\nfunction normalize(str) {\n    const norm = nfkd(str);\n    const words = norm.split(' ');\n    if (![12, 15, 18, 21, 24].includes(words.length))\n        throw new Error('Invalid mnemonic');\n    return { nfkd: norm, words };\n}\nfunction assertEntropy(entropy) {\n    _assert_1.default.bytes(entropy, 16, 20, 24, 28, 32);\n}\n/**\n * Generate x random words. Uses Cryptographically-Secure Random Number Generator.\n * @param wordlist imported wordlist for specific language\n * @param strength mnemonic strength 128-256 bits\n * @example\n * generateMnemonic(wordlist, 128)\n * // 'legal winner thank year wave sausage worth useful legal winner thank yellow'\n */\nfunction generateMnemonic(wordlist, strength = 128) {\n    _assert_1.default.number(strength);\n    if (strength % 32 !== 0 || strength > 256)\n        throw new TypeError('Invalid entropy');\n    return entropyToMnemonic((0, utils_1.randomBytes)(strength / 8), wordlist);\n}\nexports.generateMnemonic = generateMnemonic;\nconst calcChecksum = (entropy) => {\n    // Checksum is ent.length/4 bits long\n    const bitsLeft = 8 - entropy.length / 4;\n    // Zero rightmost \"bitsLeft\" bits in byte\n    // For example: bitsLeft=4 val=10111101 -> 10110000\n    return new Uint8Array([((0, sha256_1.sha256)(entropy)[0] >> bitsLeft) << bitsLeft]);\n};\nfunction getCoder(wordlist) {\n    if (!Array.isArray(wordlist) || wordlist.length !== 2 ** 11 || typeof wordlist[0] !== 'string')\n        throw new Error('Worlist: expected array of 2048 strings');\n    wordlist.forEach((i) => {\n        if (typeof i !== 'string')\n            throw new Error(`Wordlist: non-string element: ${i}`);\n    });\n    return base_1.utils.chain(base_1.utils.checksum(1, calcChecksum), base_1.utils.radix2(11, true), base_1.utils.alphabet(wordlist));\n}\n/**\n * Reversible: Converts mnemonic string to raw entropy in form of byte array.\n * @param mnemonic 12-24 words\n * @param wordlist imported wordlist for specific language\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * mnemonicToEntropy(mnem, wordlist)\n * // Produces\n * new Uint8Array([\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f\n * ])\n */\nfunction mnemonicToEntropy(mnemonic, wordlist) {\n    const { words } = normalize(mnemonic);\n    const entropy = getCoder(wordlist).decode(words);\n    assertEntropy(entropy);\n    return entropy;\n}\nexports.mnemonicToEntropy = mnemonicToEntropy;\n/**\n * Reversible: Converts raw entropy in form of byte array to mnemonic string.\n * @param entropy byte array\n * @param wordlist imported wordlist for specific language\n * @returns 12-24 words\n * @example\n * const ent = new Uint8Array([\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f\n * ]);\n * entropyToMnemonic(ent, wordlist);\n * // 'legal winner thank year wave sausage worth useful legal winner thank yellow'\n */\nfunction entropyToMnemonic(entropy, wordlist) {\n    assertEntropy(entropy);\n    const words = getCoder(wordlist).encode(entropy);\n    return words.join(isJapanese(wordlist) ? '\\u3000' : ' ');\n}\nexports.entropyToMnemonic = entropyToMnemonic;\n/**\n * Validates mnemonic for being 12-24 words contained in `wordlist`.\n */\nfunction validateMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}\nexports.validateMnemonic = validateMnemonic;\nconst salt = (passphrase) => nfkd(`mnemonic${passphrase}`);\n/**\n * Irreversible: Uses KDF to derive 64 bytes of key data from mnemonic + optional password.\n * @param mnemonic 12-24 words\n * @param passphrase string that will additionally protect the key\n * @returns 64 bytes of key data\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * await mnemonicToSeed(mnem, 'password');\n * // new Uint8Array([...64 bytes])\n */\nfunction mnemonicToSeed(mnemonic, passphrase = '') {\n    return (0, pbkdf2_1.pbkdf2Async)(sha512_1.sha512, normalize(mnemonic).nfkd, salt(passphrase), { c: 2048, dkLen: 64 });\n}\nexports.mnemonicToSeed = mnemonicToSeed;\n/**\n * Irreversible: Uses KDF to derive 64 bytes of key data from mnemonic + optional password.\n * @param mnemonic 12-24 words\n * @param passphrase string that will additionally protect the key\n * @returns 64 bytes of key data\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * mnemonicToSeedSync(mnem, 'password');\n * // new Uint8Array([...64 bytes])\n */\nfunction mnemonicToSeedSync(mnemonic, passphrase = '') {\n    return (0, pbkdf2_1.pbkdf2)(sha512_1.sha512, normalize(mnemonic).nfkd, salt(passphrase), { c: 2048, dkLen: 64 });\n}\nexports.mnemonicToSeedSync = mnemonicToSeedSync;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wordlist = void 0;\nexports.wordlist = `abandon\nability\nable\nabout\nabove\nabsent\nabsorb\nabstract\nabsurd\nabuse\naccess\naccident\naccount\naccuse\nachieve\nacid\nacoustic\nacquire\nacross\nact\naction\nactor\nactress\nactual\nadapt\nadd\naddict\naddress\nadjust\nadmit\nadult\nadvance\nadvice\naerobic\naffair\nafford\nafraid\nagain\nage\nagent\nagree\nahead\naim\nair\nairport\naisle\nalarm\nalbum\nalcohol\nalert\nalien\nall\nalley\nallow\nalmost\nalone\nalpha\nalready\nalso\nalter\nalways\namateur\namazing\namong\namount\namused\nanalyst\nanchor\nancient\nanger\nangle\nangry\nanimal\nankle\nannounce\nannual\nanother\nanswer\nantenna\nantique\nanxiety\nany\napart\napology\nappear\napple\napprove\napril\narch\narctic\narea\narena\nargue\narm\narmed\narmor\narmy\naround\narrange\narrest\narrive\narrow\nart\nartefact\nartist\nartwork\nask\naspect\nassault\nasset\nassist\nassume\nasthma\nathlete\natom\nattack\nattend\nattitude\nattract\nauction\naudit\naugust\naunt\nauthor\nauto\nautumn\naverage\navocado\navoid\nawake\naware\naway\nawesome\nawful\nawkward\naxis\nbaby\nbachelor\nbacon\nbadge\nbag\nbalance\nbalcony\nball\nbamboo\nbanana\nbanner\nbar\nbarely\nbargain\nbarrel\nbase\nbasic\nbasket\nbattle\nbeach\nbean\nbeauty\nbecause\nbecome\nbeef\nbefore\nbegin\nbehave\nbehind\nbelieve\nbelow\nbelt\nbench\nbenefit\nbest\nbetray\nbetter\nbetween\nbeyond\nbicycle\nbid\nbike\nbind\nbiology\nbird\nbirth\nbitter\nblack\nblade\nblame\nblanket\nblast\nbleak\nbless\nblind\nblood\nblossom\nblouse\nblue\nblur\nblush\nboard\nboat\nbody\nboil\nbomb\nbone\nbonus\nbook\nboost\nborder\nboring\nborrow\nboss\nbottom\nbounce\nbox\nboy\nbracket\nbrain\nbrand\nbrass\nbrave\nbread\nbreeze\nbrick\nbridge\nbrief\nbright\nbring\nbrisk\nbroccoli\nbroken\nbronze\nbroom\nbrother\nbrown\nbrush\nbubble\nbuddy\nbudget\nbuffalo\nbuild\nbulb\nbulk\nbullet\nbundle\nbunker\nburden\nburger\nburst\nbus\nbusiness\nbusy\nbutter\nbuyer\nbuzz\ncabbage\ncabin\ncable\ncactus\ncage\ncake\ncall\ncalm\ncamera\ncamp\ncan\ncanal\ncancel\ncandy\ncannon\ncanoe\ncanvas\ncanyon\ncapable\ncapital\ncaptain\ncar\ncarbon\ncard\ncargo\ncarpet\ncarry\ncart\ncase\ncash\ncasino\ncastle\ncasual\ncat\ncatalog\ncatch\ncategory\ncattle\ncaught\ncause\ncaution\ncave\nceiling\ncelery\ncement\ncensus\ncentury\ncereal\ncertain\nchair\nchalk\nchampion\nchange\nchaos\nchapter\ncharge\nchase\nchat\ncheap\ncheck\ncheese\nchef\ncherry\nchest\nchicken\nchief\nchild\nchimney\nchoice\nchoose\nchronic\nchuckle\nchunk\nchurn\ncigar\ncinnamon\ncircle\ncitizen\ncity\ncivil\nclaim\nclap\nclarify\nclaw\nclay\nclean\nclerk\nclever\nclick\nclient\ncliff\nclimb\nclinic\nclip\nclock\nclog\nclose\ncloth\ncloud\nclown\nclub\nclump\ncluster\nclutch\ncoach\ncoast\ncoconut\ncode\ncoffee\ncoil\ncoin\ncollect\ncolor\ncolumn\ncombine\ncome\ncomfort\ncomic\ncommon\ncompany\nconcert\nconduct\nconfirm\ncongress\nconnect\nconsider\ncontrol\nconvince\ncook\ncool\ncopper\ncopy\ncoral\ncore\ncorn\ncorrect\ncost\ncotton\ncouch\ncountry\ncouple\ncourse\ncousin\ncover\ncoyote\ncrack\ncradle\ncraft\ncram\ncrane\ncrash\ncrater\ncrawl\ncrazy\ncream\ncredit\ncreek\ncrew\ncricket\ncrime\ncrisp\ncritic\ncrop\ncross\ncrouch\ncrowd\ncrucial\ncruel\ncruise\ncrumble\ncrunch\ncrush\ncry\ncrystal\ncube\nculture\ncup\ncupboard\ncurious\ncurrent\ncurtain\ncurve\ncushion\ncustom\ncute\ncycle\ndad\ndamage\ndamp\ndance\ndanger\ndaring\ndash\ndaughter\ndawn\nday\ndeal\ndebate\ndebris\ndecade\ndecember\ndecide\ndecline\ndecorate\ndecrease\ndeer\ndefense\ndefine\ndefy\ndegree\ndelay\ndeliver\ndemand\ndemise\ndenial\ndentist\ndeny\ndepart\ndepend\ndeposit\ndepth\ndeputy\nderive\ndescribe\ndesert\ndesign\ndesk\ndespair\ndestroy\ndetail\ndetect\ndevelop\ndevice\ndevote\ndiagram\ndial\ndiamond\ndiary\ndice\ndiesel\ndiet\ndiffer\ndigital\ndignity\ndilemma\ndinner\ndinosaur\ndirect\ndirt\ndisagree\ndiscover\ndisease\ndish\ndismiss\ndisorder\ndisplay\ndistance\ndivert\ndivide\ndivorce\ndizzy\ndoctor\ndocument\ndog\ndoll\ndolphin\ndomain\ndonate\ndonkey\ndonor\ndoor\ndose\ndouble\ndove\ndraft\ndragon\ndrama\ndrastic\ndraw\ndream\ndress\ndrift\ndrill\ndrink\ndrip\ndrive\ndrop\ndrum\ndry\nduck\ndumb\ndune\nduring\ndust\ndutch\nduty\ndwarf\ndynamic\neager\neagle\nearly\nearn\nearth\neasily\neast\neasy\necho\necology\neconomy\nedge\nedit\neducate\neffort\negg\neight\neither\nelbow\nelder\nelectric\nelegant\nelement\nelephant\nelevator\nelite\nelse\nembark\nembody\nembrace\nemerge\nemotion\nemploy\nempower\nempty\nenable\nenact\nend\nendless\nendorse\nenemy\nenergy\nenforce\nengage\nengine\nenhance\nenjoy\nenlist\nenough\nenrich\nenroll\nensure\nenter\nentire\nentry\nenvelope\nepisode\nequal\nequip\nera\nerase\nerode\nerosion\nerror\nerupt\nescape\nessay\nessence\nestate\neternal\nethics\nevidence\nevil\nevoke\nevolve\nexact\nexample\nexcess\nexchange\nexcite\nexclude\nexcuse\nexecute\nexercise\nexhaust\nexhibit\nexile\nexist\nexit\nexotic\nexpand\nexpect\nexpire\nexplain\nexpose\nexpress\nextend\nextra\neye\neyebrow\nfabric\nface\nfaculty\nfade\nfaint\nfaith\nfall\nfalse\nfame\nfamily\nfamous\nfan\nfancy\nfantasy\nfarm\nfashion\nfat\nfatal\nfather\nfatigue\nfault\nfavorite\nfeature\nfebruary\nfederal\nfee\nfeed\nfeel\nfemale\nfence\nfestival\nfetch\nfever\nfew\nfiber\nfiction\nfield\nfigure\nfile\nfilm\nfilter\nfinal\nfind\nfine\nfinger\nfinish\nfire\nfirm\nfirst\nfiscal\nfish\nfit\nfitness\nfix\nflag\nflame\nflash\nflat\nflavor\nflee\nflight\nflip\nfloat\nflock\nfloor\nflower\nfluid\nflush\nfly\nfoam\nfocus\nfog\nfoil\nfold\nfollow\nfood\nfoot\nforce\nforest\nforget\nfork\nfortune\nforum\nforward\nfossil\nfoster\nfound\nfox\nfragile\nframe\nfrequent\nfresh\nfriend\nfringe\nfrog\nfront\nfrost\nfrown\nfrozen\nfruit\nfuel\nfun\nfunny\nfurnace\nfury\nfuture\ngadget\ngain\ngalaxy\ngallery\ngame\ngap\ngarage\ngarbage\ngarden\ngarlic\ngarment\ngas\ngasp\ngate\ngather\ngauge\ngaze\ngeneral\ngenius\ngenre\ngentle\ngenuine\ngesture\nghost\ngiant\ngift\ngiggle\nginger\ngiraffe\ngirl\ngive\nglad\nglance\nglare\nglass\nglide\nglimpse\nglobe\ngloom\nglory\nglove\nglow\nglue\ngoat\ngoddess\ngold\ngood\ngoose\ngorilla\ngospel\ngossip\ngovern\ngown\ngrab\ngrace\ngrain\ngrant\ngrape\ngrass\ngravity\ngreat\ngreen\ngrid\ngrief\ngrit\ngrocery\ngroup\ngrow\ngrunt\nguard\nguess\nguide\nguilt\nguitar\ngun\ngym\nhabit\nhair\nhalf\nhammer\nhamster\nhand\nhappy\nharbor\nhard\nharsh\nharvest\nhat\nhave\nhawk\nhazard\nhead\nhealth\nheart\nheavy\nhedgehog\nheight\nhello\nhelmet\nhelp\nhen\nhero\nhidden\nhigh\nhill\nhint\nhip\nhire\nhistory\nhobby\nhockey\nhold\nhole\nholiday\nhollow\nhome\nhoney\nhood\nhope\nhorn\nhorror\nhorse\nhospital\nhost\nhotel\nhour\nhover\nhub\nhuge\nhuman\nhumble\nhumor\nhundred\nhungry\nhunt\nhurdle\nhurry\nhurt\nhusband\nhybrid\nice\nicon\nidea\nidentify\nidle\nignore\nill\nillegal\nillness\nimage\nimitate\nimmense\nimmune\nimpact\nimpose\nimprove\nimpulse\ninch\ninclude\nincome\nincrease\nindex\nindicate\nindoor\nindustry\ninfant\ninflict\ninform\ninhale\ninherit\ninitial\ninject\ninjury\ninmate\ninner\ninnocent\ninput\ninquiry\ninsane\ninsect\ninside\ninspire\ninstall\nintact\ninterest\ninto\ninvest\ninvite\ninvolve\niron\nisland\nisolate\nissue\nitem\nivory\njacket\njaguar\njar\njazz\njealous\njeans\njelly\njewel\njob\njoin\njoke\njourney\njoy\njudge\njuice\njump\njungle\njunior\njunk\njust\nkangaroo\nkeen\nkeep\nketchup\nkey\nkick\nkid\nkidney\nkind\nkingdom\nkiss\nkit\nkitchen\nkite\nkitten\nkiwi\nknee\nknife\nknock\nknow\nlab\nlabel\nlabor\nladder\nlady\nlake\nlamp\nlanguage\nlaptop\nlarge\nlater\nlatin\nlaugh\nlaundry\nlava\nlaw\nlawn\nlawsuit\nlayer\nlazy\nleader\nleaf\nlearn\nleave\nlecture\nleft\nleg\nlegal\nlegend\nleisure\nlemon\nlend\nlength\nlens\nleopard\nlesson\nletter\nlevel\nliar\nliberty\nlibrary\nlicense\nlife\nlift\nlight\nlike\nlimb\nlimit\nlink\nlion\nliquid\nlist\nlittle\nlive\nlizard\nload\nloan\nlobster\nlocal\nlock\nlogic\nlonely\nlong\nloop\nlottery\nloud\nlounge\nlove\nloyal\nlucky\nluggage\nlumber\nlunar\nlunch\nluxury\nlyrics\nmachine\nmad\nmagic\nmagnet\nmaid\nmail\nmain\nmajor\nmake\nmammal\nman\nmanage\nmandate\nmango\nmansion\nmanual\nmaple\nmarble\nmarch\nmargin\nmarine\nmarket\nmarriage\nmask\nmass\nmaster\nmatch\nmaterial\nmath\nmatrix\nmatter\nmaximum\nmaze\nmeadow\nmean\nmeasure\nmeat\nmechanic\nmedal\nmedia\nmelody\nmelt\nmember\nmemory\nmention\nmenu\nmercy\nmerge\nmerit\nmerry\nmesh\nmessage\nmetal\nmethod\nmiddle\nmidnight\nmilk\nmillion\nmimic\nmind\nminimum\nminor\nminute\nmiracle\nmirror\nmisery\nmiss\nmistake\nmix\nmixed\nmixture\nmobile\nmodel\nmodify\nmom\nmoment\nmonitor\nmonkey\nmonster\nmonth\nmoon\nmoral\nmore\nmorning\nmosquito\nmother\nmotion\nmotor\nmountain\nmouse\nmove\nmovie\nmuch\nmuffin\nmule\nmultiply\nmuscle\nmuseum\nmushroom\nmusic\nmust\nmutual\nmyself\nmystery\nmyth\nnaive\nname\nnapkin\nnarrow\nnasty\nnation\nnature\nnear\nneck\nneed\nnegative\nneglect\nneither\nnephew\nnerve\nnest\nnet\nnetwork\nneutral\nnever\nnews\nnext\nnice\nnight\nnoble\nnoise\nnominee\nnoodle\nnormal\nnorth\nnose\nnotable\nnote\nnothing\nnotice\nnovel\nnow\nnuclear\nnumber\nnurse\nnut\noak\nobey\nobject\noblige\nobscure\nobserve\nobtain\nobvious\noccur\nocean\noctober\nodor\noff\noffer\noffice\noften\noil\nokay\nold\nolive\nolympic\nomit\nonce\none\nonion\nonline\nonly\nopen\nopera\nopinion\noppose\noption\norange\norbit\norchard\norder\nordinary\norgan\norient\noriginal\norphan\nostrich\nother\noutdoor\nouter\noutput\noutside\noval\noven\nover\nown\nowner\noxygen\noyster\nozone\npact\npaddle\npage\npair\npalace\npalm\npanda\npanel\npanic\npanther\npaper\nparade\nparent\npark\nparrot\nparty\npass\npatch\npath\npatient\npatrol\npattern\npause\npave\npayment\npeace\npeanut\npear\npeasant\npelican\npen\npenalty\npencil\npeople\npepper\nperfect\npermit\nperson\npet\nphone\nphoto\nphrase\nphysical\npiano\npicnic\npicture\npiece\npig\npigeon\npill\npilot\npink\npioneer\npipe\npistol\npitch\npizza\nplace\nplanet\nplastic\nplate\nplay\nplease\npledge\npluck\nplug\nplunge\npoem\npoet\npoint\npolar\npole\npolice\npond\npony\npool\npopular\nportion\nposition\npossible\npost\npotato\npottery\npoverty\npowder\npower\npractice\npraise\npredict\nprefer\nprepare\npresent\npretty\nprevent\nprice\npride\nprimary\nprint\npriority\nprison\nprivate\nprize\nproblem\nprocess\nproduce\nprofit\nprogram\nproject\npromote\nproof\nproperty\nprosper\nprotect\nproud\nprovide\npublic\npudding\npull\npulp\npulse\npumpkin\npunch\npupil\npuppy\npurchase\npurity\npurpose\npurse\npush\nput\npuzzle\npyramid\nquality\nquantum\nquarter\nquestion\nquick\nquit\nquiz\nquote\nrabbit\nraccoon\nrace\nrack\nradar\nradio\nrail\nrain\nraise\nrally\nramp\nranch\nrandom\nrange\nrapid\nrare\nrate\nrather\nraven\nraw\nrazor\nready\nreal\nreason\nrebel\nrebuild\nrecall\nreceive\nrecipe\nrecord\nrecycle\nreduce\nreflect\nreform\nrefuse\nregion\nregret\nregular\nreject\nrelax\nrelease\nrelief\nrely\nremain\nremember\nremind\nremove\nrender\nrenew\nrent\nreopen\nrepair\nrepeat\nreplace\nreport\nrequire\nrescue\nresemble\nresist\nresource\nresponse\nresult\nretire\nretreat\nreturn\nreunion\nreveal\nreview\nreward\nrhythm\nrib\nribbon\nrice\nrich\nride\nridge\nrifle\nright\nrigid\nring\nriot\nripple\nrisk\nritual\nrival\nriver\nroad\nroast\nrobot\nrobust\nrocket\nromance\nroof\nrookie\nroom\nrose\nrotate\nrough\nround\nroute\nroyal\nrubber\nrude\nrug\nrule\nrun\nrunway\nrural\nsad\nsaddle\nsadness\nsafe\nsail\nsalad\nsalmon\nsalon\nsalt\nsalute\nsame\nsample\nsand\nsatisfy\nsatoshi\nsauce\nsausage\nsave\nsay\nscale\nscan\nscare\nscatter\nscene\nscheme\nschool\nscience\nscissors\nscorpion\nscout\nscrap\nscreen\nscript\nscrub\nsea\nsearch\nseason\nseat\nsecond\nsecret\nsection\nsecurity\nseed\nseek\nsegment\nselect\nsell\nseminar\nsenior\nsense\nsentence\nseries\nservice\nsession\nsettle\nsetup\nseven\nshadow\nshaft\nshallow\nshare\nshed\nshell\nsheriff\nshield\nshift\nshine\nship\nshiver\nshock\nshoe\nshoot\nshop\nshort\nshoulder\nshove\nshrimp\nshrug\nshuffle\nshy\nsibling\nsick\nside\nsiege\nsight\nsign\nsilent\nsilk\nsilly\nsilver\nsimilar\nsimple\nsince\nsing\nsiren\nsister\nsituate\nsix\nsize\nskate\nsketch\nski\nskill\nskin\nskirt\nskull\nslab\nslam\nsleep\nslender\nslice\nslide\nslight\nslim\nslogan\nslot\nslow\nslush\nsmall\nsmart\nsmile\nsmoke\nsmooth\nsnack\nsnake\nsnap\nsniff\nsnow\nsoap\nsoccer\nsocial\nsock\nsoda\nsoft\nsolar\nsoldier\nsolid\nsolution\nsolve\nsomeone\nsong\nsoon\nsorry\nsort\nsoul\nsound\nsoup\nsource\nsouth\nspace\nspare\nspatial\nspawn\nspeak\nspecial\nspeed\nspell\nspend\nsphere\nspice\nspider\nspike\nspin\nspirit\nsplit\nspoil\nsponsor\nspoon\nsport\nspot\nspray\nspread\nspring\nspy\nsquare\nsqueeze\nsquirrel\nstable\nstadium\nstaff\nstage\nstairs\nstamp\nstand\nstart\nstate\nstay\nsteak\nsteel\nstem\nstep\nstereo\nstick\nstill\nsting\nstock\nstomach\nstone\nstool\nstory\nstove\nstrategy\nstreet\nstrike\nstrong\nstruggle\nstudent\nstuff\nstumble\nstyle\nsubject\nsubmit\nsubway\nsuccess\nsuch\nsudden\nsuffer\nsugar\nsuggest\nsuit\nsummer\nsun\nsunny\nsunset\nsuper\nsupply\nsupreme\nsure\nsurface\nsurge\nsurprise\nsurround\nsurvey\nsuspect\nsustain\nswallow\nswamp\nswap\nswarm\nswear\nsweet\nswift\nswim\nswing\nswitch\nsword\nsymbol\nsymptom\nsyrup\nsystem\ntable\ntackle\ntag\ntail\ntalent\ntalk\ntank\ntape\ntarget\ntask\ntaste\ntattoo\ntaxi\nteach\nteam\ntell\nten\ntenant\ntennis\ntent\nterm\ntest\ntext\nthank\nthat\ntheme\nthen\ntheory\nthere\nthey\nthing\nthis\nthought\nthree\nthrive\nthrow\nthumb\nthunder\nticket\ntide\ntiger\ntilt\ntimber\ntime\ntiny\ntip\ntired\ntissue\ntitle\ntoast\ntobacco\ntoday\ntoddler\ntoe\ntogether\ntoilet\ntoken\ntomato\ntomorrow\ntone\ntongue\ntonight\ntool\ntooth\ntop\ntopic\ntopple\ntorch\ntornado\ntortoise\ntoss\ntotal\ntourist\ntoward\ntower\ntown\ntoy\ntrack\ntrade\ntraffic\ntragic\ntrain\ntransfer\ntrap\ntrash\ntravel\ntray\ntreat\ntree\ntrend\ntrial\ntribe\ntrick\ntrigger\ntrim\ntrip\ntrophy\ntrouble\ntruck\ntrue\ntruly\ntrumpet\ntrust\ntruth\ntry\ntube\ntuition\ntumble\ntuna\ntunnel\nturkey\nturn\nturtle\ntwelve\ntwenty\ntwice\ntwin\ntwist\ntwo\ntype\ntypical\nugly\numbrella\nunable\nunaware\nuncle\nuncover\nunder\nundo\nunfair\nunfold\nunhappy\nuniform\nunique\nunit\nuniverse\nunknown\nunlock\nuntil\nunusual\nunveil\nupdate\nupgrade\nuphold\nupon\nupper\nupset\nurban\nurge\nusage\nuse\nused\nuseful\nuseless\nusual\nutility\nvacant\nvacuum\nvague\nvalid\nvalley\nvalve\nvan\nvanish\nvapor\nvarious\nvast\nvault\nvehicle\nvelvet\nvendor\nventure\nvenue\nverb\nverify\nversion\nvery\nvessel\nveteran\nviable\nvibrant\nvicious\nvictory\nvideo\nview\nvillage\nvintage\nviolin\nvirtual\nvirus\nvisa\nvisit\nvisual\nvital\nvivid\nvocal\nvoice\nvoid\nvolcano\nvolume\nvote\nvoyage\nwage\nwagon\nwait\nwalk\nwall\nwalnut\nwant\nwarfare\nwarm\nwarrior\nwash\nwasp\nwaste\nwater\nwave\nway\nwealth\nweapon\nwear\nweasel\nweather\nweb\nwedding\nweekend\nweird\nwelcome\nwest\nwet\nwhale\nwhat\nwheat\nwheel\nwhen\nwhere\nwhip\nwhisper\nwide\nwidth\nwife\nwild\nwill\nwin\nwindow\nwine\nwing\nwink\nwinner\nwinter\nwire\nwisdom\nwise\nwish\nwitness\nwolf\nwoman\nwonder\nwood\nwool\nword\nwork\nworld\nworry\nworth\nwrap\nwreck\nwrestle\nwrist\nwrite\nwrong\nyard\nyear\nyellow\nyou\nyoung\nyouth\nzebra\nzero\nzone\nzoo`.split('\\n');\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) {\n    } else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source)\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = new Uint8Array(zeroes + (size - it4))\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","const basex = require('base-x')\nconst ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexport function bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexport function bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexport function hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexport function exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexport function output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexport default assert;\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nimport { crypto } from '@noble/hashes/crypto';\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nexport function bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('deadbeef')\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto.web) {\n        return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto.node) {\n        return new Uint8Array(crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\n","export const crypto = {\n    node: undefined,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\n","import assert from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nclass HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assert.hash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assert.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n","import assert from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        assert.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\nexport const sha224 = wrapConstructor(() => new SHA224());\n","/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst CURVE = Object.freeze({\n    a: _0n,\n    b: BigInt(7),\n    P: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    n: BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n});\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst endo = {\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n    splitScalar(k) {\n        const { n } = CURVE;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000');\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg)\n            k1 = n - k1;\n        if (k2neg)\n            k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n            throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n    },\n};\nconst fieldLen = 32;\nconst groupLen = 32;\nconst hashLen = 32;\nconst compressedLen = fieldLen + 1;\nconst uncompressedLen = 2 * fieldLen + 1;\nexport { CURVE };\nfunction weierstrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass ShaError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nfunction assertJacPoint(other) {\n    if (!(other instanceof JacobianPoint))\n        throw new TypeError('JacobianPoint expected');\n}\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return JacobianPoint.ZERO;\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(B * B);\n        const x1b = X1 + B;\n        const D = mod(_2n * (mod(x1b * x1b) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E * E);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H * H);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r * r - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        const P0 = JacobianPoint.ZERO;\n        if (typeof scalar === 'bigint' && scalar === _0n)\n            return P0;\n        let n = normalizeScalar(scalar);\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.BASE;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            const offset1 = offset;\n            const offset2 = offset + Math.abs(wbits) - 1;\n            const cond1 = window % 2 !== 0;\n            const cond2 = wbits < 0;\n            if (wbits === 0) {\n                f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n            }\n            else {\n                p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            k1p = constTimeNegate(k1neg, k1p);\n            k2p = constTimeNegate(k2neg, k2p);\n            k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ) {\n        const { x, y, z } = this;\n        const is0 = this.equals(JacobianPoint.ZERO);\n        if (invZ == null)\n            invZ = is0 ? _8n : invert(z);\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (is0)\n            return Point.ZERO;\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nfunction constTimeNegate(condition, item) {\n    const neg = item.negate();\n    return condition ? neg : item;\n}\nconst pointPrecomputes = new WeakMap();\nexport class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    hasEvenY() {\n        return this.y % _2n === _0n;\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weierstrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, fieldLen + 1));\n        const y = bytesToNumber(bytes.subarray(fieldLen + 1, fieldLen * 2 + 1));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === fieldLen)\n            return this.fromCompressedHex(bytes);\n        if (len === compressedLen && (header === 0x02 || header === 0x03)) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === uncompressedLen && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        const { r, s } = normalizeSignature(signature);\n        if (![0, 1, 2, 3].includes(recovery))\n            throw new Error('Cannot recover: invalid recovery bit');\n        const h = truncateHash(ensureBytes(msgHash));\n        const { n } = CURVE;\n        const radj = recovery === 2 || recovery === 3 ? r + n : r;\n        const rinv = invert(radj, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(radj));\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.hasEvenY() ? '02' : '03';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weierstrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = a === _0n || a === _1n || this !== Point.BASE ? P.multiplyUnsafe(a) : P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nexport class Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = hex instanceof Uint8Array;\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = hex instanceof Uint8Array;\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, mod(-this.s, CURVE.n)) : this;\n    }\n    toDERRawBytes() {\n        return hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const sHexL = sHex.length / 2;\n        const rHexL = rHex.length / 2;\n        const sLen = numberToHexUnpadded(sHexL);\n        const rLen = numberToHexUnpadded(rHexL);\n        const length = numberToHexUnpadded(rHexL + sHexL + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nfunction concatBytes(...arrays) {\n    if (!arrays.every((b) => b instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nfunction numTo32bStr(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    if (!(_0n <= num && num < POW_2_256))\n        throw new Error('Expected number 0 <= n < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    const b = hexToBytes(numTo32bStr(num));\n    if (b.length !== 32)\n        throw new Error('Error: expected 32 bytes');\n    return b;\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    const rt = pow2(t2, _2n);\n    const xc = (rt * rt) % P;\n    if (xc !== x)\n        throw new Error('Cannot find square root');\n    return rt;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nfunction bits2int_2(bytes) {\n    const delta = bytes.length * 8 - groupLen * 8;\n    const num = bytesToNumber(bytes);\n    return delta > 0 ? num >> BigInt(delta) : num;\n}\nfunction truncateHash(hash, truncateOnly = false) {\n    const h = bits2int_2(hash);\n    if (truncateOnly)\n        return h;\n    const { n } = CURVE;\n    return h >= n ? h - n : h;\n}\nlet _sha256Sync;\nlet _hmacSha256Sync;\nclass HmacDrbg {\n    constructor(hashLen, qByteLen) {\n        this.hashLen = hashLen;\n        this.qByteLen = qByteLen;\n        if (typeof hashLen !== 'number' || hashLen < 2)\n            throw new Error('hashLen must be a number');\n        if (typeof qByteLen !== 'number' || qByteLen < 2)\n            throw new Error('qByteLen must be a number');\n        this.v = new Uint8Array(hashLen).fill(1);\n        this.k = new Uint8Array(hashLen).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        return _hmacSha256Sync(this.k, ...values);\n    }\n    checkSync() {\n        if (typeof _hmacSha256Sync !== 'function')\n            throw new ShaError('hmacSha256Sync needs to be set');\n    }\n    incr() {\n        if (this.counter >= 1000)\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.checkSync();\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = await this.hmac(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n    generateSync() {\n        this.checkSync();\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = this.hmacSync(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d, lowS = true) {\n    const { n } = CURVE;\n    const k = truncateHash(kBytes, true);\n    if (!isWithinCurveOrder(k))\n        return;\n    const kinv = invert(k, n);\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(kinv * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    let sig = new Signature(r, s);\n    let recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    if (lowS && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 2 * groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (key instanceof Uint8Array) {\n        if (key.length !== groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nexport function getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexport function recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nfunction isProbPub(item) {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === compressedLen || len === uncompressedLen;\n    if (str)\n        return len === compressedLen * 2 || len === uncompressedLen * 2;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nexport function getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isProbPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isProbPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nfunction bits2int(bytes) {\n    const slice = bytes.length > fieldLen ? bytes.slice(0, fieldLen) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    return numTo32b(num);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = utils.randomBytes(fieldLen);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== fieldLen)\n            throw new Error(`sign: Expected ${fieldLen} bytes of extra data`);\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    const { sig, recovery } = recSig;\n    const { der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    await drbg.reseed(seed);\n    let sig;\n    while (!(sig = kmdToSig(await drbg.generate(), m, d, opts.canonical)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    drbg.reseedSync(seed);\n    let sig;\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d, opts.canonical)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexport { sign, signSync };\nconst vopts = { strict: true };\nexport function verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nfunction schnorrChallengeFinalize(ch) {\n    return mod(bytesToNumber(ch), CURVE.n);\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nclass InternalSchnorrSignature {\n    constructor(message, privateKey, auxRand = utils.randomBytes()) {\n        if (message == null)\n            throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n        this.m = ensureBytes(message);\n        const { x, scalar } = this.getScalar(normalizePrivateKey(privateKey));\n        this.px = x;\n        this.d = scalar;\n        this.rand = ensureBytes(auxRand);\n        if (this.rand.length !== 32)\n            throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    }\n    getScalar(priv) {\n        const point = Point.fromPrivateKey(priv);\n        const scalar = point.hasEvenY() ? priv : CURVE.n - priv;\n        return { point, scalar, x: point.toRawX() };\n    }\n    initNonce(d, t0h) {\n        return numTo32b(d ^ bytesToNumber(t0h));\n    }\n    finalizeNonce(k0h) {\n        const k0 = mod(bytesToNumber(k0h), CURVE.n);\n        if (k0 === _0n)\n            throw new Error('sign: Creation of signature failed. k is zero');\n        const { point: R, x: rx, scalar: k } = this.getScalar(k0);\n        return { R, rx, k };\n    }\n    finalizeSig(R, k, e, d) {\n        return new SchnorrSignature(R.x, mod(k + e * d, CURVE.n)).toRawBytes();\n    }\n    error() {\n        throw new Error('sign: Invalid signature produced');\n    }\n    async calc() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHash;\n        const t = this.initNonce(d, await tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(await tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(await tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!(await schnorrVerify(sig, m, px)))\n            this.error();\n        return sig;\n    }\n    calcSync() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHashSync;\n        const t = this.initNonce(d, tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!schnorrVerifySync(sig, m, px))\n            this.error();\n        return sig;\n    }\n}\nasync function schnorrSign(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calc();\n}\nfunction schnorrSignSync(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calcSync();\n}\nfunction initSchnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    const sig = raw ? signature : SchnorrSignature.fromHex(signature);\n    if (raw)\n        sig.assertValidity();\n    return {\n        ...sig,\n        m: ensureBytes(message),\n        P: normalizePublicKey(publicKey),\n    };\n}\nfunction finalizeSchnorrVerify(r, P, s, e) {\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !R.hasEvenY() || R.x !== r)\n        return false;\n    return true;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(await utils.taggedHash(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction schnorrVerifySync(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(utils.taggedHashSync(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        if (error instanceof ShaError)\n            throw error;\n        return false;\n    }\n}\nexport const schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    signSync: schnorrSignSync,\n    verifySync: schnorrVerifySync,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nconst TAGS = {\n    challenge: 'BIP0340/challenge',\n    aux: 'BIP0340/aux',\n    nonce: 'BIP0340/nonce',\n};\nconst TAGGED_HASH_PREFIXES = {};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    mod,\n    invert,\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    _bigintTo32Bytes: numTo32b,\n    _normalizePrivateKey: normalizePrivateKey,\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        const minLen = groupLen + 8;\n        if (hash.length < minLen || hash.length > 1024) {\n            throw new Error(`Expected valid bytes of private key as per FIPS 186`);\n        }\n        const num = mod(bytesToNumber(hash), CURVE.n - _1n) + _1n;\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => utils.hashToPrivateKey(utils.randomBytes(groupLen + 8)),\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n    sha256: async (...messages) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', concatBytes(...messages));\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            const hash = createHash('sha256');\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    taggedHash: async (tag, ...messages) => {\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = await utils.sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return utils.sha256(tagP, ...messages);\n    },\n    taggedHashSync: (tag, ...messages) => {\n        if (typeof _sha256Sync !== 'function')\n            throw new ShaError('sha256Sync is undefined, you need to set it');\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = _sha256Sync(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return _sha256Sync(tagP, ...messages);\n    },\n    _JacobianPoint: JacobianPoint,\n};\nObject.defineProperties(utils, {\n    sha256Sync: {\n        configurable: false,\n        get() {\n            return _sha256Sync;\n        },\n        set(val) {\n            if (!_sha256Sync)\n                _sha256Sync = val;\n        },\n    },\n    hmacSha256Sync: {\n        configurable: false,\n        get() {\n            return _hmacSha256Sync;\n        },\n        set(val) {\n            if (!_hmacSha256Sync)\n                _hmacSha256Sync = val;\n        },\n    },\n});\n","import { Logger } from './logger';\nexport const BLOCKSTACK_HANDLER = 'blockstack';\nexport function nextYear() {\n    return new Date(new Date().setFullYear(new Date().getFullYear() + 1));\n}\nexport function nextMonth() {\n    return new Date(new Date().setMonth(new Date().getMonth() + 1));\n}\nexport function nextHour() {\n    return new Date(new Date().setHours(new Date().getHours() + 1));\n}\nexport function megabytesToBytes(megabytes) {\n    if (!Number.isFinite(megabytes)) {\n        return 0;\n    }\n    return Math.floor(megabytes * 1024 * 1024);\n}\nexport function getAesCbcOutputLength(inputByteLength) {\n    const cipherTextLength = (Math.floor(inputByteLength / 16) + 1) * 16;\n    return cipherTextLength;\n}\nexport function getBase64OutputLength(inputByteLength) {\n    const encodedLength = Math.ceil(inputByteLength / 3) * 4;\n    return encodedLength;\n}\nexport function updateQueryStringParameter(uri, key, value) {\n    const re = new RegExp(`([?&])${key}=.*?(&|$)`, 'i');\n    const separator = uri.indexOf('?') !== -1 ? '&' : '?';\n    if (uri.match(re)) {\n        return uri.replace(re, `$1${key}=${value}$2`);\n    }\n    else {\n        return `${uri}${separator}${key}=${value}`;\n    }\n}\nexport function isLaterVersion(v1, v2) {\n    if (v1 === undefined || v1 === '') {\n        v1 = '0.0.0';\n    }\n    if (v2 === undefined || v1 === '') {\n        v2 = '0.0.0';\n    }\n    const v1tuple = v1.split('.').map(x => parseInt(x, 10));\n    const v2tuple = v2.split('.').map(x => parseInt(x, 10));\n    for (let index = 0; index < v2.length; index++) {\n        if (index >= v1.length) {\n            v2tuple.push(0);\n        }\n        if (v1tuple[index] < v2tuple[index]) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function makeUUID4() {\n    let d = new Date().getTime();\n    if (typeof performance !== 'undefined' && typeof performance.now === 'function') {\n        d += performance.now();\n    }\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n        const r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16);\n    });\n}\nexport function isSameOriginAbsoluteUrl(uri1, uri2) {\n    try {\n        const parsedUri1 = new URL(uri1);\n        const parsedUri2 = new URL(uri2);\n        const port1 = parseInt(parsedUri1.port || '0', 10) | 0 || (parsedUri1.protocol === 'https:' ? 443 : 80);\n        const port2 = parseInt(parsedUri2.port || '0', 10) | 0 || (parsedUri2.protocol === 'https:' ? 443 : 80);\n        const match = {\n            scheme: parsedUri1.protocol === parsedUri2.protocol,\n            hostname: parsedUri1.hostname === parsedUri2.hostname,\n            port: port1 === port2,\n            absolute: (uri1.includes('http://') || uri1.includes('https://')) &&\n                (uri2.includes('http://') || uri2.includes('https://')),\n        };\n        return match.scheme && match.hostname && match.port && match.absolute;\n    }\n    catch (error) {\n        console.log(error);\n        console.log('Parsing error in same URL origin check');\n        return false;\n    }\n}\nexport function getGlobalScope() {\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    throw new Error('Unexpected runtime environment - no supported global scope (`window`, `self`, `global`) available');\n}\nfunction getAPIUsageErrorMessage(scopeObject, apiName, usageDesc) {\n    if (usageDesc) {\n        return `Use of '${usageDesc}' requires \\`${apiName}\\` which is unavailable on the '${scopeObject}' object within the currently executing environment.`;\n    }\n    else {\n        return `\\`${apiName}\\` is unavailable on the '${scopeObject}' object within the currently executing environment.`;\n    }\n}\nexport function getGlobalObject(name, { throwIfUnavailable, usageDesc, returnEmptyObject } = {}) {\n    let globalScope = undefined;\n    try {\n        globalScope = getGlobalScope();\n        if (globalScope) {\n            const obj = globalScope[name];\n            if (obj) {\n                return obj;\n            }\n        }\n    }\n    catch (error) {\n        Logger.error(`Error getting object '${name}' from global scope '${globalScope}': ${error}`);\n    }\n    if (throwIfUnavailable) {\n        const errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n        Logger.error(errMsg);\n        throw new Error(errMsg);\n    }\n    if (returnEmptyObject) {\n        return {};\n    }\n    return undefined;\n}\nexport function getGlobalObjects(names, { throwIfUnavailable, usageDesc, returnEmptyObject } = {}) {\n    let globalScope;\n    try {\n        globalScope = getGlobalScope();\n    }\n    catch (error) {\n        Logger.error(`Error getting global scope: ${error}`);\n        if (throwIfUnavailable) {\n            const errMsg = getAPIUsageErrorMessage(globalScope, names[0].toString(), usageDesc);\n            Logger.error(errMsg);\n            throw errMsg;\n        }\n        else if (returnEmptyObject) {\n            globalScope = {};\n        }\n    }\n    const result = {};\n    for (let i = 0; i < names.length; i++) {\n        const name = names[i];\n        try {\n            if (globalScope) {\n                const obj = globalScope[name];\n                if (obj) {\n                    result[name] = obj;\n                }\n                else if (throwIfUnavailable) {\n                    const errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n                    Logger.error(errMsg);\n                    throw new Error(errMsg);\n                }\n                else if (returnEmptyObject) {\n                    result[name] = {};\n                }\n            }\n        }\n        catch (error) {\n            if (throwIfUnavailable) {\n                const errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n                Logger.error(errMsg);\n                throw new Error(errMsg);\n            }\n        }\n    }\n    return result;\n}\nexport function intToBytes(value, signed, byteLength) {\n    return bigIntToBytes(intToBigInt(value, signed), byteLength);\n}\nexport function intToBigInt(value, signed) {\n    let parsedValue = value;\n    if (typeof parsedValue === 'number') {\n        if (!Number.isInteger(parsedValue)) {\n            throw new RangeError(`Invalid value. Values of type 'number' must be an integer.`);\n        }\n        if (parsedValue > Number.MAX_SAFE_INTEGER) {\n            throw new RangeError(`Invalid value. Values of type 'number' must be less than or equal to ${Number.MAX_SAFE_INTEGER}. For larger values, try using a BigInt instead.`);\n        }\n        return BigInt(parsedValue);\n    }\n    if (typeof parsedValue === 'string') {\n        if (parsedValue.toLowerCase().startsWith('0x')) {\n            let hex = parsedValue.slice(2);\n            hex = hex.padStart(hex.length + (hex.length % 2), '0');\n            parsedValue = hexToBytes(hex);\n        }\n        else {\n            try {\n                return BigInt(parsedValue);\n            }\n            catch (error) {\n                if (error instanceof SyntaxError) {\n                    throw new RangeError(`Invalid value. String integer '${parsedValue}' is not finite.`);\n                }\n            }\n        }\n    }\n    if (typeof parsedValue === 'bigint') {\n        return parsedValue;\n    }\n    if (parsedValue instanceof Uint8Array) {\n        if (signed) {\n            const bn = fromTwos(BigInt(`0x${bytesToHex(parsedValue)}`), BigInt(parsedValue.byteLength * 8));\n            return BigInt(bn.toString());\n        }\n        else {\n            return BigInt(`0x${bytesToHex(parsedValue)}`);\n        }\n    }\n    if (parsedValue != null &&\n        typeof parsedValue === 'object' &&\n        parsedValue.constructor.name === 'BN') {\n        return BigInt(parsedValue.toString());\n    }\n    throw new TypeError(`Invalid value type. Must be a number, bigint, integer-string, hex-string, or Uint8Array.`);\n}\nexport function with0x(value) {\n    return value.startsWith('0x') ? value : `0x${value}`;\n}\nexport function hexToBigInt(hex) {\n    if (typeof hex !== 'string')\n        throw new TypeError(`hexToBigInt: expected string, got ${typeof hex}`);\n    return BigInt(`0x${hex}`);\n}\nexport function intToHex(integer, lengthBytes = 8) {\n    const value = typeof integer === 'bigint' ? integer : intToBigInt(integer, false);\n    return value.toString(16).padStart(lengthBytes * 2, '0');\n}\nexport function hexToInt(hex) {\n    return parseInt(hex, 16);\n}\nexport function bigIntToBytes(value, length = 16) {\n    const hex = intToHex(value, length);\n    return hexToBytes(hex);\n}\nexport function toTwos(value, width) {\n    if (value < -(BigInt(1) << (width - BigInt(1))) ||\n        (BigInt(1) << (width - BigInt(1))) - BigInt(1) < value) {\n        throw `Unable to represent integer in width: ${width}`;\n    }\n    if (value >= BigInt(0)) {\n        return BigInt(value);\n    }\n    return value + (BigInt(1) << width);\n}\nfunction nthBit(value, n) {\n    return value & (BigInt(1) << n);\n}\nexport function fromTwos(value, width) {\n    if (nthBit(value, width - BigInt(1))) {\n        return value - (BigInt(1) << width);\n    }\n    return value;\n}\nconst hexes = Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\nexport function bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (const u of uint8a) {\n        hex += hexes[u];\n    }\n    return hex;\n}\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError(`hexToBytes: expected string, got ${typeof hex}`);\n    }\n    const paddedHex = hex.length % 2 ? `0${hex}` : hex;\n    const array = new Uint8Array(paddedHex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = paddedHex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nexport function utf8ToBytes(str) {\n    return new TextEncoder().encode(str);\n}\nexport function bytesToUtf8(arr) {\n    return new TextDecoder().decode(arr);\n}\nexport function asciiToBytes(str) {\n    const byteArray = [];\n    for (let i = 0; i < str.length; i++) {\n        byteArray.push(str.charCodeAt(i) & 0xff);\n    }\n    return new Uint8Array(byteArray);\n}\nexport function bytesToAscii(arr) {\n    return String.fromCharCode.apply(null, arr);\n}\nfunction isNotOctet(octet) {\n    return !Number.isInteger(octet) || octet < 0 || octet > 255;\n}\nexport function octetsToBytes(numbers) {\n    if (numbers.some(isNotOctet))\n        throw new Error('Some values are invalid bytes.');\n    return new Uint8Array(numbers);\n}\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        return utf8ToBytes(data);\n    if (data instanceof Uint8Array)\n        return data;\n    throw new TypeError(`Expected input type is (Uint8Array | string) but got (${typeof data})`);\n}\nexport function concatBytes(...arrays) {\n    if (!arrays.every(a => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nexport function concatArray(elements) {\n    return concatBytes(...elements.map(e => {\n        if (typeof e === 'number')\n            return octetsToBytes([e]);\n        if (e instanceof Array)\n            return octetsToBytes(e);\n        return e;\n    }));\n}\nexport function isInstance(object, type) {\n    return object instanceof type || object?.constructor?.name?.toLowerCase() === type.name;\n}\n//# sourceMappingURL=utils.js.map","export const ERROR_CODES = {\n    MISSING_PARAMETER: 'missing_parameter',\n    REMOTE_SERVICE_ERROR: 'remote_service_error',\n    INVALID_STATE: 'invalid_state',\n    NO_SESSION_DATA: 'no_session_data',\n    DOES_NOT_EXIST: 'does_not_exist',\n    FAILED_DECRYPTION_ERROR: 'failed_decryption_error',\n    INVALID_DID_ERROR: 'invalid_did_error',\n    NOT_ENOUGH_FUNDS_ERROR: 'not_enough_error',\n    INVALID_AMOUNT_ERROR: 'invalid_amount_error',\n    LOGIN_FAILED_ERROR: 'login_failed',\n    SIGNATURE_VERIFICATION_ERROR: 'signature_verification_failure',\n    CONFLICT_ERROR: 'conflict_error',\n    NOT_ENOUGH_PROOF_ERROR: 'not_enough_proof_error',\n    BAD_PATH_ERROR: 'bad_path_error',\n    VALIDATION_ERROR: 'validation_error',\n    PAYLOAD_TOO_LARGE_ERROR: 'payload_too_large_error',\n    PRECONDITION_FAILED_ERROR: 'precondition_failed_error',\n    UNKNOWN: 'unknown',\n};\nObject.freeze(ERROR_CODES);\nexport class BlockstackError extends Error {\n    constructor(error) {\n        super();\n        let message = error.message;\n        let bugDetails = `Error Code: ${error.code}`;\n        let stack = this.stack;\n        if (!stack) {\n            try {\n                throw new Error();\n            }\n            catch (e) {\n                stack = e.stack;\n            }\n        }\n        else {\n            bugDetails += `Stack Trace:\\n${stack}`;\n        }\n        message += `\\nIf you believe this exception is caused by a bug in stacks.js,\n      please file a bug report: https://github.com/blockstack/stacks.js/issues\\n\\n${bugDetails}`;\n        this.message = message;\n        this.code = error.code;\n        this.parameter = error.parameter ? error.parameter : undefined;\n    }\n    toString() {\n        return `${super.toString()}\n    code: ${this.code} param: ${this.parameter ? this.parameter : 'n/a'}`;\n    }\n}\nexport class InvalidParameterError extends BlockstackError {\n    constructor(parameter, message = '') {\n        super({ code: ERROR_CODES.MISSING_PARAMETER, message, parameter });\n        this.name = 'MissingParametersError';\n    }\n}\nexport class MissingParameterError extends BlockstackError {\n    constructor(parameter, message = '') {\n        super({ code: ERROR_CODES.MISSING_PARAMETER, message, parameter });\n        this.name = 'MissingParametersError';\n    }\n}\nexport class RemoteServiceError extends BlockstackError {\n    constructor(response, message = '') {\n        super({ code: ERROR_CODES.REMOTE_SERVICE_ERROR, message });\n        this.response = response;\n    }\n}\nexport class InvalidDIDError extends BlockstackError {\n    constructor(message = '') {\n        super({ code: ERROR_CODES.INVALID_DID_ERROR, message });\n        this.name = 'InvalidDIDError';\n    }\n}\nexport class NotEnoughFundsError extends BlockstackError {\n    constructor(leftToFund) {\n        const message = `Not enough UTXOs to fund. Left to fund: ${leftToFund}`;\n        super({ code: ERROR_CODES.NOT_ENOUGH_FUNDS_ERROR, message });\n        this.leftToFund = leftToFund;\n        this.name = 'NotEnoughFundsError';\n        this.message = message;\n    }\n}\nexport class InvalidAmountError extends BlockstackError {\n    constructor(fees, specifiedAmount) {\n        const message = `Not enough coin to fund fees transaction fees. Fees would be ${fees},` +\n            ` specified spend is  ${specifiedAmount}`;\n        super({ code: ERROR_CODES.INVALID_AMOUNT_ERROR, message });\n        this.specifiedAmount = specifiedAmount;\n        this.fees = fees;\n        this.name = 'InvalidAmountError';\n        this.message = message;\n    }\n}\nexport class LoginFailedError extends BlockstackError {\n    constructor(reason) {\n        const message = `Failed to login: ${reason}`;\n        super({ code: ERROR_CODES.LOGIN_FAILED_ERROR, message });\n        this.message = message;\n        this.name = 'LoginFailedError';\n    }\n}\nexport class SignatureVerificationError extends BlockstackError {\n    constructor(reason) {\n        const message = `Failed to verify signature: ${reason}`;\n        super({ code: ERROR_CODES.SIGNATURE_VERIFICATION_ERROR, message });\n        this.message = message;\n        this.name = 'SignatureVerificationError';\n    }\n}\nexport class FailedDecryptionError extends BlockstackError {\n    constructor(message = 'Unable to decrypt cipher object.') {\n        super({ code: ERROR_CODES.FAILED_DECRYPTION_ERROR, message });\n        this.message = message;\n        this.name = 'FailedDecryptionError';\n    }\n}\nexport class InvalidStateError extends BlockstackError {\n    constructor(message) {\n        super({ code: ERROR_CODES.INVALID_STATE, message });\n        this.message = message;\n        this.name = 'InvalidStateError';\n    }\n}\nexport class NoSessionDataError extends BlockstackError {\n    constructor(message) {\n        super({ code: ERROR_CODES.INVALID_STATE, message });\n        this.message = message;\n        this.name = 'NoSessionDataError';\n    }\n}\nexport class GaiaHubError extends BlockstackError {\n    constructor(error, response) {\n        super(error);\n        if (response) {\n            this.hubError = {\n                statusCode: response.status,\n                statusText: response.statusText,\n            };\n            if (typeof response.body === 'string') {\n                this.hubError.message = response.body;\n            }\n            else if (typeof response.body === 'object') {\n                Object.assign(this.hubError, response.body);\n            }\n        }\n    }\n}\nexport class DoesNotExist extends GaiaHubError {\n    constructor(message, response) {\n        super({ message, code: ERROR_CODES.DOES_NOT_EXIST }, response);\n        this.name = 'DoesNotExist';\n    }\n}\nexport class ConflictError extends GaiaHubError {\n    constructor(message, response) {\n        super({ message, code: ERROR_CODES.CONFLICT_ERROR }, response);\n        this.name = 'ConflictError';\n    }\n}\nexport class NotEnoughProofError extends GaiaHubError {\n    constructor(message, response) {\n        super({ message, code: ERROR_CODES.NOT_ENOUGH_PROOF_ERROR }, response);\n        this.name = 'NotEnoughProofError';\n    }\n}\nexport class BadPathError extends GaiaHubError {\n    constructor(message, response) {\n        super({ message, code: ERROR_CODES.BAD_PATH_ERROR }, response);\n        this.name = 'BadPathError';\n    }\n}\nexport class ValidationError extends GaiaHubError {\n    constructor(message, response) {\n        super({ message, code: ERROR_CODES.VALIDATION_ERROR }, response);\n        this.name = 'ValidationError';\n    }\n}\nexport class PayloadTooLargeError extends GaiaHubError {\n    constructor(message, response, maxUploadByteSize) {\n        super({ message, code: ERROR_CODES.PAYLOAD_TOO_LARGE_ERROR }, response);\n        this.name = 'PayloadTooLargeError';\n        this.maxUploadByteSize = maxUploadByteSize;\n    }\n}\nexport class PreconditionFailedError extends GaiaHubError {\n    constructor(message, response) {\n        super({ message, code: ERROR_CODES.PRECONDITION_FAILED_ERROR }, response);\n        this.name = 'PreconditionFailedError';\n    }\n}\n//# sourceMappingURL=errors.js.map","import { hexToInt } from './utils';\nconst COORDINATE_BYTES = 32;\nexport function parseRecoverableSignatureVrs(signature) {\n    if (signature.length < COORDINATE_BYTES * 2 * 2 + 1) {\n        throw new Error('Invalid signature');\n    }\n    const recoveryIdHex = signature.slice(0, 2);\n    const r = signature.slice(2, 2 + COORDINATE_BYTES * 2);\n    const s = signature.slice(2 + COORDINATE_BYTES * 2);\n    return {\n        recoveryId: hexToInt(recoveryIdHex),\n        r,\n        s,\n    };\n}\nexport function signatureVrsToRsv(signature) {\n    return signature.slice(2) + signature.slice(0, 2);\n}\nexport function signatureRsvToVrs(signature) {\n    return signature.slice(-2) + signature.slice(0, -2);\n}\n//# sourceMappingURL=signatures.js.map","// @ts-ignore\nexport function isSubtleCryptoAvailable(): boolean {\n  return typeof crypto !== 'undefined' && typeof crypto.subtle !== 'undefined';\n}\n\nexport function isNodeCryptoAvailable<T>(\n  withFeature: (nodeCrypto: typeof import('crypto')) => boolean | T\n): false | T;\nexport function isNodeCryptoAvailable<T>(\n  withFeature?: (nodeCrypto: typeof import('crypto')) => boolean | T\n): boolean | T {\n  try {\n    const resolvedResult = require.resolve('crypto');\n    if (!resolvedResult) {\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const cryptoModule = require('crypto') as typeof import('crypto');\n    if (!cryptoModule) {\n      return false;\n    }\n    if (withFeature) {\n      const features = withFeature(cryptoModule);\n      return features;\n    }\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\n\nexport const NO_CRYPTO_LIB =\n  'Crypto lib not found. Either the WebCrypto \"crypto.subtle\" or Node.js \"crypto\" module must be available.';\n\nexport type TriplesecDecryptSignature = (\n  arg: { data: Uint8Array; key: Uint8Array },\n  cb: (err: Error | null, buff: Uint8Array | null) => void\n) => void;\n\nexport interface WebCryptoLib {\n  lib: SubtleCrypto;\n  name: 'subtleCrypto';\n}\n\nexport interface NodeCryptoLib {\n  lib: typeof import('crypto');\n  name: 'nodeCrypto';\n}\n\n// Make async for future version which may lazy load.\n// eslint-disable-next-line @typescript-eslint/require-await\nexport async function getCryptoLib(): Promise<WebCryptoLib | NodeCryptoLib> {\n  if (isSubtleCryptoAvailable()) {\n    return {\n      lib: crypto.subtle,\n      name: 'subtleCrypto',\n    };\n  } else {\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-var-requires\n      const nodeCrypto = require('crypto') as typeof import('crypto');\n      return {\n        lib: nodeCrypto,\n        name: 'nodeCrypto',\n      };\n    } catch (error) {\n      throw new Error(NO_CRYPTO_LIB);\n    }\n  }\n}\n","import { concatBytes } from '@stacks/common';\nimport { getCryptoLib } from './cryptoUtils';\n\ntype NodeCryptoCreateCipher = typeof import('crypto').createCipheriv;\ntype NodeCryptoCreateDecipher = typeof import('crypto').createDecipheriv;\n\nexport type CipherAlgorithm = 'aes-256-cbc' | 'aes-128-cbc';\n\nexport interface AesCipher {\n  encrypt(\n    algorithm: CipherAlgorithm,\n    key: Uint8Array,\n    iv: Uint8Array,\n    data: Uint8Array\n  ): Promise<Uint8Array>;\n\n  decrypt(\n    algorithm: CipherAlgorithm,\n    key: Uint8Array,\n    iv: Uint8Array,\n    data: Uint8Array\n  ): Promise<Uint8Array>;\n}\n\nexport class NodeCryptoAesCipher implements AesCipher {\n  createCipher: NodeCryptoCreateCipher;\n\n  createDecipher: NodeCryptoCreateDecipher;\n\n  constructor(createCipher: NodeCryptoCreateCipher, createDecipher: NodeCryptoCreateDecipher) {\n    this.createCipher = createCipher;\n    this.createDecipher = createDecipher;\n  }\n\n  async encrypt(\n    algorithm: CipherAlgorithm,\n    key: Uint8Array,\n    iv: Uint8Array,\n    data: Uint8Array\n  ): Promise<Uint8Array> {\n    if (algorithm !== 'aes-128-cbc' && algorithm !== 'aes-256-cbc') {\n      throw new Error(`Unsupported cipher algorithm \"${algorithm}\"`);\n    }\n    const cipher = this.createCipher(algorithm, key, iv);\n    const result = new Uint8Array(concatBytes(cipher.update(data), cipher.final()));\n    return Promise.resolve(result);\n  }\n\n  async decrypt(\n    algorithm: CipherAlgorithm,\n    key: Uint8Array,\n    iv: Uint8Array,\n    data: Uint8Array\n  ): Promise<Uint8Array> {\n    if (algorithm !== 'aes-128-cbc' && algorithm !== 'aes-256-cbc') {\n      throw new Error(`Unsupported cipher algorithm \"${algorithm}\"`);\n    }\n    const cipher = this.createDecipher(algorithm, key, iv);\n    const result = new Uint8Array(concatBytes(cipher.update(data), cipher.final()));\n    return Promise.resolve(result);\n  }\n}\n\nexport class WebCryptoAesCipher implements AesCipher {\n  subtleCrypto: SubtleCrypto;\n\n  constructor(subtleCrypto: SubtleCrypto) {\n    this.subtleCrypto = subtleCrypto;\n  }\n\n  async encrypt(\n    algorithm: CipherAlgorithm,\n    key: Uint8Array,\n    iv: Uint8Array,\n    data: Uint8Array\n  ): Promise<Uint8Array> {\n    let algo: string;\n    let length: number;\n    if (algorithm === 'aes-128-cbc') {\n      algo = 'AES-CBC';\n      length = 128;\n    } else if (algorithm === 'aes-256-cbc') {\n      algo = 'AES-CBC';\n      length = 256;\n    } else {\n      throw new Error(`Unsupported cipher algorithm \"${algorithm}\"`);\n    }\n    const cryptoKey = await this.subtleCrypto.importKey('raw', key, { name: algo, length }, false, [\n      'encrypt',\n    ]);\n    const result = await this.subtleCrypto.encrypt({ name: algo, iv }, cryptoKey, data);\n    return new Uint8Array(result);\n  }\n\n  async decrypt(\n    algorithm: CipherAlgorithm,\n    key: Uint8Array,\n    iv: Uint8Array,\n    data: Uint8Array\n  ): Promise<Uint8Array> {\n    let algo: string;\n    let length: number;\n    if (algorithm === 'aes-128-cbc') {\n      algo = 'AES-CBC';\n      length = 128;\n    } else if (algorithm === 'aes-256-cbc') {\n      algo = 'AES-CBC';\n      length = 256;\n    } else {\n      throw new Error(`Unsupported cipher algorithm \"${algorithm}\"`);\n    }\n    const cryptoKey = await this.subtleCrypto.importKey('raw', key, { name: algo, length }, false, [\n      'decrypt',\n    ]);\n    const result = await this.subtleCrypto.decrypt({ name: algo, iv }, cryptoKey, data);\n    return new Uint8Array(result);\n  }\n}\n\nexport async function createCipher(): Promise<AesCipher> {\n  const cryptoLib = await getCryptoLib();\n  if (cryptoLib.name === 'subtleCrypto') {\n    return new WebCryptoAesCipher(cryptoLib.lib);\n  }\n  return new NodeCryptoAesCipher(cryptoLib.lib.createCipheriv, cryptoLib.lib.createDecipheriv);\n}\n","export function equals(a, b) {\n    if (a.byteLength !== b.byteLength)\n        return false;\n    for (let i = 0; i < a.byteLength; i++) {\n        if (a[i] !== b[i])\n            return false;\n    }\n    return true;\n}\nexport function alloc(length, value) {\n    const a = new Uint8Array(length);\n    for (let i = 0; i < length; i++) {\n        a[i] = value;\n    }\n    return a;\n}\nexport function readUInt16BE(source, offset) {\n    return ((source[offset + 0] << 8) | source[offset + 1]) >>> 0;\n}\nexport function writeUInt16BE(source, value, offset) {\n    source[offset + 0] = value >>> 8;\n    source[offset + 1] = value >>> 0;\n}\nexport function readUInt8(source, offset) {\n    return source[offset];\n}\nexport function writeUInt8(destination, value, offset) {\n    destination[offset] = value;\n}\nexport function readUInt16LE(source, offset) {\n    return ((source[offset + 0] << 0) >>> 0) | ((source[offset + 1] << 8) >>> 0);\n}\nexport function writeUInt16LE(destination, value, offset) {\n    destination[offset + 0] = value & 255;\n    value >>>= 8;\n    destination[offset + 1] = value & 255;\n}\nexport function readUInt32BE(source, offset) {\n    return (source[offset] * 2 ** 24 +\n        source[offset + 1] * 2 ** 16 +\n        source[offset + 2] * 2 ** 8 +\n        source[offset + 3]);\n}\nexport function writeUInt32BE(destination, value, offset) {\n    destination[offset + 3] = value;\n    value >>>= 8;\n    destination[offset + 2] = value;\n    value >>>= 8;\n    destination[offset + 1] = value;\n    value >>>= 8;\n    destination[offset] = value;\n}\nexport function readUInt32LE(source, offset) {\n    return (((source[offset + 0] << 0) >>> 0) |\n        ((source[offset + 1] << 8) >>> 0) |\n        ((source[offset + 2] << 16) >>> 0) |\n        ((source[offset + 3] << 24) >>> 0));\n}\nexport function writeUInt32LE(destination, value, offset) {\n    destination[offset + 0] = value & 255;\n    value >>>= 8;\n    destination[offset + 1] = value & 255;\n    value >>>= 8;\n    destination[offset + 2] = value & 255;\n    value >>>= 8;\n    destination[offset + 3] = value & 255;\n}\n//# sourceMappingURL=buffer.js.map","import { hexToBytes } from './utils';\nexport function privateKeyToBytes(privateKey) {\n    const privateKeyBuffer = typeof privateKey === 'string' ? hexToBytes(privateKey) : privateKey;\n    if (privateKeyBuffer.length != 32 && privateKeyBuffer.length != 33) {\n        throw new Error(`Improperly formatted private-key. Private-key byte length should be 32 or 33. Length provided: ${privateKeyBuffer.length}`);\n    }\n    if (privateKeyBuffer.length == 33 && privateKeyBuffer[32] !== 1) {\n        throw new Error('Improperly formatted private-key. 33 bytes indicate compressed key, but the last byte must be == 01');\n    }\n    return privateKeyBuffer;\n}\n//# sourceMappingURL=keys.js.map","export var ChainID;\n(function (ChainID) {\n    ChainID[ChainID[\"Testnet\"] = 2147483648] = \"Testnet\";\n    ChainID[ChainID[\"Mainnet\"] = 1] = \"Mainnet\";\n})(ChainID || (ChainID = {}));\nexport var TransactionVersion;\n(function (TransactionVersion) {\n    TransactionVersion[TransactionVersion[\"Mainnet\"] = 0] = \"Mainnet\";\n    TransactionVersion[TransactionVersion[\"Testnet\"] = 128] = \"Testnet\";\n})(TransactionVersion || (TransactionVersion = {}));\nexport var PeerNetworkID;\n(function (PeerNetworkID) {\n    PeerNetworkID[PeerNetworkID[\"Mainnet\"] = 385875968] = \"Mainnet\";\n    PeerNetworkID[PeerNetworkID[\"Testnet\"] = 4278190080] = \"Testnet\";\n})(PeerNetworkID || (PeerNetworkID = {}));\nexport const PRIVATE_KEY_COMPRESSED_LENGTH = 33;\nexport const PRIVATE_KEY_UNCOMPRESSED_LENGTH = 32;\nexport const BLOCKSTACK_DEFAULT_GAIA_HUB_URL = 'https://hub.blockstack.org';\n//# sourceMappingURL=constants.js.map","import { SHA2 } from './_sha2.js';\nimport { wrapConstructor } from './utils.js';\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160.html\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf\nconst Rho = new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]);\nconst Id = Uint8Array.from({ length: 16 }, (_, i) => i);\nconst Pi = Id.map((i) => (9 * i + 5) % 16);\nlet idxL = [Id];\nlet idxR = [Pi];\nfor (let i = 0; i < 4; i++)\n    for (let j of [idxL, idxR])\n        j.push(j[i].map((k) => Rho[k]));\nconst shifts = [\n    [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],\n    [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],\n    [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],\n    [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],\n    [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],\n].map((i) => new Uint8Array(i));\nconst shiftsL = idxL.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst shiftsR = idxR.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst Kl = new Uint32Array([0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]);\nconst Kr = new Uint32Array([0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]);\n// The rotate left (circular left shift) operation for uint32\nconst rotl = (word, shift) => (word << shift) | (word >>> (32 - shift));\n// It's called f() in spec.\nfunction f(group, x, y, z) {\n    if (group === 0)\n        return x ^ y ^ z;\n    else if (group === 1)\n        return (x & y) | (~x & z);\n    else if (group === 2)\n        return (x | ~y) ^ z;\n    else if (group === 3)\n        return (x & z) | (y & ~z);\n    else\n        return x ^ (y | ~z);\n}\n// Temporary buffer, not used to store anything between runs\nconst BUF = new Uint32Array(16);\nexport class RIPEMD160 extends SHA2 {\n    constructor() {\n        super(64, 20, 8, true);\n        this.h0 = 0x67452301 | 0;\n        this.h1 = 0xefcdab89 | 0;\n        this.h2 = 0x98badcfe | 0;\n        this.h3 = 0x10325476 | 0;\n        this.h4 = 0xc3d2e1f0 | 0;\n    }\n    get() {\n        const { h0, h1, h2, h3, h4 } = this;\n        return [h0, h1, h2, h3, h4];\n    }\n    set(h0, h1, h2, h3, h4) {\n        this.h0 = h0 | 0;\n        this.h1 = h1 | 0;\n        this.h2 = h2 | 0;\n        this.h3 = h3 | 0;\n        this.h4 = h4 | 0;\n    }\n    process(view, offset) {\n        for (let i = 0; i < 16; i++, offset += 4)\n            BUF[i] = view.getUint32(offset, true);\n        // prettier-ignore\n        let al = this.h0 | 0, ar = al, bl = this.h1 | 0, br = bl, cl = this.h2 | 0, cr = cl, dl = this.h3 | 0, dr = dl, el = this.h4 | 0, er = el;\n        // Instead of iterating 0 to 80, we split it into 5 groups\n        // And use the groups in constants, functions, etc. Much simpler\n        for (let group = 0; group < 5; group++) {\n            const rGroup = 4 - group;\n            const hbl = Kl[group], hbr = Kr[group]; // prettier-ignore\n            const rl = idxL[group], rr = idxR[group]; // prettier-ignore\n            const sl = shiftsL[group], sr = shiftsR[group]; // prettier-ignore\n            for (let i = 0; i < 16; i++) {\n                const tl = (rotl(al + f(group, bl, cl, dl) + BUF[rl[i]] + hbl, sl[i]) + el) | 0;\n                al = el, el = dl, dl = rotl(cl, 10) | 0, cl = bl, bl = tl; // prettier-ignore\n            }\n            // 2 loops are 10% faster\n            for (let i = 0; i < 16; i++) {\n                const tr = (rotl(ar + f(rGroup, br, cr, dr) + BUF[rr[i]] + hbr, sr[i]) + er) | 0;\n                ar = er, er = dr, dr = rotl(cr, 10) | 0, cr = br, br = tr; // prettier-ignore\n            }\n        }\n        // Add the compressed chunk to the current hash value\n        this.set((this.h1 + cl + dr) | 0, (this.h2 + dl + er) | 0, (this.h3 + el + ar) | 0, (this.h4 + al + br) | 0, (this.h0 + bl + cr) | 0);\n    }\n    roundClean() {\n        BUF.fill(0);\n    }\n    destroy() {\n        this.destroyed = true;\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0);\n    }\n}\n/**\n * RIPEMD-160 - a hash function from 1990s.\n * @param message - msg that would be hashed\n */\nexport const ripemd160 = wrapConstructor(() => new RIPEMD160());\n","const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nexport function fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexport function split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexport const toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nexport function add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nexport class SHA512 extends SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = wrapConstructor(() => new SHA512());\nexport const sha512_224 = wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = wrapConstructor(() => new SHA512_256());\nexport const sha384 = wrapConstructor(() => new SHA384());\n","import { sha256 } from '@noble/hashes/sha256';\nimport { sha512 } from '@noble/hashes/sha512';\nimport { getCryptoLib } from './cryptoUtils';\n\ntype NodeCryptoCreateHash = typeof import('crypto').createHash;\n\nexport interface Sha2Hash {\n  digest(data: Uint8Array, algorithm?: 'sha256' | 'sha512'): Promise<Uint8Array>;\n}\n\nexport class NodeCryptoSha2Hash {\n  createHash: NodeCryptoCreateHash;\n\n  constructor(createHash: NodeCryptoCreateHash) {\n    this.createHash = createHash;\n  }\n\n  async digest(data: Uint8Array, algorithm = 'sha256'): Promise<Uint8Array> {\n    try {\n      const result = this.createHash(algorithm).update(data).digest();\n      return Promise.resolve(result);\n    } catch (error) {\n      console.log(error);\n      console.log(\n        `Error performing ${algorithm} digest with Node.js 'crypto.createHash', falling back to JS implementation.`\n      );\n      return Promise.resolve(algorithm === 'sha256' ? hashSha256Sync(data) : hashSha512Sync(data));\n    }\n  }\n}\n\nexport class WebCryptoSha2Hash implements Sha2Hash {\n  subtleCrypto: SubtleCrypto;\n\n  constructor(subtleCrypto: SubtleCrypto) {\n    this.subtleCrypto = subtleCrypto;\n  }\n\n  async digest(data: Uint8Array, algorithm = 'sha256'): Promise<Uint8Array> {\n    let algo: string;\n    if (algorithm === 'sha256') {\n      algo = 'SHA-256';\n    } else if (algorithm === 'sha512') {\n      algo = 'SHA-512';\n    } else {\n      throw new Error(`Unsupported hash algorithm ${algorithm}`);\n    }\n    try {\n      const hash = await this.subtleCrypto.digest(algo, data);\n      return new Uint8Array(hash);\n    } catch (error) {\n      console.log(error);\n      console.log(\n        `Error performing ${algorithm} digest with WebCrypto, falling back to JS implementation.`\n      );\n      return Promise.resolve(algorithm === 'sha256' ? hashSha256Sync(data) : hashSha512Sync(data));\n    }\n  }\n}\n\nexport async function createSha2Hash(): Promise<Sha2Hash> {\n  const cryptoLib = await getCryptoLib();\n  if (cryptoLib.name === 'subtleCrypto') {\n    return new WebCryptoSha2Hash(cryptoLib.lib);\n  } else {\n    return new NodeCryptoSha2Hash(cryptoLib.lib.createHash);\n  }\n}\n\nexport function hashSha256Sync(data: Uint8Array) {\n  return sha256(data);\n}\n\nexport function hashSha512Sync(data: Uint8Array) {\n  return sha512(data);\n}\n","import { hmac } from '@noble/hashes/hmac';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { getPublicKey as nobleGetPublicKey, signSync, utils } from '@noble/secp256k1';\nimport {\n  bytesToHex,\n  concatBytes,\n  hexToBytes,\n  privateKeyToBytes,\n  PRIVATE_KEY_COMPRESSED_LENGTH,\n  readUInt8,\n} from '@stacks/common';\nimport base58 from 'bs58';\nimport { hashRipemd160 } from './hashRipemd160';\nimport { hashSha256Sync } from './sha2Hash';\n\nconst BITCOIN_PUBKEYHASH = 0x00;\n\n/**\n * To use secp256k1.signSync set utils.hmacSha256Sync to a function using noble-hashes\n * secp256k1.signSync is the counter part of secp256k1.sign (async version)\n * secp256k1.signSync is used within signWithKey in this file\n * secp256k1.signSync is used to maintain the semantics of signWithKey while migrating from elliptic lib\n * utils.hmacSha256Sync docs: https://github.com/paulmillr/noble-secp256k1 readme file\n */\nutils.hmacSha256Sync = (key: Uint8Array, ...msgs: Uint8Array[]) => {\n  const h = hmac.create(sha256, key);\n  msgs.forEach(msg => h.update(msg));\n  return h.digest();\n};\n\n/**\n * @ignore\n */\nexport function makeECPrivateKey() {\n  return bytesToHex(utils.randomPrivateKey());\n}\n\n/**\n * Based on bitcoinjs-lib MIT https://github.com/bitcoinjs/bs58check/blob/12b3e700f355c5c49d0be3f8fc29be6c66e753e9/base.js\n * @ignore\n */\nexport function base58CheckDecode(btcAddress: string): {\n  version: number;\n  hash: Uint8Array;\n} {\n  const bytes = base58.decode(btcAddress);\n  const payload = bytes.slice(0, -4);\n  const checksum = bytes.slice(-4);\n  const newChecksum = sha256(sha256(payload));\n\n  if (\n    (checksum[0] ^ newChecksum[0]) |\n    (checksum[1] ^ newChecksum[1]) |\n    (checksum[2] ^ newChecksum[2]) |\n    (checksum[3] ^ newChecksum[3])\n  ) {\n    throw new Error('Invalid checksum');\n  }\n\n  if (payload.length !== 21) throw new TypeError('Invalid address length');\n\n  const version = readUInt8(payload, 0);\n  const hash = payload.slice(1);\n\n  return { version, hash };\n}\n\n/**\n * @ignore\n */\nexport function base58Encode(hash: Uint8Array) {\n  const checksum = sha256(sha256(hash));\n  return base58.encode(concatBytes(hash, checksum).slice(0, hash.length + 4));\n}\n\n/**\n * @ignore\n */\nexport function base58CheckEncode(version: number, hash: Uint8Array) {\n  return base58Encode(concatBytes(new Uint8Array([version]), hash.slice(0, 20)));\n}\n\n/**\n * @ignore\n */\nexport function publicKeyToBtcAddress(\n  publicKey: string | Uint8Array,\n  version: number = BITCOIN_PUBKEYHASH\n) {\n  const publicKeyBytes = typeof publicKey === 'string' ? hexToBytes(publicKey) : publicKey;\n  const publicKeyHash160 = hashRipemd160(hashSha256Sync(publicKeyBytes));\n  return base58CheckEncode(version, publicKeyHash160);\n}\n\n/**\n * @ignore\n * @returns a compressed public key\n */\nexport function getPublicKeyFromPrivate(privateKey: string | Uint8Array): string {\n  const privateKeyBytes = privateKeyToBytes(privateKey);\n  // for backwards compatibility we always return a compressed public key, regardless of private key mode\n  return bytesToHex(nobleGetPublicKey(privateKeyBytes.slice(0, 32), true));\n}\n\n/**\n * @ignore\n */\nexport function ecSign(messageHash: Uint8Array, hexPrivateKey: string | Uint8Array) {\n  return signSync(messageHash, privateKeyToBytes(hexPrivateKey).slice(0, 32), {\n    der: false,\n  });\n}\n\n/**\n * @ignore\n */\nexport function isValidPrivateKey(privateKey: string | Uint8Array): boolean {\n  return utils.isValidPrivateKey(privateKeyToBytes(privateKey));\n}\n\n/**\n * @ignore\n */\nexport function compressPrivateKey(privateKey: string | Uint8Array): Uint8Array {\n  const privateKeyBytes = privateKeyToBytes(privateKey);\n\n  return privateKeyBytes.length == PRIVATE_KEY_COMPRESSED_LENGTH\n    ? privateKeyBytes // leave compressed\n    : concatBytes(privateKeyBytes, new Uint8Array([1])); // compress\n}\n","import { ripemd160 } from '@noble/hashes/ripemd160';\n\nexport function hashRipemd160(data: Uint8Array) {\n  return ripemd160(data);\n}\n","import {\n  readUInt16LE,\n  readUInt32LE,\n  readUInt8,\n  writeUInt16LE,\n  writeUInt32LE,\n  writeUInt8,\n} from '@stacks/common';\n\n// The following methods are based on `bitcoinjs/varuint-bitcoin` implementation\n// https://github.com/bitcoinjs/varuint-bitcoin/blob/8342fe7362f20a412d61b9ade20839aafaa7f78e/index.js\n\n// Copyright (c) 2016 Kirill Fomichev\n// Parts of this software are based on https://github.com/mappum/bitcoin-protocol\n// Copyright (c) 2016 Matt Bell\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the “Software”), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// Number.MAX_SAFE_INTEGER\nconst MAX_SAFE_INTEGER = 9_007_199_254_740_991;\n\nfunction ensureUInt53(n: number) {\n  if (n < 0 || n > MAX_SAFE_INTEGER || n % 1 !== 0) throw new RangeError('value out of range');\n}\n\nexport function encode(number: number, bytes?: Uint8Array, offset: number = 0) {\n  ensureUInt53(number);\n  if (!bytes) bytes = new Uint8Array(encodingLength(number));\n\n  // 8 bit\n  if (number < 0xfd) {\n    writeUInt8(bytes, number, offset);\n\n    // 16 bit\n  } else if (number <= 0xff_ff) {\n    writeUInt8(bytes, 0xfd, offset);\n    writeUInt16LE(bytes, number, offset + 1);\n\n    // 32 bit\n  } else if (number <= 0xff_ff_ff_ff) {\n    writeUInt8(bytes, 0xfe, offset);\n    writeUInt32LE(bytes, number, offset + 1);\n\n    // 64 bit\n  } else {\n    writeUInt8(bytes, 0xff, offset);\n    writeUInt32LE(bytes, number >>> 0, offset + 1);\n    writeUInt32LE(bytes, (number / 0x1_00_00_00_00) | 0, offset + 5);\n  }\n\n  return bytes;\n}\n\nexport function decode(bytes: Uint8Array, offset: number = 0) {\n  const first = readUInt8(bytes, offset);\n\n  // 8 bit\n  if (first < 0xfd) {\n    return first;\n\n    // 16 bit\n  } else if (first === 0xfd) {\n    return readUInt16LE(bytes, offset + 1);\n\n    // 32 bit\n  } else if (first === 0xfe) {\n    return readUInt32LE(bytes, offset + 1);\n\n    // 64 bit\n  } else {\n    const lo = readUInt32LE(bytes, offset + 1);\n    const hi = readUInt32LE(bytes, offset + 5);\n    const number = hi * 0x01_00_00_00_00 + lo;\n    ensureUInt53(number);\n\n    return number;\n  }\n}\n\nexport function encodingLength(number: number) {\n  ensureUInt53(number);\n\n  return number < 0xfd ? 1 : number <= 0xff_ff ? 3 : number <= 0xff_ff_ff_ff ? 5 : 9;\n}\n","import { sha256 } from '@noble/hashes/sha256';\nimport { concatBytes, utf8ToBytes } from '@stacks/common';\nimport { decode, encode, encodingLength } from './varuint';\n\n// 'Stacks Signed Message:\\n'.length === 23\n// 'Stacks Signed Message:\\n'.length.toString(16) === 17\nconst chainPrefix = '\\x17Stacks Signed Message:\\n';\n\nexport function hashMessage(message: string, prefix: string = chainPrefix): Uint8Array {\n  return sha256(encodeMessage(message, prefix));\n}\n\nexport function encodeMessage(\n  message: string | Uint8Array,\n  prefix: string = chainPrefix\n): Uint8Array {\n  const messageBytes = typeof message == 'string' ? utf8ToBytes(message) : message;\n  const encodedLength = encode(messageBytes.length);\n  return concatBytes(utf8ToBytes(prefix), encodedLength, messageBytes);\n}\n\nexport function decodeMessage(\n  encodedMessage: Uint8Array,\n  prefix: string = chainPrefix\n): Uint8Array {\n  // Remove the chain prefix\n  const prefixByteLength = utf8ToBytes(prefix).byteLength;\n  const messageWithoutChainPrefix = encodedMessage.subarray(prefixByteLength);\n  const decoded = decode(messageWithoutChainPrefix);\n  const varIntLength = encodingLength(decoded);\n  // Remove the varint prefix\n  return messageWithoutChainPrefix.slice(varIntLength);\n}\n","import { Signature, verify } from '@noble/secp256k1';\n\nexport { Signature, verify as verifySignature };\n\n/**\n * Calculate the AES-CBC ciphertext output byte length a given input length.\n * AES has a fixed block size of 16-bytes regardless key size.\n * @ignore\n */\nexport function getAesCbcOutputLength(inputByteLength: number) {\n  // AES-CBC block mode rounds up to the next block size.\n  const cipherTextLength = (Math.floor(inputByteLength / 16) + 1) * 16;\n  return cipherTextLength;\n}\n\n/**\n * Calculate the base64 encoded string length for a given input length.\n * This is equivalent to the byte length when the string is ASCII or UTF8-8\n * encoded.\n * @param number\n */\nexport function getBase64OutputLength(inputByteLength: number) {\n  const encodedLength = Math.ceil(inputByteLength / 3) * 4;\n  return encodedLength;\n}\n\n/**\n *\n * @ignore\n */\nexport function hashCode(string: string) {\n  let hash = 0;\n  if (string.length === 0) return hash;\n  for (let i = 0; i < string.length; i++) {\n    const character = string.charCodeAt(i);\n    hash = (hash << 5) - hash + character;\n    hash &= hash;\n  }\n  return hash & 0x7fffffff;\n}\n","import { hmac } from '@noble/hashes/hmac';\nimport { sha256 } from '@noble/hashes/sha256';\nimport {\n  getPublicKey,\n  getSharedSecret,\n  Point,\n  Signature,\n  signSync,\n  utils,\n  verify,\n} from '@noble/secp256k1';\nimport {\n  bigIntToBytes,\n  bytesToHex,\n  bytesToUtf8,\n  concatBytes,\n  FailedDecryptionError,\n  hexToBigInt,\n  hexToBytes,\n  parseRecoverableSignatureVrs,\n  signatureRsvToVrs,\n  utf8ToBytes,\n} from '@stacks/common';\nimport { fromByteArray, toByteArray } from 'base64-js';\nimport { createCipher } from './aesCipher';\nimport { getPublicKeyFromPrivate } from './keys';\nimport { encodeMessage, hashMessage } from './messageSignature';\nimport { hashSha256Sync, hashSha512Sync } from './sha2Hash';\nimport { getAesCbcOutputLength, getBase64OutputLength } from './utils';\n\n/**\n * To use secp256k1.signSync set utils.hmacSha256Sync to a function using noble-hashes\n * secp256k1.signSync is the counter part of secp256k1.sign (async version)\n * secp256k1.signSync is used within signECDSA in this file\n * secp256k1.signSync is used to maintain the semantics of signECDSA while migrating from elliptic lib\n * utils.hmacSha256Sync docs: https://github.com/paulmillr/noble-secp256k1 readme file\n */\nutils.hmacSha256Sync = (key: Uint8Array, ...msgs: Uint8Array[]) => {\n  const h = hmac.create(sha256, key);\n  msgs.forEach(msg => h.update(msg));\n  return h.digest();\n};\n\n/**\n * Controls how the encrypted data bytes will be encoded as a string in the JSON payload.\n * Options:\n *    `hex` -- the legacy default, file size increase 100% (2x).\n *    `base64` -- file size increased ~33%.\n * @ignore\n */\nexport type CipherTextEncoding = 'hex' | 'base64';\n\n/**\n * @ignore\n */\nexport type CipherObject = {\n  iv: string;\n  ephemeralPK: string;\n  cipherText: string;\n  /** If undefined then hex encoding is used for the `cipherText` string. */\n  cipherTextEncoding?: CipherTextEncoding;\n  mac: string;\n  wasString: boolean;\n};\n\n/**\n * @ignore\n */\nexport type SignedCipherObject = {\n  /** Hex encoded DER signature (up to 144 chars) */\n  signature: string;\n  /** Hex encoded public key (66 char length) */\n  publicKey: string;\n  /** The stringified json of a `CipherObject` */\n  cipherText: string;\n};\n\n/**\n * @ignore\n */\nexport enum InvalidPublicKeyReason {\n  InvalidFormat = 'InvalidFormat',\n  IsNotPoint = 'IsNotPoint',\n}\n\n/**\n * @ignore\n */\nexport async function aes256CbcEncrypt(\n  iv: Uint8Array,\n  key: Uint8Array,\n  plaintext: Uint8Array\n): Promise<Uint8Array> {\n  const cipher = await createCipher();\n  return await cipher.encrypt('aes-256-cbc', key, iv, plaintext);\n}\n\n/**\n * @ignore\n */\nasync function aes256CbcDecrypt(\n  iv: Uint8Array,\n  key: Uint8Array,\n  ciphertext: Uint8Array\n): Promise<Uint8Array> {\n  const cipher = await createCipher();\n  return await cipher.decrypt('aes-256-cbc', key, iv, ciphertext);\n}\n\n/**\n * @ignore\n */\nexport function hmacSha256(key: Uint8Array, content: Uint8Array): Uint8Array {\n  return hmac(sha256, key, content);\n}\n\n/**\n * @ignore\n */\nfunction equalsConstTime(a: Uint8Array, b: Uint8Array) {\n  if (a.length !== b.length) {\n    return false;\n  }\n  let res = 0;\n  for (let i = 0; i < a.length; i++) {\n    res |= a[i] ^ b[i];\n  }\n  return res === 0;\n}\n\n/**\n * @ignore\n */\nfunction sharedSecretToKeys(sharedSecret: Uint8Array): {\n  encryptionKey: Uint8Array;\n  hmacKey: Uint8Array;\n} {\n  // generate mac and encryption key from shared secret\n  const hashedSecret = hashSha512Sync(sharedSecret);\n  return {\n    encryptionKey: hashedSecret.slice(0, 32),\n    hmacKey: hashedSecret.slice(32),\n  };\n}\n\n/**\n * @ignore\n */\nfunction allHexChars(maybe: string): boolean {\n  return maybe.match(/^[0-9a-f]+$/i) !== null;\n}\n\n/**\n * @ignore\n */\nfunction isValidPublicKey(pub: string): {\n  result: boolean;\n  reason: string | null;\n  reason_data: string | null;\n} {\n  const invalidFormat = {\n    result: false,\n    reason_data: 'Invalid public key format',\n    reason: InvalidPublicKeyReason.InvalidFormat,\n  };\n  const invalidPoint = {\n    result: false,\n    reason_data: 'Public key is not a point',\n    reason: InvalidPublicKeyReason.IsNotPoint,\n  };\n  if (pub.length !== 66 && pub.length !== 130) return invalidFormat;\n\n  const firstByte = pub.slice(0, 2);\n\n  // uncompressed public key\n  if (pub.length === 130 && firstByte !== '04') return invalidFormat;\n\n  // compressed public key\n  if (pub.length === 66 && firstByte !== '02' && firstByte !== '03') return invalidFormat;\n\n  if (!allHexChars(pub)) return invalidFormat;\n\n  try {\n    // Converts public key to Point\n    const point = Point.fromHex(pub);\n\n    // Verify point on curve is valid if it conforms to equation\n    // Validate the public key\n    // Throws: Point is not on elliptic curve if point is not on curve\n    point.assertValidity();\n\n    // Validation passed\n    return {\n      result: true,\n      reason_data: null,\n      reason: null,\n    };\n  } catch (e) {\n    return invalidPoint;\n  }\n}\n\n/**\n * Hex encodes a 32-byte bigint instance.\n * The result string is zero padded and always 64 characters in length.\n * @ignore\n */\nexport function getHexFromBN(bnInput: bigint): string {\n  const hexOut = bnInput.toString(16);\n  if (hexOut.length === 64) {\n    return hexOut;\n  } else if (hexOut.length < 64) {\n    // pad with leading zeros\n    // the padStart function would require node 9\n    const padding = '0'.repeat(64 - hexOut.length);\n    return `${padding}${hexOut}`;\n  } else {\n    throw new Error('Generated a > 32-byte BN for encryption. Failing.');\n  }\n}\n\n/**\n * Converts to zero padded 32 bytes\n * @ignore\n */\nexport function getBytesFromBN(bnInput: bigint): Uint8Array {\n  // todo: remove method?\n  const result = bigIntToBytes(bnInput, 32);\n  if (result.byteLength !== 32) {\n    throw new Error('Failed to generate a 32-byte Uint8Array');\n  }\n  return result;\n}\n\n/**\n * Get details about the JSON envelope size overhead for ciphertext payloads.\n * @ignore\n */\nexport function getCipherObjectWrapper(opts: {\n  wasString: boolean;\n  cipherTextEncoding: CipherTextEncoding;\n}): {\n  /** The stringified JSON string of an empty `CipherObject`. */\n  payloadShell: string;\n  /** Total string length of all the `CipherObject` values that always have constant lengths. */\n  payloadValuesLength: number;\n} {\n  // Placeholder structure of the ciphertext payload, used to determine the\n  // stringified JSON overhead length.\n  const shell: CipherObject = {\n    iv: '',\n    ephemeralPK: '',\n    mac: '',\n    cipherText: '',\n    wasString: !!opts.wasString,\n  };\n  if (opts.cipherTextEncoding === 'base64') {\n    shell.cipherTextEncoding = 'base64';\n  }\n  // Hex encoded 16 bytes.\n  const ivLength = 32;\n  // Hex encoded, compressed EC pubkey of 33 bytes.\n  const ephemeralPKLength = 66;\n  // Hex encoded 32 byte hmac-sha256.\n  const macLength = 64;\n  return {\n    payloadValuesLength: ivLength + ephemeralPKLength + macLength,\n    payloadShell: JSON.stringify(shell),\n  };\n}\n\n/**\n * Get details about the JSON envelope size overhead for signed ciphertext payloads.\n * @param payloadShell - The JSON stringified empty `CipherObject`\n * @ignore\n */\nexport function getSignedCipherObjectWrapper(payloadShell: string): {\n  /** The stringified JSON string of an empty `SignedCipherObject`. */\n  signedPayloadValuesLength: number;\n  /** Total string length of all the `SignedCipherObject` values\n   * that always have constant lengths */\n  signedPayloadShell: string;\n} {\n  // Placeholder structure of the signed ciphertext payload, used to determine the\n  // stringified JSON overhead length.\n  const shell: SignedCipherObject = {\n    signature: '',\n    publicKey: '',\n    cipherText: payloadShell,\n  };\n  // Hex encoded DER signature, up to 72 byte length.\n  const signatureLength = 144;\n  // Hex encoded 33 byte public key.\n  const publicKeyLength = 66;\n  return {\n    signedPayloadValuesLength: signatureLength + publicKeyLength,\n    signedPayloadShell: JSON.stringify(shell),\n  };\n}\n\n/**\n * Fast function that determines the final ASCII string byte length of the\n * JSON stringified ECIES encrypted payload.\n * @ignore\n */\nexport function eciesGetJsonStringLength(opts: {\n  contentLength: number;\n  wasString: boolean;\n  sign: boolean;\n  cipherTextEncoding: CipherTextEncoding;\n}): number {\n  const { payloadShell, payloadValuesLength } = getCipherObjectWrapper(opts);\n\n  // Calculate the AES output length given the input length.\n  const cipherTextLength = getAesCbcOutputLength(opts.contentLength);\n\n  // Get the encoded string length of the cipherText.\n  let encodedCipherTextLength: number;\n  if (!opts.cipherTextEncoding || opts.cipherTextEncoding === 'hex') {\n    encodedCipherTextLength = cipherTextLength * 2;\n  } else if (opts.cipherTextEncoding === 'base64') {\n    encodedCipherTextLength = getBase64OutputLength(cipherTextLength);\n  } else {\n    throw new Error(`Unexpected cipherTextEncoding \"${opts.cipherTextEncoding}\"`);\n  }\n\n  if (!opts.sign) {\n    // Add the length of the JSON envelope, ciphertext length, and length of const values.\n    return payloadShell.length + payloadValuesLength + encodedCipherTextLength;\n  } else {\n    // Get the signed version of the JSON envelope\n    const { signedPayloadShell, signedPayloadValuesLength } =\n      getSignedCipherObjectWrapper(payloadShell);\n    // Add length of the JSON envelope, ciphertext length, and length of the const values.\n    return (\n      signedPayloadShell.length +\n      signedPayloadValuesLength +\n      payloadValuesLength +\n      encodedCipherTextLength\n    );\n  }\n}\n\n// todo: simplify and remove wasstring\n/**\n * Encrypt content to elliptic curve publicKey using ECIES\n * @param publicKey - secp256k1 public key hex string\n * @param content - content to encrypt\n * @return Object containing:\n *  iv (initialization vector, hex encoding),\n *  cipherText (cipher text either hex or base64 encoded),\n *  mac (message authentication code, hex encoded),\n *  ephemeral public key (hex encoded),\n *  wasString (boolean indicating with or not to return a Uint8Array or string on decrypt)\n * @ignore\n */\nexport async function encryptECIES(\n  publicKey: string,\n  content: Uint8Array,\n  wasString: boolean,\n  cipherTextEncoding?: CipherTextEncoding\n): Promise<CipherObject> {\n  const validity = isValidPublicKey(publicKey);\n  if (!validity.result) {\n    throw validity;\n  }\n  const ephemeralPrivateKey = utils.randomPrivateKey();\n  const ephemeralPublicKey = getPublicKey(ephemeralPrivateKey, true);\n  let sharedSecret = getSharedSecret(ephemeralPrivateKey, publicKey, true);\n  // Trim the compressed mode prefix byte\n  sharedSecret = sharedSecret.slice(1);\n  const sharedKeys = sharedSecretToKeys(sharedSecret);\n  const initializationVector = utils.randomBytes(16);\n\n  const cipherText = await aes256CbcEncrypt(\n    initializationVector,\n    sharedKeys.encryptionKey,\n    content\n  );\n\n  const macData = concatBytes(initializationVector, ephemeralPublicKey, cipherText);\n  const mac = hmacSha256(sharedKeys.hmacKey, macData);\n\n  let cipherTextString: string;\n\n  if (!cipherTextEncoding || cipherTextEncoding === 'hex') {\n    cipherTextString = bytesToHex(cipherText);\n  } else if (cipherTextEncoding === 'base64') {\n    cipherTextString = fromByteArray(cipherText);\n  } else {\n    throw new Error(`Unexpected cipherTextEncoding \"${cipherTextEncoding}\"`);\n  }\n\n  const result: CipherObject = {\n    iv: bytesToHex(initializationVector),\n    ephemeralPK: bytesToHex(ephemeralPublicKey),\n    cipherText: cipherTextString,\n    mac: bytesToHex(mac),\n    wasString,\n  };\n  if (cipherTextEncoding && cipherTextEncoding !== 'hex') {\n    result.cipherTextEncoding = cipherTextEncoding;\n  }\n  return result;\n}\n\n/**\n * Decrypt content encrypted using ECIES\n * @param {String} privateKey - secp256k1 private key hex string\n * @param {Object} cipherObject - object to decrypt, should contain:\n *  iv (initialization vector), cipherText (cipher text),\n *  mac (message authentication code), ephemeralPublicKey\n *  wasString (boolean indicating with or not to return bytes or string on decrypt)\n * @return {Uint8Array} plaintext\n * @throws {FailedDecryptionError} if unable to decrypt\n * @ignore\n */\nexport async function decryptECIES(\n  privateKey: string,\n  cipherObject: CipherObject\n): Promise<Uint8Array | string> {\n  if (!cipherObject.ephemeralPK) {\n    throw new FailedDecryptionError(\n      'Unable to get public key from cipher object. ' +\n        'You might be trying to decrypt an unencrypted object.'\n    );\n  }\n  const ephemeralPK = cipherObject.ephemeralPK;\n  let sharedSecret = getSharedSecret(privateKey, ephemeralPK, true);\n  // Trim the compressed mode prefix byte\n  sharedSecret = sharedSecret.slice(1);\n  const sharedKeys = sharedSecretToKeys(sharedSecret);\n  const ivBytes = hexToBytes(cipherObject.iv);\n\n  let cipherTextBytes: Uint8Array;\n\n  if (!cipherObject.cipherTextEncoding || cipherObject.cipherTextEncoding === 'hex') {\n    cipherTextBytes = hexToBytes(cipherObject.cipherText);\n  } else if (cipherObject.cipherTextEncoding === 'base64') {\n    cipherTextBytes = toByteArray(cipherObject.cipherText);\n  } else {\n    throw new Error(`Unexpected cipherTextEncoding \"${cipherObject.cipherText}\"`);\n  }\n\n  const macData = concatBytes(ivBytes, hexToBytes(ephemeralPK), cipherTextBytes);\n  const actualMac = hmacSha256(sharedKeys.hmacKey, macData);\n  const expectedMac = hexToBytes(cipherObject.mac);\n\n  if (!equalsConstTime(expectedMac, actualMac)) {\n    throw new FailedDecryptionError('Decryption failed: failure in MAC check');\n  }\n  const plainText = await aes256CbcDecrypt(ivBytes, sharedKeys.encryptionKey, cipherTextBytes);\n\n  if (cipherObject.wasString) {\n    return bytesToUtf8(plainText);\n  }\n  return plainText;\n}\n\n/**\n * Sign content using ECDSA\n *\n * @param {string} privateKey - secp256k1 private key hex string\n * @param {string | Uint8Array} content - content to sign\n * @return {Object} contains:\n * signature - Hex encoded DER signature\n * public key - Hex encoded private string taken from privateKey\n * @ignore\n */\nexport function signECDSA(\n  privateKey: string,\n  content: string | Uint8Array\n): {\n  publicKey: string;\n  signature: string;\n} {\n  const contentBytes = typeof content === 'string' ? utf8ToBytes(content) : content;\n  const publicKey = getPublicKeyFromPrivate(privateKey);\n  const contentHash = hashSha256Sync(contentBytes);\n  const signature = signSync(contentHash, privateKey);\n\n  return {\n    signature: bytesToHex(signature),\n    publicKey,\n  };\n}\n\n/**\n * Verify content using ECDSA\n * @param {String | Uint8Array} content - Content to verify was signed\n * @param {String} publicKey - secp256k1 private key hex string\n * @param {String} signature - Hex encoded DER signature\n * @return {Boolean} returns true when signature matches publickey + content, false if not\n * @ignore\n */\nexport function verifyECDSA(\n  content: string | Uint8Array,\n  publicKey: string,\n  signature: string\n): boolean {\n  const contentBytes = typeof content === 'string' ? utf8ToBytes(content) : content;\n  const contentHash = hashSha256Sync(contentBytes);\n  // verify() is strict: true by default. High-s signatures are rejected, which mirrors libsecp behavior\n  // Set verify options to strict: false, to support the legacy stacks implementations\n  // Reference: https://github.com/paulmillr/noble-secp256k1/releases/tag/1.4.0\n  return verify(signature, contentHash, publicKey, { strict: false });\n}\n\ninterface VerifyMessageSignatureArgs {\n  signature: string;\n  message: string | Uint8Array;\n  publicKey: string;\n}\n\n/**\n * Verify message signature (VRS format) with recoverable public key\n * @deprecated The Clarity compatible {@link verifyMessageSignatureRsv} is preferred\n */\nexport function verifyMessageSignature({\n  signature,\n  message,\n  publicKey,\n}: VerifyMessageSignatureArgs): boolean {\n  // todo: remove method and pull body to `verifyMessageSignatureRsv`\n  const { r, s } = parseRecoverableSignatureVrs(signature);\n  const sig = new Signature(hexToBigInt(r), hexToBigInt(s));\n  const hashedMsg = typeof message === 'string' ? hashMessage(message) : message;\n  // verify() is strict: true by default. High-s signatures are rejected, which mirrors libsecp behavior\n  // Set verify options to strict: false, to support the legacy stacks implementations\n  // Reference: https://github.com/paulmillr/noble-secp256k1/releases/tag/1.4.0\n  const verificationResult = verify(sig, hashedMsg, publicKey, { strict: false });\n\n  // Additional Check for Legacy Prefix ++++++++++++++++++++++++++++++++++++++++\n  if (verificationResult || typeof message !== 'string') return verificationResult;\n\n  const LEGACY_PREFIX = '\\x18Stacks Message Signing:\\n';\n  const legacyHash = sha256(encodeMessage(message, LEGACY_PREFIX));\n  return verify(sig, legacyHash, publicKey, { strict: false });\n  // +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n}\n\n/**\n * Verifies a Clarity compatible signed message using a public key. The\n * `signature` option needs to be in RSV format.\n */\nexport function verifyMessageSignatureRsv({\n  signature,\n  message,\n  publicKey,\n}: VerifyMessageSignatureArgs): boolean {\n  return verifyMessageSignature({\n    signature: signatureRsvToVrs(signature),\n    message,\n    publicKey,\n  });\n}\n","import { utils } from '@noble/secp256k1';\n\n/**\n * Reexports @noble/secp256k1's randombytes\n * Generates bytes with random bytes of given length\n * @param bytesLength an optional bytes length, default `32` bytes\n * @return {Uint8Array} random bytes\n */\nexport const randomBytes = (bytesLength: number = 32): Uint8Array => utils.randomBytes(bytesLength);\n\n/** Optional function to generate cryptographically secure random bytes */\nexport type GetRandomBytes = (count: number) => Uint8Array;\n","import { utf8ToBytes } from '@stacks/common';\nimport {\n  CipherTextEncoding,\n  decryptECIES,\n  encryptECIES,\n  signECDSA,\n  SignedCipherObject,\n} from './ec';\nimport { getPublicKeyFromPrivate } from './keys';\n\nexport interface EncryptionOptions {\n  /**\n   * If set to `true` the data is signed using ECDSA on SHA256 hashes with the user's\n   * app private key. If a string is specified, it is used as the private key instead\n   * of the user's app private key.\n   * @default false\n   */\n  sign?: boolean | string;\n  /**\n   * String encoding format for the cipherText bytes.\n   * Currently defaults to 'hex' for legacy backwards-compatibility.\n   * Only used if the `encrypt` option is also used.\n   * Note: in the future this should default to 'base64' for the significant\n   * file size reduction.\n   */\n  cipherTextEncoding?: CipherTextEncoding;\n  /**\n   * Specifies if the original unencrypted content is a ASCII or UTF-8 string.\n   * For example stringified JSON.\n   * If true, then when the ciphertext is decrypted, it will be returned as\n   * a `string` type variable, otherwise will be returned as bytes.\n   */\n  wasString?: boolean;\n}\n\n/**\n * Specify encryption options, and whether to sign the ciphertext.\n */\nexport interface EncryptContentOptions extends EncryptionOptions {\n  /**\n   * Encrypt the data with this key.\n   */\n  publicKey?: string;\n  /**\n   * Encrypt the data with the public key corresponding to the supplied private key\n   */\n  privateKey?: string;\n}\n\n/**\n * Encrypts the data provided with the app public key.\n * @param {string | Uint8Array} content - data to encrypt\n * @param {Object} [options=null] - options object\n * @param {String} options.publicKey - the hex string of the ECDSA public\n * key to use for encryption. If not provided, will use user's appPublicKey.\n * @return {String} Stringified ciphertext object\n */\nexport async function encryptContent(\n  content: string | Uint8Array,\n  options?: EncryptContentOptions\n): Promise<string> {\n  const opts = Object.assign({}, options);\n  let privateKey: string | undefined;\n  if (!opts.publicKey) {\n    if (!opts.privateKey) {\n      throw new Error('Either public key or private key must be supplied for encryption.');\n    }\n    opts.publicKey = getPublicKeyFromPrivate(opts.privateKey);\n  }\n  const wasString =\n    typeof opts.wasString === 'boolean' ? opts.wasString : typeof content === 'string';\n  const contentBytes = typeof content === 'string' ? utf8ToBytes(content) : content;\n  const cipherObject = await encryptECIES(\n    opts.publicKey,\n    contentBytes,\n    wasString,\n    opts.cipherTextEncoding\n  );\n  let cipherPayload = JSON.stringify(cipherObject);\n  if (opts.sign) {\n    if (typeof opts.sign === 'string') {\n      privateKey = opts.sign;\n    } else if (!privateKey) {\n      privateKey = opts.privateKey;\n    }\n    const signatureObject = signECDSA(privateKey!, cipherPayload);\n    const signedCipherObject: SignedCipherObject = {\n      signature: signatureObject.signature,\n      publicKey: signatureObject.publicKey,\n      cipherText: cipherPayload,\n    };\n    cipherPayload = JSON.stringify(signedCipherObject);\n  }\n  return cipherPayload;\n}\n\n/**\n * Decrypts data encrypted with `encryptContent` with the\n * transit private key.\n * @param {string | Uint8Array} content - encrypted content.\n * @param {Object} [options=null] - options object\n * @param {string} options.privateKey - the hex string of the ECDSA private\n * key to use for decryption. If not provided, will use user's appPrivateKey.\n * @return {string | Uint8Array} decrypted content.\n */\nexport function decryptContent(\n  content: string,\n  options?: {\n    privateKey?: string;\n  }\n): Promise<string | Uint8Array> {\n  const opts = Object.assign({}, options);\n  if (!opts.privateKey) {\n    throw new Error('Private key is required for decryption.');\n  }\n\n  try {\n    const cipherObject = JSON.parse(content);\n    return decryptECIES(opts.privateKey, cipherObject);\n  } catch (err) {\n    if (err instanceof SyntaxError) {\n      throw new Error(\n        'Failed to parse encrypted content JSON. The content may not ' +\n          'be encrypted. If using getFile, try passing { decrypt: false }.'\n      );\n    } else {\n      throw err;\n    }\n  }\n}\n","import { utf8ToBytes, writeUInt32BE } from '@stacks/common';\nimport { getCryptoLib } from './cryptoUtils';\n\nexport type Pbkdf2Digests = 'sha512' | 'sha256';\n\nexport interface Pbkdf2 {\n  derive(\n    password: string,\n    salt: Uint8Array,\n    iterations: number,\n    keyLength: number,\n    digest: Pbkdf2Digests\n  ): Promise<Uint8Array>;\n}\n\ntype NodePbkdf2Fn = typeof import('crypto').pbkdf2;\n\nexport class NodeCryptoPbkdf2 implements Pbkdf2 {\n  nodePbkdf2: NodePbkdf2Fn;\n\n  constructor(nodePbkdf2: NodePbkdf2Fn) {\n    this.nodePbkdf2 = nodePbkdf2;\n  }\n\n  async derive(\n    password: string,\n    salt: Uint8Array,\n    iterations: number,\n    keyLength: number,\n    digest: Pbkdf2Digests\n  ): Promise<Uint8Array> {\n    if (digest !== 'sha512' && digest !== 'sha256') {\n      throw new Error(`Unsupported digest \"${digest}\" for Pbkdf2`);\n    }\n    return new Promise((resolve, reject) => {\n      this.nodePbkdf2(password, salt, iterations, keyLength, digest, (error, result) => {\n        if (error) {\n          reject(error);\n        }\n        resolve(result);\n      });\n    });\n  }\n}\n\nexport class WebCryptoPbkdf2 implements Pbkdf2 {\n  subtleCrypto: SubtleCrypto;\n\n  constructor(subtleCrypto: SubtleCrypto) {\n    this.subtleCrypto = subtleCrypto;\n  }\n\n  async derive(\n    password: string,\n    salt: Uint8Array,\n    iterations: number,\n    keyLength: number,\n    digest: Pbkdf2Digests\n  ): Promise<Uint8Array> {\n    let algo: string;\n    if (digest === 'sha256') {\n      algo = 'SHA-256';\n    } else if (digest === 'sha512') {\n      algo = 'SHA-512';\n    } else {\n      throw new Error(`Unsupported Pbkdf2 digest algorithm \"${digest}\"`);\n    }\n\n    const passwordBytes = utf8ToBytes(password);\n    try {\n      const key = await this.subtleCrypto.importKey('raw', passwordBytes, 'PBKDF2', false, [\n        'deriveBits',\n      ]);\n      const result = await this.subtleCrypto.deriveBits(\n        {\n          name: 'PBKDF2',\n          salt,\n          iterations,\n          hash: { name: algo },\n        },\n        key,\n        keyLength * 8\n      );\n      return new Uint8Array(result);\n    } catch (error) {\n      // Browser appears to support WebCrypto but missing pbkdf2 support.\n      const partialWebCrypto = new WebCryptoPartialPbkdf2(this.subtleCrypto);\n      return partialWebCrypto.derive(password, salt, iterations, keyLength, digest);\n    }\n  }\n}\n\nexport class WebCryptoPartialPbkdf2 implements Pbkdf2 {\n  // An async implementation for browsers that support WebCrypto hmac\n  // but not pbkdf2. Extracted from crypto-browserify/pbkdf2 and modified to\n  // use WebCrypto for hmac operations.\n  // Original: https://github.com/crypto-browserify/pbkdf2/tree/v3.0.17/lib\n\n  subtleCrypto: SubtleCrypto;\n\n  constructor(subtleCrypto: SubtleCrypto) {\n    this.subtleCrypto = subtleCrypto;\n  }\n\n  async derive(\n    password: string,\n    salt: Uint8Array,\n    iterations: number,\n    keyLength: number,\n    digest: Pbkdf2Digests\n  ): Promise<Uint8Array> {\n    if (digest !== 'sha512' && digest !== 'sha256') {\n      throw new Error(`Unsupported digest \"${digest}\" for Pbkdf2`);\n    }\n    const passwordBytes = utf8ToBytes(password);\n    const algo = digest === 'sha512' ? 'SHA-512' : 'SHA-256';\n    const algoOpts = { name: 'HMAC', hash: algo };\n    const hmacDigest = (key: ArrayBuffer, data: ArrayBuffer) =>\n      this.subtleCrypto\n        .importKey('raw', key, algoOpts, true, ['sign'])\n        .then(cryptoKey => this.subtleCrypto.sign(algoOpts, cryptoKey, data))\n        .then(result => new Uint8Array(result));\n\n    const DK = new Uint8Array(keyLength);\n    const saltLength = salt.length;\n    const block1 = new Uint8Array(saltLength + 4);\n    block1.set(salt);\n    let destPos = 0;\n    const hLen = digest === 'sha512' ? 64 : 32;\n    const l = Math.ceil(keyLength / hLen);\n\n    for (let i = 1; i <= l; i++) {\n      writeUInt32BE(block1, i, saltLength);\n      const T = await hmacDigest(passwordBytes, block1);\n      let U = T;\n      for (let j = 1; j < iterations; j++) {\n        U = await hmacDigest(passwordBytes, U);\n        for (let k = 0; k < hLen; k++) {\n          T[k] ^= U[k];\n        }\n      }\n      DK.set(T.subarray(0, DK.byteLength - destPos), destPos);\n      destPos += hLen;\n    }\n    return DK;\n  }\n}\n\nexport async function createPbkdf2(): Promise<Pbkdf2> {\n  const cryptoLib = await getCryptoLib();\n  if (cryptoLib.name === 'subtleCrypto') {\n    return new WebCryptoPbkdf2(cryptoLib.lib);\n  }\n  return new NodeCryptoPbkdf2(cryptoLib.lib.pbkdf2);\n}\n","// https://github.com/paulmillr/scure-bip39\n// Secure, audited & minimal implementation of BIP39 mnemonic phrases.\nimport { validateMnemonic, mnemonicToEntropy, entropyToMnemonic } from '@scure/bip39';\n// Word lists not imported by default as that would increase bundle sizes too much as in case of bitcoinjs/bip39\n// Use default english world list similiar to bitcoinjs/bip39\n// Backward compatible with bitcoinjs/bip39 dependency\n// Very small in size as compared to bitcoinjs/bip39 wordlist\n// Reference: https://github.com/paulmillr/scure-bip39\nimport { wordlist } from '@scure/bip39/wordlists/english';\nimport { randomBytes, GetRandomBytes } from './cryptoRandom';\nimport { createSha2Hash } from './sha2Hash';\nimport { createCipher } from './aesCipher';\nimport { createPbkdf2 } from './pbkdf2';\nimport { TriplesecDecryptSignature } from './cryptoUtils';\nimport {\n  bytesToHex,\n  bytesToUtf8,\n  concatBytes,\n  equals,\n  hexToBytes,\n  utf8ToBytes,\n} from '@stacks/common';\nimport { hmacSha256 } from './ec';\n\n/**\n * Encrypt a raw mnemonic phrase to be password protected\n * @param {string} phrase - Raw mnemonic phrase\n * @param {string} password - Password to encrypt mnemonic with\n * @return {Promise<Uint8Array>} The encrypted phrase\n * @ignore\n * */\nexport async function encryptMnemonic(\n  phrase: string,\n  password: string,\n  opts?: {\n    getRandomBytes?: GetRandomBytes;\n  }\n): Promise<Uint8Array> {\n  // hex encoded mnemonic string\n  let mnemonicEntropy: string;\n  try {\n    // must be bip39 mnemonic\n    // `mnemonicToEntropy` converts mnemonic string to raw entropy in form of byte array\n    const entropyBytes = mnemonicToEntropy(phrase, wordlist);\n    // Convert byte array to hex string\n    mnemonicEntropy = bytesToHex(entropyBytes);\n  } catch (error) {\n    console.error('Invalid mnemonic phrase provided');\n    console.error(error);\n    throw new Error('Not a valid bip39 mnemonic');\n  }\n\n  // normalize plaintext to fixed length byte string\n  const plaintextNormalized = hexToBytes(mnemonicEntropy);\n\n  // AES-128-CBC with SHA256 HMAC\n  const pbkdf2 = await createPbkdf2();\n  const salt = opts?.getRandomBytes ? opts.getRandomBytes(16) : randomBytes(16);\n  const keysAndIV = await pbkdf2.derive(password, salt, 100_000, 48, 'sha512');\n  const encKey = keysAndIV.slice(0, 16);\n  const macKey = keysAndIV.slice(16, 32);\n  const iv = keysAndIV.slice(32, 48);\n\n  const cipher = await createCipher();\n  const cipherText = await cipher.encrypt('aes-128-cbc', encKey, iv, plaintextNormalized);\n\n  const hmacPayload = concatBytes(salt, cipherText);\n  const hmacDigest = hmacSha256(macKey, hmacPayload);\n\n  const payload = concatBytes(salt, hmacDigest, cipherText);\n  return payload;\n}\n\n// Used to distinguish bad password during decrypt vs invalid format\nclass PasswordError extends Error {}\n\n/**\n * @ignore\n */\nasync function decryptMnemonicBytes(dataBytes: Uint8Array, password: string): Promise<string> {\n  const salt = dataBytes.slice(0, 16);\n  const hmacSig = dataBytes.slice(16, 48); // 32 bytes\n  const cipherText = dataBytes.slice(48);\n  const hmacPayload = concatBytes(salt, cipherText);\n\n  const pbkdf2 = await createPbkdf2();\n  const keysAndIV = await pbkdf2.derive(password, salt, 100000, 48, 'sha512');\n  const encKey = keysAndIV.slice(0, 16);\n  const macKey = keysAndIV.slice(16, 32);\n  const iv = keysAndIV.slice(32, 48);\n\n  const decipher = await createCipher();\n  const decryptedResult = await decipher.decrypt('aes-128-cbc', encKey, iv, cipherText);\n\n  const hmacDigest = hmacSha256(macKey, hmacPayload);\n\n  // hash both hmacSig and hmacDigest so string comparison time\n  // is uncorrelated to the ciphertext\n  const sha2Hash = await createSha2Hash();\n  const hmacSigHash = await sha2Hash.digest(hmacSig);\n  const hmacDigestHash = await sha2Hash.digest(hmacDigest);\n\n  if (!equals(hmacSigHash, hmacDigestHash)) {\n    // not authentic\n    throw new PasswordError('Wrong password (HMAC mismatch)');\n  }\n\n  let mnemonic: string;\n  try {\n    // Converts raw entropy in form of byte array to mnemonic string\n    mnemonic = entropyToMnemonic(decryptedResult, wordlist);\n  } catch (error) {\n    console.error('Error thrown by `entropyToMnemonic`');\n    console.error(error);\n    throw new PasswordError('Wrong password (invalid plaintext)');\n  }\n  // Validates mnemonic for being 12-24 words contained in `wordlist`\n  if (!validateMnemonic(mnemonic, wordlist)) {\n    throw new PasswordError('Wrong password (invalid plaintext)');\n  }\n\n  return mnemonic;\n}\n\n/**\n * Decrypt legacy triplesec keys\n * @param {Uint8Array} dataBytes - The encrypted key\n * @param {String} password - Password for data\n * @return {Promise<BuUint8Arrayffer>} Decrypted seed\n * @ignore\n */\nfunction decryptLegacy(\n  dataBytes: Uint8Array,\n  password: string,\n  triplesecDecrypt?: TriplesecDecryptSignature\n): Promise<Uint8Array> {\n  return new Promise<Uint8Array>((resolve, reject) => {\n    if (!triplesecDecrypt) {\n      reject(new Error('The `triplesec.decrypt` function must be provided'));\n    }\n    triplesecDecrypt!(\n      {\n        key: utf8ToBytes(password),\n        data: dataBytes,\n      },\n      (err, plaintextBytes) => {\n        if (!err) {\n          resolve(plaintextBytes!);\n        } else {\n          reject(err);\n        }\n      }\n    );\n  });\n}\n\n/**\n * Decrypt an encrypted mnemonic phrase with a password.\n * Legacy triplesec encrypted payloads are also supported.\n * @param data - Bytes or hex-encoded string of the encrypted mnemonic\n * @param password - Password for data\n * @return {string} the raw mnemonic phrase\n * @ignore\n */\nexport async function decryptMnemonic(\n  data: string | Uint8Array,\n  password: string,\n  triplesecDecrypt?: TriplesecDecryptSignature\n): Promise<string> {\n  const dataBytes = typeof data === 'string' ? hexToBytes(data) : data;\n  try {\n    return await decryptMnemonicBytes(dataBytes, password);\n  } catch (error) {\n    if (error instanceof PasswordError) throw error;\n    const data = await decryptLegacy(dataBytes, password, triplesecDecrypt);\n    return bytesToUtf8(data);\n  }\n}\n"],"names":["root","factory","exports","module","define","amd","this","leafPrototypes","getProto","number","n","Number","isSafeInteger","Error","bool","b","bytes","lengths","Uint8Array","TypeError","length","includes","hash","create","outputLen","blockLen","exists","instance","checkFinished","destroyed","finished","output","out","min","Object","defineProperty","value","assert","SHA2","_assert_js_1","utils_js_1","Hash","constructor","padOffset","isLE","super","pos","buffer","view","createView","update","data","default","len","toBytes","take","Math","set","subarray","process","dataView","roundClean","digestInto","fill","i","byteOffset","setBigUint64","_32n","BigInt","_u32_max","wh","wl","h","l","setUint32","oview","outLen","state","get","digest","res","slice","destroy","_cloneInto","to","add","toBig","split","fromBig","U32_MASK64","le","lst","Ah","Uint32Array","Al","Bh","Bl","u64","shrSH","s","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5H","Eh","add5L","El","crypto","node","undefined","web","self","hmac","HMAC","_key","key","iHash","pad","oHash","buf","getPrototypeOf","message","pbkdf2Async","pbkdf2","hmac_js_1","pbkdf2Init","_password","_salt","_opts","opts","checkOpts","dkLen","asyncTick","c","password","salt","DK","PRF","PRFSalt","pbkdf2Output","prfW","u","arr","ti","Ti","setInt32","ui","async","asyncLoop","sha224","sha256","_sha2_js_1","Maj","a","SHA256_K","IV","SHA256_W","SHA256","A","B","C","D","E","F","G","H","offset","getUint32","W15","W2","s0","rotr","s1","T1","T2","SHA224","wrapConstructor","sha384","sha512_256","sha512_224","sha512","SHA512","_u64_js_1","SHA512_Kh","SHA512_Kl","map","SHA512_W_H","SHA512_W_L","Fh","Fl","Gh","Gl","Hh","Hl","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","SHA512_224","SHA512_256","SHA384","randomBytes","wrapConstructorWithOpts","concatBytes","utf8ToBytes","nextTick","hexToBytes","bytesToHex","u32","u8","crypto_1","byteLength","floor","DataView","word","shift","hexes","Array","from","v","toString","padStart","str","TextEncoder","encode","uint8a","hex","array","j","hexByte","byte","parseInt","isNaN","iters","tick","cb","ts","Date","now","diff","arrays","every","reduce","result","clone","defaults","obj","prototype","call","assign","hashConstructor","hashC","tmp","hashCons","msg","bytesLength","getRandomValues","assertNumber","chain","args","wrap","reverse","acc","decode","alphabet","digits","isArray","input","letter","index","indexOf","join","separator","padding","bits","chr","push","end","normalize","fn","convertRadix","forEach","d","carry","done","digit","digitBase","stringToBytes","bytesToString","utf8","bech32m","bech32","base58check","base58xmr","base58xrp","base58flickr","base58","base64url","base64","base32crockford","base32hex","base32","base16","utils","gcd","radix2carry","convertRadix2","mask","radix","num","radix2","revPadding","unsafeWrapper","apply","e","checksum","payload","newChecksum","oldChecksum","toUpperCase","replace","genBase58","abc","XMR_BLOCK_LEN","block","concat","BECH_ALPHABET","POLYMOD_GENERATORS","bech32Polymod","pre","chk","bechChecksum","prefix","words","encodingConst","charCodeAt","genBech32","encoding","ENCODING_CONST","_words","fromWords","toWords","fromWordsUnsafe","limit","lowered","toLowerCase","sepIndex","lastIndexOf","sum","endsWith","actualLength","decodeToBytes","decodeUnsafe","TextDecoder","CODERS","coderTypeError","keys","type","hasOwnProperty","_assert_1","sha256_1","base_1","nfkd","assertEntropy","entropy","calcChecksum","bitsLeft","getCoder","wordlist","mnemonicToEntropy","mnemonic","norm","isJapanese","ALPHABET","BASE_MAP","x","charAt","xc","BASE","LEADER","FACTOR","log","iFACTOR","source","psz","zeroes","size","b256","it3","it4","vch","ArrayBuffer","isView","pbegin","pend","b58","it1","it2","repeat","string","b64","lens","validLen","getLens","placeHoldersLen","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","maxChunkLength","len2","encodeChunk","lookup","code","start","basex","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","t","mode","then","ns","r","def","current","getOwnPropertyNames","definition","o","enumerable","g","globalThis","Function","window","prop","Symbol","toStringTag","_0n","_1n","_2n","_3n","_8n","CURVE","freeze","P","Gx","Gy","beta","divNearest","endo","splitScalar","k","a1","b1","a2","b2","POW_2_128","c1","c2","k1","mod","k2","k1neg","k2neg","fieldLen","groupLen","hashLen","compressedLen","uncompressedLen","weierstrass","x2","x3","USE_ENDOMORPHISM","ShaError","assertJacPoint","other","JacobianPoint","y","z","fromAffine","p","Point","equals","ZERO","toAffineBatch","points","toInv","nums","scratch","inverted","invert","reduceRight","invertBatch","toAffine","normalizeZ","X1","Y1","Z1","X2","Y2","Z2","Z1Z1","Z2Z2","U1","U2","S1","S2","negate","double","x1b","X3","Y3","Z3","HH","HHH","V","subtract","multiplyUnsafe","scalar","P0","normalizeScalar","k1p","k2p","precomputeWindow","W","windows","base","wNAF","affinePoint","_WINDOW_SIZE","precomputes","pointPrecomputes","f","windowSize","maxNumber","shiftBy","wbits","offset1","offset2","abs","cond1","cond2","constTimeNegate","multiply","point","fake","f1p","f2p","invZ","is0","iz1","iz2","iz3","ax","ay","zz","condition","item","neg","WeakMap","_setWindowSize","delete","hasEvenY","fromCompressedHex","isShort","bytesToNumber","isValidFieldElement","_6n","_11n","_22n","_23n","_44n","_88n","b3","b6","pow2","b9","b11","b22","b44","b88","b176","b220","b223","t1","t2","rt","sqrtMod","isYOdd","assertValidity","fromUncompressedHex","fromHex","ensureBytes","header","fromPrivateKey","privateKey","normalizePrivateKey","fromSignature","msgHash","signature","recovery","normalizeSignature","truncateHash","radj","rinv","u1","u2","R","numTo32bStr","Q","multiplyAndAddUnsafe","toRawBytes","isCompressed","toHex","toHexX","toRawX","left","aP","bQ","sliceDER","parseDERInt","Signature","fromCompact","name","hexToNumber","fromDER","sBytes","rBytesLeft","parseDERSignature","isWithinCurveOrder","hasHighS","HALF","normalizeS","toDERRawBytes","toDERHex","sHex","numberToHexUnpadded","rHex","sHexL","rHexL","sLen","rLen","toCompactRawBytes","toCompactHex","POW_2_256","numTo32b","power","modulo","q","m","truncateOnly","delta","bits2int_2","_sha256Sync","_hmacSha256Sync","HmacDrbg","qByteLen","counter","values","hmacSha256","hmacSync","checkSync","incr","reseed","seed","reseedSync","generate","sl","generateSync","kmdToSig","kBytes","lowS","kinv","sig","normalizePublicKey","publicKey","error","getPublicKey","isProbPub","getSharedSecret","privateA","publicB","bits2int","bits2octets","z1","z2","int2octets","signSync","privKey","extraEntropy","h1","seedArgs","initSigArgs","drbg","canonical","recSig","der","recovered","hashed","finalizeSig","vopts","strict","verify","sinv","TAGGED_HASH_PREFIXES","isValidPrivateKey","_bigintTo32Bytes","_normalizePrivateKey","hashToPrivateKey","minLen","randomPrivateKey","precompute","cached","messages","subtle","createHash","ckey","importKey","sign","createHmac","sha256Sync","hmacSha256Sync","taggedHash","tag","tagP","tagH","taggedHashSync","_JacobianPoint","hexToBigInt","bigIntToBytes","integer","lengthBytes","signed","parsedValue","isInteger","RangeError","MAX_SAFE_INTEGER","startsWith","SyntaxError","bn","width","nthBit","fromTwos","intToBigInt","intToHex","defineProperties","configurable","val","_","paddedHex","bytesToUtf8","ERROR_CODES","MISSING_PARAMETER","REMOTE_SERVICE_ERROR","INVALID_STATE","NO_SESSION_DATA","DOES_NOT_EXIST","FAILED_DECRYPTION_ERROR","INVALID_DID_ERROR","NOT_ENOUGH_FUNDS_ERROR","INVALID_AMOUNT_ERROR","LOGIN_FAILED_ERROR","SIGNATURE_VERIFICATION_ERROR","CONFLICT_ERROR","NOT_ENOUGH_PROOF_ERROR","BAD_PATH_ERROR","VALIDATION_ERROR","PAYLOAD_TOO_LARGE_ERROR","PRECONDITION_FAILED_ERROR","UNKNOWN","BlockstackError","bugDetails","stack","parameter","FailedDecryptionError","COORDINATE_BYTES","signatureRsvToVrs","NO_CRYPTO_LIB","getCryptoLib","lib","NodeCryptoAesCipher","createCipher","createDecipher","encrypt","algorithm","iv","cipher","final","Promise","resolve","decrypt","WebCryptoAesCipher","subtleCrypto","algo","cryptoKey","cryptoLib","createCipheriv","createDecipheriv","readUInt8","writeUInt8","destination","readUInt32LE","writeUInt32LE","privateKeyToBytes","privateKeyBuffer","ChainID","TransactionVersion","PeerNetworkID","PRIVATE_KEY_COMPRESSED_LENGTH","Rho","Id","Pi","idxL","idxR","shifts","shiftsL","idx","shiftsR","Kl","Kr","rotl","group","BUF","RIPEMD160","h0","h2","h3","h4","al","ar","bl","br","cl","cr","dl","dr","el","er","rGroup","hbl","hbr","rl","rr","sr","tl","tr","ripemd160","NodeCryptoSha2Hash","console","hashSha256Sync","hashSha512Sync","WebCryptoSha2Hash","createSha2Hash","BITCOIN_PUBKEYHASH","makeECPrivateKey","base58CheckDecode","btcAddress","version","base58Encode","base58CheckEncode","publicKeyToBtcAddress","getPublicKeyFromPrivate","ecSign","messageHash","hexPrivateKey","compressPrivateKey","privateKeyBytes","msgs","ensureUInt53","encodingLength","chainPrefix","hashMessage","encodeMessage","messageBytes","encodedLength","writeUInt16LE","decodeMessage","encodedMessage","prefixByteLength","messageWithoutChainPrefix","decoded","first","readUInt16LE","lo","varIntLength","inputByteLength","ceil","hashCode","InvalidPublicKeyReason","aes256CbcEncrypt","plaintext","content","sharedSecretToKeys","sharedSecret","hashedSecret","encryptionKey","hmacKey","getHexFromBN","bnInput","hexOut","getBytesFromBN","getCipherObjectWrapper","shell","ephemeralPK","mac","cipherText","wasString","cipherTextEncoding","payloadValuesLength","ivLength","payloadShell","JSON","stringify","getSignedCipherObjectWrapper","signedPayloadValuesLength","signatureLength","signedPayloadShell","eciesGetJsonStringLength","cipherTextLength","contentLength","encodedCipherTextLength","encryptECIES","validity","pub","invalidFormat","reason_data","reason","invalidPoint","firstByte","match","isValidPublicKey","ephemeralPrivateKey","ephemeralPublicKey","sharedKeys","initializationVector","macData","cipherTextString","decryptECIES","cipherObject","ivBytes","cipherTextBytes","actualMac","equalsConstTime","plainText","ciphertext","aes256CbcDecrypt","signECDSA","contentBytes","verifyECDSA","verifyMessageSignature","recoveryIdHex","recoveryId","parseRecoverableSignatureVrs","verificationResult","verifyMessageSignatureRsv","encryptContent","options","cipherPayload","signatureObject","signedCipherObject","decryptContent","parse","err","NodeCryptoPbkdf2","nodePbkdf2","derive","iterations","keyLength","reject","WebCryptoPbkdf2","passwordBytes","deriveBits","WebCryptoPartialPbkdf2","algoOpts","hmacDigest","saltLength","block1","destPos","hLen","T","U","createPbkdf2","encryptMnemonic","phrase","mnemonicEntropy","plaintextNormalized","getRandomBytes","keysAndIV","encKey","macKey","hmacPayload","PasswordError","decryptMnemonic","triplesecDecrypt","dataBytes","hmacSig","decipher","decryptedResult","sha2Hash","decryptMnemonicBytes","plaintextBytes","decryptLegacy"],"sourceRoot":""}