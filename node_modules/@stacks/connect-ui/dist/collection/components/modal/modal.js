import { h } from '@stencil/core';
import CloseIcon from './assets/close-icon.svg';
import LeatherLogo from './assets/leather-logo.svg';
import XverseWalletLogo from './assets/xverse-wallet-logo.svg';
import { getBrowser, getPlatform } from './utils';
const CHROME_BROWSER_URL = 'https://www.google.com/chrome/';
const BRAVE_BROWSER_URL = 'https://brave.com/';
const FIREFOX_BROWSER_URL = 'https://www.mozilla.org/en-US/';
const CHROME_STORE_URL = 'https://chrome.google.com/webstore/detail/hiro-wallet/ldinpeekobnhjjdofggfgjlcehhmanlj/';
const FIREFOX_STORE_URL = 'https://addons.mozilla.org/en-US/firefox/addon/hiro-wallet/';
const XVERSE_APP_STORE_URL = 'https://apps.apple.com/app/id1552272513';
const XVERSE_PLAY_STORE_URL = 'https://play.google.com/store/apps/details?id=com.secretkeylabs.xverse';
const XVERSE_CHROME_STORE_URL = 'https://chrome.google.com/webstore/detail/xverse-wallet/idnnbdplmphpflfnlkomgpfbpcgelopg';
export class Modal {
  constructor() {
    this.authOptions = undefined;
    this.hasOpenedInstall = undefined;
    this.hasOpenedInstallXverse = undefined;
  }
  handleCloseModal() {
    var _a, _b;
    this.modalEl.remove();
    (_b = (_a = this.authOptions).onCancel) === null || _b === void 0 ? void 0 : _b.call(_a);
  }
  handleDownloadPath(browser) {
    if (browser === 'Chrome') {
      window.open(CHROME_STORE_URL, '_blank');
    }
    else if (browser === 'Firefox') {
      window.open(FIREFOX_STORE_URL, '_blank');
    }
    else if (browser === 'IOS') {
      window.open(XVERSE_APP_STORE_URL, '_blank');
      this.hasOpenedInstallXverse = true;
      return;
    }
    else if (browser === 'Android') {
      window.open(XVERSE_PLAY_STORE_URL, '_blank');
      this.hasOpenedInstallXverse = true;
      return;
    }
    else if (browser === 'Xverse-Chrome') {
      window.open(XVERSE_CHROME_STORE_URL, '_blank');
      this.hasOpenedInstallXverse = true;
      return;
    }
    else {
      window.open('https://www.hiro.so/wallet/install-web', '_blank');
    }
    this.hasOpenedInstall = true;
  }
  render() {
    const browser = getBrowser();
    const isMobile = getPlatform();
    return (h("div", { class: "modal-container" }, h("div", { class: "modal-body" }, h("div", { class: "modal-header" }, h("div", { class: "close-modal" }, h("img", { class: "close-icon", src: CloseIcon, onClick: () => this.handleCloseModal() })), isMobile || browser ? (h("span", { class: "modal-title" }, "Get wallet to use ", this.authOptions.appDetails.name)) : (h("span", { class: "modal-title" }, "Your browser isn't supported"))), h("div", { class: "modal-subtitle" }, "To sign in to ", this.authOptions.appDetails.name, ", you will need a Stacks-compatible wallet."), h("div", { class: "modal-content" }, h("div", { class: "wallet-container" }, h("div", { class: "modal-wallet-card" }, h("img", { src: LeatherLogo }), h("div", { class: "modal-wallet-card-content" }, h("span", { class: "modal-subheading" }, "Leather"), browser && !isMobile ? (h("div", { class: "modal-wallet-text" }, "Leather is the only Bitcoin wallet you need to tap into the emerging Bitcoin economy.")) : (h("div", { class: "modal-wallet-text" }, "Browser extension for ", ` `, h("a", { href: CHROME_BROWSER_URL, target: "_blank" }, "Chrome"), `, `, h("a", { href: BRAVE_BROWSER_URL, target: "_blank" }, "Brave"), `, or `, h("a", { href: FIREFOX_BROWSER_URL, target: "_blank" }, "Firefox"), ` on desktop.`)), h("span", { class: "link", onClick: () => window.open('https://leather.io/', '_blank') }, "About Leather \u2192"), browser && !isMobile && (h("div", { class: "download-app-container" }, this.hasOpenedInstall ? (h("div", { class: "modal-wallet-text" }, "After installing Leather, reload this page and sign in.")) : (h("button", { class: "button", onClick: () => {
        this.handleDownloadPath(browser);
      } }, "Download")))))), h("div", { class: "modal-wallet-card" }, h("img", { src: XverseWalletLogo }), h("div", { class: "modal-wallet-card-content" }, h("span", { class: "modal-subheading" }, "Xverse Wallet"), browser === 'Chrome' ? (h("div", { class: "modal-wallet-text" }, "Xverse is an advanced web3 wallet for Bitcoin and Stacks. Available for Chrome, Android and iOS. Add it to Chrome to continue.")) : isMobile ? (h("div", { class: "modal-wallet-text" }, "Xverse is your gateway to Stacks apps like ", this.authOptions.appDetails.name, ". Install it on your device to continue.`")) : (h("div", { class: "modal-wallet-text" }, "Browser extension for ", ` `, h("a", { href: CHROME_BROWSER_URL, target: "_blank" }, "Chrome"), ` on desktop, application for iOS and Android on mobile.`)), h("span", { class: "link", onClick: () => window.open('https://www.xverse.app/', '_blank') }, "About Xverse Wallet \u2192"), h("div", { class: "download-app-container" }, this.hasOpenedInstallXverse ? (isMobile ? (h("span", { class: "link", onClick: () => window.open(`stacks://browser?url=${window.location.href}`, '_blank') }, "Open this page in Xverse Wallet \u2192")) : (h("div", { class: "modal-wallet-text" }, "After installing Xverse Wallet, reload this page and sign in."))) : ((browser === 'Chrome' || isMobile) && (h("button", { class: "button", onClick: () => {
        this.handleDownloadPath(isMobile !== null && isMobile !== void 0 ? isMobile : `Xverse-${browser}`);
      } }, "Download")))))))))));
  }
  static get is() { return "connect-modal"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["modal.scss"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["modal.css"]
    };
  }
  static get assetsDirs() { return ["assets"]; }
  static get properties() {
    return {
      "authOptions": {
        "type": "any",
        "mutable": false,
        "complexType": {
          "original": "any",
          "resolved": "any",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": ""
        },
        "attribute": "auth-options",
        "reflect": false
      }
    };
  }
  static get states() {
    return {
      "hasOpenedInstall": {},
      "hasOpenedInstallXverse": {}
    };
  }
  static get elementRef() { return "modalEl"; }
}
