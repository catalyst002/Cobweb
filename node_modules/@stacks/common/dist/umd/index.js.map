{"version":3,"file":"index.js","mappings":"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","sources":["webpack://StacksCommon/webpack/universalModuleDefinition","webpack://StacksCommon/webpack/bootstrap","webpack://StacksCommon/webpack/runtime/define property getters","webpack://StacksCommon/webpack/runtime/global","webpack://StacksCommon/webpack/runtime/hasOwnProperty shorthand","webpack://StacksCommon/webpack/runtime/make namespace object","webpack://StacksCommon/./src/config.ts","webpack://StacksCommon/./src/errors.ts","webpack://StacksCommon/./src/logger.ts","webpack://StacksCommon/./src/utils.ts","webpack://StacksCommon/./src/constants.ts","webpack://StacksCommon/./src/signatures.ts","webpack://StacksCommon/./src/keys.ts","webpack://StacksCommon/./src/buffer.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"StacksCommon\"] = factory();\n\telse\n\t\troot[\"StacksCommon\"] = factory();\n})(this, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// import { network } from './network'\n\n/**\n * @ignore\n */\nconst config = {\n  // network: network.defaults.MAINNET_DEFAULT,\n  network: {\n    layer1: 'placeholder',\n  },\n  logLevel: 'debug',\n};\n\nexport { config };\n","/**\n * @ignore\n */\nexport const ERROR_CODES = {\n  MISSING_PARAMETER: 'missing_parameter',\n  REMOTE_SERVICE_ERROR: 'remote_service_error',\n  INVALID_STATE: 'invalid_state',\n  NO_SESSION_DATA: 'no_session_data',\n  DOES_NOT_EXIST: 'does_not_exist',\n  FAILED_DECRYPTION_ERROR: 'failed_decryption_error',\n  INVALID_DID_ERROR: 'invalid_did_error',\n  NOT_ENOUGH_FUNDS_ERROR: 'not_enough_error',\n  INVALID_AMOUNT_ERROR: 'invalid_amount_error',\n  LOGIN_FAILED_ERROR: 'login_failed',\n  SIGNATURE_VERIFICATION_ERROR: 'signature_verification_failure',\n  CONFLICT_ERROR: 'conflict_error',\n  NOT_ENOUGH_PROOF_ERROR: 'not_enough_proof_error',\n  BAD_PATH_ERROR: 'bad_path_error',\n  VALIDATION_ERROR: 'validation_error',\n  PAYLOAD_TOO_LARGE_ERROR: 'payload_too_large_error',\n  PRECONDITION_FAILED_ERROR: 'precondition_failed_error',\n  UNKNOWN: 'unknown',\n};\n\nObject.freeze(ERROR_CODES);\n\n/**\n * @ignore\n */\ntype ErrorData = {\n  code: string;\n  parameter?: string;\n  message: string;\n};\n\n/**\n * @ignore\n */\nexport class BlockstackError extends Error {\n  message: string;\n\n  code: string;\n\n  parameter?: string;\n\n  constructor(error: ErrorData) {\n    super();\n    let message = error.message;\n    let bugDetails = `Error Code: ${error.code}`;\n    let stack = this.stack;\n    if (!stack) {\n      try {\n        throw new Error();\n      } catch (e: any) {\n        stack = e.stack;\n      }\n    } else {\n      bugDetails += `Stack Trace:\\n${stack}`;\n    }\n    message += `\\nIf you believe this exception is caused by a bug in stacks.js,\n      please file a bug report: https://github.com/blockstack/stacks.js/issues\\n\\n${bugDetails}`;\n    this.message = message;\n    this.code = error.code;\n    this.parameter = error.parameter ? error.parameter : undefined;\n  }\n\n  toString() {\n    return `${super.toString()}\n    code: ${this.code} param: ${this.parameter ? this.parameter : 'n/a'}`;\n  }\n}\n\n/**\n * @ignore\n */\nexport class InvalidParameterError extends BlockstackError {\n  constructor(parameter: string, message: string = '') {\n    super({ code: ERROR_CODES.MISSING_PARAMETER, message, parameter });\n    this.name = 'MissingParametersError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class MissingParameterError extends BlockstackError {\n  constructor(parameter: string, message: string = '') {\n    super({ code: ERROR_CODES.MISSING_PARAMETER, message, parameter });\n    this.name = 'MissingParametersError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class RemoteServiceError extends BlockstackError {\n  response: Response;\n\n  constructor(response: Response, message: string = '') {\n    super({ code: ERROR_CODES.REMOTE_SERVICE_ERROR, message });\n    this.response = response;\n  }\n}\n\n/**\n * @ignore\n */\nexport class InvalidDIDError extends BlockstackError {\n  constructor(message: string = '') {\n    super({ code: ERROR_CODES.INVALID_DID_ERROR, message });\n    this.name = 'InvalidDIDError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class NotEnoughFundsError extends BlockstackError {\n  leftToFund: number;\n\n  constructor(leftToFund: number) {\n    const message = `Not enough UTXOs to fund. Left to fund: ${leftToFund}`;\n    super({ code: ERROR_CODES.NOT_ENOUGH_FUNDS_ERROR, message });\n    this.leftToFund = leftToFund;\n    this.name = 'NotEnoughFundsError';\n    this.message = message;\n  }\n}\n\n/**\n * @ignore\n */\nexport class InvalidAmountError extends BlockstackError {\n  fees: number;\n\n  specifiedAmount: number;\n\n  constructor(fees: number, specifiedAmount: number) {\n    const message =\n      `Not enough coin to fund fees transaction fees. Fees would be ${fees},` +\n      ` specified spend is  ${specifiedAmount}`;\n    super({ code: ERROR_CODES.INVALID_AMOUNT_ERROR, message });\n    this.specifiedAmount = specifiedAmount;\n    this.fees = fees;\n    this.name = 'InvalidAmountError';\n    this.message = message;\n  }\n}\n\n/**\n * @ignore\n */\nexport class LoginFailedError extends BlockstackError {\n  constructor(reason: string) {\n    const message = `Failed to login: ${reason}`;\n    super({ code: ERROR_CODES.LOGIN_FAILED_ERROR, message });\n    this.message = message;\n    this.name = 'LoginFailedError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class SignatureVerificationError extends BlockstackError {\n  constructor(reason: string) {\n    const message = `Failed to verify signature: ${reason}`;\n    super({ code: ERROR_CODES.SIGNATURE_VERIFICATION_ERROR, message });\n    this.message = message;\n    this.name = 'SignatureVerificationError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class FailedDecryptionError extends BlockstackError {\n  constructor(message: string = 'Unable to decrypt cipher object.') {\n    super({ code: ERROR_CODES.FAILED_DECRYPTION_ERROR, message });\n    this.message = message;\n    this.name = 'FailedDecryptionError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class InvalidStateError extends BlockstackError {\n  constructor(message: string) {\n    super({ code: ERROR_CODES.INVALID_STATE, message });\n    this.message = message;\n    this.name = 'InvalidStateError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class NoSessionDataError extends BlockstackError {\n  constructor(message: string) {\n    super({ code: ERROR_CODES.INVALID_STATE, message });\n    this.message = message;\n    this.name = 'NoSessionDataError';\n  }\n}\n\n/**\n * @ignore\n */\nexport interface GaiaHubErrorResponse {\n  status: number;\n  statusText: string;\n  body?: any; // todo: should this be string?\n}\n\nexport interface HubErrorDetails {\n  message?: string;\n  statusCode: number;\n  statusText: string;\n  [prop: string]: any;\n}\n\n/**\n * @ignore\n */\nexport class GaiaHubError extends BlockstackError {\n  hubError?: HubErrorDetails;\n\n  constructor(error: ErrorData, response: GaiaHubErrorResponse) {\n    super(error);\n    if (response) {\n      this.hubError = {\n        statusCode: response.status,\n        statusText: response.statusText,\n      };\n      if (typeof response.body === 'string') {\n        this.hubError.message = response.body;\n      } else if (typeof response.body === 'object') {\n        Object.assign(this.hubError, response.body);\n      }\n    }\n  }\n}\n\n/**\n * @ignore\n */\nexport class DoesNotExist extends GaiaHubError {\n  constructor(message: string, response: GaiaHubErrorResponse) {\n    super({ message, code: ERROR_CODES.DOES_NOT_EXIST }, response);\n    this.name = 'DoesNotExist';\n  }\n}\n\n/**\n * @ignore\n */\nexport class ConflictError extends GaiaHubError {\n  constructor(message: string, response: GaiaHubErrorResponse) {\n    super({ message, code: ERROR_CODES.CONFLICT_ERROR }, response);\n    this.name = 'ConflictError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class NotEnoughProofError extends GaiaHubError {\n  constructor(message: string, response: GaiaHubErrorResponse) {\n    super({ message, code: ERROR_CODES.NOT_ENOUGH_PROOF_ERROR }, response);\n    this.name = 'NotEnoughProofError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class BadPathError extends GaiaHubError {\n  constructor(message: string, response: GaiaHubErrorResponse) {\n    super({ message, code: ERROR_CODES.BAD_PATH_ERROR }, response);\n    this.name = 'BadPathError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class ValidationError extends GaiaHubError {\n  constructor(message: string, response: GaiaHubErrorResponse) {\n    super({ message, code: ERROR_CODES.VALIDATION_ERROR }, response);\n    this.name = 'ValidationError';\n  }\n}\n\n/**\n * @ignore\n */\nexport class PayloadTooLargeError extends GaiaHubError {\n  /** Can be `null` when an oversized payload is detected client-side. */\n  hubError?: HubErrorDetails;\n\n  maxUploadByteSize: number;\n\n  constructor(message: string, response: GaiaHubErrorResponse | null, maxUploadByteSize: number) {\n    super({ message, code: ERROR_CODES.PAYLOAD_TOO_LARGE_ERROR }, response!);\n    this.name = 'PayloadTooLargeError';\n    this.maxUploadByteSize = maxUploadByteSize;\n  }\n}\n\n/**\n * @ignore\n */\nexport class PreconditionFailedError extends GaiaHubError {\n  constructor(message: string, response: GaiaHubErrorResponse) {\n    super({ message, code: ERROR_CODES.PRECONDITION_FAILED_ERROR }, response);\n    this.name = 'PreconditionFailedError';\n  }\n}\n","import { config } from './config';\n\nconst levels = ['debug', 'info', 'warn', 'error', 'none'];\n\nconst levelToInt: { [level: string]: number } = {};\nconst intToLevel: { [int: number]: string } = {};\n\nfor (let index = 0; index < levels.length; index++) {\n  const level = levels[index];\n  levelToInt[level] = index;\n  intToLevel[index] = level;\n}\n\n/**\n * @ignore\n */\nexport class Logger {\n  static error(message: string) {\n    if (!this.shouldLog('error')) return;\n    console.error(this.logMessage('error', message));\n  }\n\n  static warn(message: string) {\n    if (!this.shouldLog('warn')) return;\n    console.warn(this.logMessage('warn', message));\n  }\n\n  static info(message: string) {\n    if (!this.shouldLog('info')) return;\n    console.log(this.logMessage('info', message));\n  }\n\n  static debug(message: string) {\n    if (!this.shouldLog('debug')) return;\n    console.log(this.logMessage('debug', message));\n  }\n\n  static logMessage(level: string, message: string) {\n    return `[${level.toUpperCase()}] ${message}`;\n  }\n\n  static shouldLog(level: string) {\n    const currentLevel = levelToInt[config.logLevel];\n    return currentLevel <= levelToInt[level];\n  }\n}\n","import { Logger } from './logger';\n\n/**\n *  @ignore\n */\nexport const BLOCKSTACK_HANDLER = 'blockstack';\n\n/**\n * Time\n * @private\n * @ignore\n */\nexport function nextYear() {\n  return new Date(new Date().setFullYear(new Date().getFullYear() + 1));\n}\n\n/**\n * Time\n * @private\n * @ignore\n */\nexport function nextMonth() {\n  return new Date(new Date().setMonth(new Date().getMonth() + 1));\n}\n\n/**\n * Time\n * @private\n * @ignore\n */\nexport function nextHour() {\n  return new Date(new Date().setHours(new Date().getHours() + 1));\n}\n\n/**\n * Converts megabytes to bytes. Returns 0 if the input is not a finite number.\n * @ignore\n */\nexport function megabytesToBytes(megabytes: number): number {\n  if (!Number.isFinite(megabytes)) {\n    return 0;\n  }\n  return Math.floor(megabytes * 1024 * 1024);\n}\n\n/**\n * Calculate the AES-CBC ciphertext output byte length a given input length.\n * AES has a fixed block size of 16-bytes regardless key size.\n * @ignore\n */\nexport function getAesCbcOutputLength(inputByteLength: number) {\n  // AES-CBC block mode rounds up to the next block size.\n  const cipherTextLength = (Math.floor(inputByteLength / 16) + 1) * 16;\n  return cipherTextLength;\n}\n\n/**\n * Calculate the base64 encoded string length for a given input length.\n * This is equivalent to the byte length when the string is ASCII or UTF8-8\n * encoded.\n * @param number\n */\nexport function getBase64OutputLength(inputByteLength: number) {\n  const encodedLength = Math.ceil(inputByteLength / 3) * 4;\n  return encodedLength;\n}\n\n/**\n * Query Strings\n * @private\n * @ignore\n */\n\nexport function updateQueryStringParameter(uri: string, key: string, value: string) {\n  const re = new RegExp(`([?&])${key}=.*?(&|$)`, 'i');\n  const separator = uri.indexOf('?') !== -1 ? '&' : '?';\n  if (uri.match(re)) {\n    return uri.replace(re, `$1${key}=${value}$2`);\n  } else {\n    return `${uri}${separator}${key}=${value}`;\n  }\n}\n\n/**\n * Versioning\n * @param {string} v1 - the left half of the version inequality\n * @param {string} v2 - right half of the version inequality\n * @returns {bool} iff v1 >= v2\n * @private\n * @ignore\n */\n\nexport function isLaterVersion(v1: string, v2: string) {\n  if (v1 === undefined || v1 === '') {\n    v1 = '0.0.0';\n  }\n\n  if (v2 === undefined || v1 === '') {\n    v2 = '0.0.0';\n  }\n\n  const v1tuple = v1.split('.').map(x => parseInt(x, 10));\n  const v2tuple = v2.split('.').map(x => parseInt(x, 10));\n\n  for (let index = 0; index < v2.length; index++) {\n    if (index >= v1.length) {\n      v2tuple.push(0);\n    }\n    if (v1tuple[index] < v2tuple[index]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * UUIDs\n * @private\n * @ignore\n */\nexport function makeUUID4() {\n  let d = new Date().getTime();\n  if (typeof performance !== 'undefined' && typeof performance.now === 'function') {\n    d += performance.now(); // use high-precision timer if available\n  }\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = (d + Math.random() * 16) % 16 | 0;\n    d = Math.floor(d / 16);\n    return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16);\n  });\n}\n\n/**\n * Checks if both urls pass the same origin check & are absolute\n * @param  {[type]}  uri1 first uri to check\n * @param  {[type]}  uri2 second uri to check\n * @return {Boolean} true if they pass the same origin check\n * @private\n * @ignore\n */\nexport function isSameOriginAbsoluteUrl(uri1: string, uri2: string) {\n  try {\n    const parsedUri1 = new URL(uri1);\n    const parsedUri2 = new URL(uri2);\n\n    const port1 =\n      parseInt(parsedUri1.port || '0', 10) | 0 || (parsedUri1.protocol === 'https:' ? 443 : 80);\n    const port2 =\n      parseInt(parsedUri2.port || '0', 10) | 0 || (parsedUri2.protocol === 'https:' ? 443 : 80);\n\n    const match = {\n      scheme: parsedUri1.protocol === parsedUri2.protocol,\n      hostname: parsedUri1.hostname === parsedUri2.hostname,\n      port: port1 === port2,\n      absolute:\n        (uri1.includes('http://') || uri1.includes('https://')) &&\n        (uri2.includes('http://') || uri2.includes('https://')),\n    };\n\n    return match.scheme && match.hostname && match.port && match.absolute;\n  } catch (error) {\n    console.log(error);\n    console.log('Parsing error in same URL origin check');\n    // Parse error\n    return false;\n  }\n}\n\n/**\n * Returns the global scope `Window`, `WorkerGlobalScope`, or `NodeJS.Global` if available in the\n * currently executing environment.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/self\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WorkerGlobalScope/self\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope\n *\n * This could be switched to `globalThis` once it is standardized and widely available.\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis\n * @ignore\n */\nexport function getGlobalScope(): Window {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  // This function is meant to be called when accessing APIs that are typically only available in\n  // web-browser/DOM environments, but we also want to support situations where running in Node.js\n  // environment, and a polyfill was added to the Node.js `global` object scope without adding the\n  // `window` global object as well.\n  if (typeof global !== 'undefined') {\n    return global as unknown as Window;\n  }\n  throw new Error(\n    'Unexpected runtime environment - no supported global scope (`window`, `self`, `global`) available'\n  );\n}\n\nfunction getAPIUsageErrorMessage(\n  scopeObject: unknown,\n  apiName: string,\n  usageDesc?: string\n): string {\n  if (usageDesc) {\n    return `Use of '${usageDesc}' requires \\`${apiName}\\` which is unavailable on the '${scopeObject}' object within the currently executing environment.`;\n  } else {\n    return `\\`${apiName}\\` is unavailable on the '${scopeObject}' object within the currently executing environment.`;\n  }\n}\n\ninterface GetGlobalObjectOptions {\n  /**\n   * Throw an error if the object is not found.\n   * @default false\n   */\n  throwIfUnavailable?: boolean;\n  /**\n   * Additional information to include in an error if thrown.\n   */\n  usageDesc?: string;\n  /**\n   * If the object is not found, return an new empty object instead of undefined.\n   * Requires [[throwIfUnavailable]] to be falsey.\n   * @default false\n   */\n  returnEmptyObject?: boolean;\n}\n\n/**\n * Returns an object from the global scope (`Window` or `WorkerGlobalScope`) if it\n * is available within the currently executing environment.\n * When executing within the Node.js runtime these APIs are unavailable and will be\n * `undefined` unless the API is provided via polyfill.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/self\n * @ignore\n */\nexport function getGlobalObject<K extends Extract<keyof Window, string>>(\n  name: K,\n  { throwIfUnavailable, usageDesc, returnEmptyObject }: GetGlobalObjectOptions = {}\n): Window[K] | undefined {\n  let globalScope: Window | undefined = undefined;\n  try {\n    globalScope = getGlobalScope();\n    if (globalScope) {\n      const obj = globalScope[name];\n      if (obj) {\n        return obj;\n      }\n    }\n  } catch (error) {\n    Logger.error(`Error getting object '${name}' from global scope '${globalScope}': ${error}`);\n  }\n  if (throwIfUnavailable) {\n    const errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n    Logger.error(errMsg);\n    throw new Error(errMsg);\n  }\n  if (returnEmptyObject) {\n    return {} as any;\n  }\n  return undefined;\n}\n\n/**\n * Returns a specified subset of objects from the global scope (`Window` or `WorkerGlobalScope`)\n * if they are available within the currently executing environment.\n * When executing within the Node.js runtime these APIs are unavailable will be `undefined`\n * unless the API is provided via polyfill.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/self\n * @ignore\n */\nexport function getGlobalObjects<K extends Extract<keyof Window, string>>(\n  names: K[],\n  { throwIfUnavailable, usageDesc, returnEmptyObject }: GetGlobalObjectOptions = {}\n): Pick<Window, K> {\n  let globalScope: Window | undefined;\n  try {\n    globalScope = getGlobalScope();\n  } catch (error) {\n    Logger.error(`Error getting global scope: ${error}`);\n    if (throwIfUnavailable) {\n      const errMsg = getAPIUsageErrorMessage(globalScope, names[0].toString(), usageDesc);\n      Logger.error(errMsg);\n      throw errMsg;\n    } else if (returnEmptyObject) {\n      globalScope = {} as any;\n    }\n  }\n\n  const result: Pick<Window, K> = {} as any;\n  for (let i = 0; i < names.length; i++) {\n    const name = names[i];\n    try {\n      if (globalScope) {\n        const obj = globalScope[name];\n        if (obj) {\n          result[name] = obj;\n        } else if (throwIfUnavailable) {\n          const errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n          Logger.error(errMsg);\n          throw new Error(errMsg);\n        } else if (returnEmptyObject) {\n          result[name] = {} as any;\n        }\n      }\n    } catch (error) {\n      if (throwIfUnavailable) {\n        const errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n        Logger.error(errMsg);\n        throw new Error(errMsg);\n      }\n    }\n  }\n  return result;\n}\n// After removing bn.js library provide backward compatibility for users passing bn.js instance\ntype BN = import('bn.js'); // Type only import from @types/bn.js\nexport type IntegerType = number | string | bigint | Uint8Array | BN;\n\nexport function intToBytes(value: IntegerType, signed: boolean, byteLength: number): Uint8Array {\n  return bigIntToBytes(intToBigInt(value, signed), byteLength);\n}\n\nexport function intToBigInt(value: IntegerType, signed: boolean): bigint {\n  let parsedValue = value;\n\n  if (typeof parsedValue === 'number') {\n    if (!Number.isInteger(parsedValue)) {\n      throw new RangeError(`Invalid value. Values of type 'number' must be an integer.`);\n    }\n    if (parsedValue > Number.MAX_SAFE_INTEGER) {\n      throw new RangeError(\n        `Invalid value. Values of type 'number' must be less than or equal to ${Number.MAX_SAFE_INTEGER}. For larger values, try using a BigInt instead.`\n      );\n    }\n    return BigInt(parsedValue);\n  }\n  if (typeof parsedValue === 'string') {\n    // If hex string then convert to bytes then fall through to the bytes condition\n    if (parsedValue.toLowerCase().startsWith('0x')) {\n      // Trim '0x' hex-prefix\n      let hex = parsedValue.slice(2);\n\n      // Allow odd-length strings like `0xf` -- some libs output these, or even just `0x${num.toString(16)}`\n      hex = hex.padStart(hex.length + (hex.length % 2), '0');\n\n      parsedValue = hexToBytes(hex);\n    } else {\n      try {\n        return BigInt(parsedValue);\n      } catch (error) {\n        if (error instanceof SyntaxError) {\n          throw new RangeError(`Invalid value. String integer '${parsedValue}' is not finite.`);\n        }\n      }\n    }\n  }\n  if (typeof parsedValue === 'bigint') {\n    return parsedValue;\n  }\n  if (parsedValue instanceof Uint8Array) {\n    if (signed) {\n      // Allow byte arrays smaller than 128-bits to be passed.\n      // This allows positive signed ints like `0x08` (8) or negative signed\n      // ints like `0xf8` (-8) to be passed without having to pad to 16 bytes.\n      const bn = fromTwos(\n        BigInt(`0x${bytesToHex(parsedValue)}`),\n        BigInt(parsedValue.byteLength * 8)\n      );\n      return BigInt(bn.toString());\n    } else {\n      return BigInt(`0x${bytesToHex(parsedValue)}`);\n    }\n  }\n  // After removing bn.js library provide backward compatibility for users passing bn.js instance\n  // For backward compatibility with bn.js check if it's a bn.js instance\n  if (\n    parsedValue != null &&\n    typeof parsedValue === 'object' &&\n    parsedValue.constructor.name === 'BN'\n  ) {\n    return BigInt(parsedValue.toString());\n  }\n  throw new TypeError(\n    `Invalid value type. Must be a number, bigint, integer-string, hex-string, or Uint8Array.`\n  );\n}\n\nexport function with0x(value: string): string {\n  return value.startsWith('0x') ? value : `0x${value}`;\n}\n\n/**\n * Converts hex input string to bigint\n * @param hex - hex input string without 0x prefix and in big endian format\n * @example \"6c7cde4d702830c1db34ef7c19e2776f59107afef39084776fc88bc78dbb9656\"\n * @ignore\n */\nexport function hexToBigInt(hex: string): bigint {\n  if (typeof hex !== 'string')\n    throw new TypeError(`hexToBigInt: expected string, got ${typeof hex}`);\n  // Big Endian\n  return BigInt(`0x${hex}`);\n}\n\n/**\n * Converts IntegerType to hex string\n * @ignore\n */\nexport function intToHex(integer: IntegerType, lengthBytes = 8): string {\n  const value = typeof integer === 'bigint' ? integer : intToBigInt(integer, false);\n  return value.toString(16).padStart(lengthBytes * 2, '0');\n}\n\n/**\n * Converts hex string to integer\n * @ignore\n */\nexport function hexToInt(hex: string): number {\n  return parseInt(hex, 16);\n}\n\n/**\n * Converts bigint to byte array\n * @param value bigint value to be converted\n * @param length byte array optional length\n * @return {Uint8Array} byte array\n */\nexport function bigIntToBytes(value: bigint, length: number = 16): Uint8Array {\n  const hex = intToHex(value, length);\n  return hexToBytes(hex);\n}\n\n/**\n * Converts from signed number to two's complement\n * MIN_VALUE = -(1 << (width - 1))\n * MAX_VALUE =  (1 << (width - 1)) - 1\n * @ignore\n */\nexport function toTwos(value: bigint, width: bigint): bigint {\n  if (\n    value < -(BigInt(1) << (width - BigInt(1))) ||\n    (BigInt(1) << (width - BigInt(1))) - BigInt(1) < value\n  ) {\n    throw `Unable to represent integer in width: ${width}`;\n  }\n  if (value >= BigInt(0)) {\n    return BigInt(value);\n  }\n  return value + (BigInt(1) << width);\n}\n\n/**\n * Returns nth bit (right-to-left, zero-indexed)\n */\nfunction nthBit(value: bigint, n: bigint) {\n  return value & (BigInt(1) << n);\n}\n\n/**\n * Converts from two's complement to signed number\n * @ignore\n */\nexport function fromTwos(value: bigint, width: bigint) {\n  if (nthBit(value, width - BigInt(1))) {\n    return value - (BigInt(1) << width);\n  }\n  return value;\n}\n\n// The following methods are based on `@noble/hashes` implementation\n// https://github.com/paulmillr/noble-hashes\n// Copyright (c) 2022 Paul Miller (https://paulmillr.com)\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the “Software”), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\nconst hexes = Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n\n/**\n * Converts bytes to the equivalent hex string\n * @example\n * ```\n * bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef])) // 'deadbeef'\n * ```\n */\nexport function bytesToHex(uint8a: Uint8Array): string {\n  // pre-caching improves the speed 6x\n  if (!(uint8a instanceof Uint8Array)) throw new Error('Uint8Array expected');\n  let hex = '';\n  for (const u of uint8a) {\n    hex += hexes[u];\n  }\n  return hex;\n}\n\n/**\n * Converts a hex string to the equivalent bytes\n * @example\n * ```\n * hexToBytes('deadbeef') // Uint8Array(4) [ 222, 173, 190, 239 ]\n * ```\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') {\n    throw new TypeError(`hexToBytes: expected string, got ${typeof hex}`);\n  }\n  const paddedHex = hex.length % 2 ? `0${hex}` : hex; // left pad with a zero if odd length\n  const array = new Uint8Array(paddedHex.length / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = paddedHex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\ndeclare const TextEncoder: any;\ndeclare const TextDecoder: any;\n\n/**\n * Converts a UTF-8 string to the equivalent bytes\n * @example\n * ```\n * utf8ToBytes('stacks Ӿ'); // Uint8Array(9) [ 115, 116, 97, 99, 107, 115, 32, 211, 190 ];\n * ```\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  return new TextEncoder().encode(str);\n}\n\n/**\n * Converts bytes to the equivalent UTF-8 string\n * @example\n * ```\n * bytesToUtf8(Uint8Array.from([115, 116, 97, 99, 107, 115, 32, 211, 190])); // 'stacks Ӿ'\n * ```\n */\nexport function bytesToUtf8(arr: Uint8Array): string {\n  return new TextDecoder().decode(arr);\n}\n\n/**\n * Converts an ASCII string to the equivalent bytes\n * @example\n * ```\n * asciiToBytes('stacks $'); // Uint8Array(8) [ 115, 116, 97, 99, 107, 115, 32, 36 ]\n * ```\n */\nexport function asciiToBytes(str: string) {\n  const byteArray = [];\n  for (let i = 0; i < str.length; i++) {\n    byteArray.push(str.charCodeAt(i) & 0xff); // ignore second bytes of UTF-16 character\n  }\n  return new Uint8Array(byteArray);\n}\n\n/**\n * Converts bytes to the equivalent ASCII string\n * @example\n * ```\n * bytesToAscii(Uint8Array.from([115, 116, 97, 99, 107, 115, 32, 36])); // 'stacks $'\n * ```\n */\nexport function bytesToAscii(arr: Uint8Array) {\n  return String.fromCharCode.apply(null, arr as any as number[]);\n}\n\nfunction isNotOctet(octet: number) {\n  return !Number.isInteger(octet) || octet < 0 || octet > 255;\n}\n\n/** @ignore */\nexport function octetsToBytes(numbers: number[]) {\n  if (numbers.some(isNotOctet)) throw new Error('Some values are invalid bytes.');\n  return new Uint8Array(numbers);\n}\n\n/** @ignore */\nexport function toBytes(data: Uint8Array | string): Uint8Array {\n  if (typeof data === 'string') return utf8ToBytes(data);\n  if (data instanceof Uint8Array) return data;\n  throw new TypeError(`Expected input type is (Uint8Array | string) but got (${typeof data})`);\n}\n\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n * @ignore\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  if (!arrays.every(a => a instanceof Uint8Array)) throw new Error('Uint8Array list expected');\n  if (arrays.length === 1) return arrays[0];\n  const length = arrays.reduce((a, arr) => a + arr.length, 0);\n  const result = new Uint8Array(length);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const arr = arrays[i];\n    result.set(arr, pad);\n    pad += arr.length;\n  }\n  return result;\n}\n\n/** @ignore */\nexport function concatArray(elements: (Uint8Array | number[] | number)[]) {\n  return concatBytes(\n    ...elements.map(e => {\n      if (typeof e === 'number') return octetsToBytes([e]);\n      if (e instanceof Array) return octetsToBytes(e);\n      return e;\n    })\n  );\n}\n\n/**\n * Better `instanceof` check for types in different environments\n * @ignore\n */\nexport function isInstance(object: any, type: any) {\n  return object instanceof type || object?.constructor?.name?.toLowerCase() === type.name;\n}\n","/**\n * The **chain** ID.\n * Is used for signing, so transactions can't be replayed on other chains.\n */\nexport enum ChainID {\n  Testnet = 0x80000000,\n  Mainnet = 0x00000001,\n}\n\n/**\n * The **transaction** version.\n * Is used for signing, so transactions can't be replayed on other networks.\n */\nexport enum TransactionVersion {\n  Mainnet = 0x00,\n  Testnet = 0x80,\n}\n\n/**\n * The **peer** network ID.\n * Typically not used in signing, but used for broadcasting to the P2P network.\n * It can also be used to determine the parent of a subnet.\n *\n * Attention:\n * For mainnet/testnet the v2/info response `.network_id` refers to the chain ID\n * For subnets the v2/info response `.network_id` refers to the peer network ID and the chain ID (they are the same for subnets)\n * The `.parent_network_id` refers to the actual peer network ID (of the parent) in both cases\n */\nexport enum PeerNetworkID {\n  Mainnet = 0x17000000,\n  Testnet = 0xff000000,\n}\n\n/** @ignore internal */\nexport const PRIVATE_KEY_COMPRESSED_LENGTH = 33;\n\n/** @ignore internal */\nexport const PRIVATE_KEY_UNCOMPRESSED_LENGTH = 32;\n\n/** @ignore internal */\nexport const BLOCKSTACK_DEFAULT_GAIA_HUB_URL = 'https://hub.blockstack.org';\n","import { hexToInt } from './utils';\n\nconst COORDINATE_BYTES = 32;\n\n/** @ignore */\nexport function parseRecoverableSignatureVrs(signature: string) {\n  // todo: prefer RSV format or add format options of message signing functions\n  if (signature.length < COORDINATE_BYTES * 2 * 2 + 1) {\n    throw new Error('Invalid signature');\n  }\n  const recoveryIdHex = signature.slice(0, 2);\n  const r = signature.slice(2, 2 + COORDINATE_BYTES * 2);\n  const s = signature.slice(2 + COORDINATE_BYTES * 2);\n  return {\n    recoveryId: hexToInt(recoveryIdHex),\n    r,\n    s,\n  };\n}\n\n/** @ignore */\nexport function signatureVrsToRsv(signature: string) {\n  return signature.slice(2) + signature.slice(0, 2);\n}\n\n/** @ignore */\nexport function signatureRsvToVrs(signature: string) {\n  return signature.slice(-2) + signature.slice(0, -2);\n}\n","import { hexToBytes } from './utils';\n\n/**\n * @private\n * @ignore\n */\nexport function privateKeyToBytes(privateKey: string | Uint8Array): Uint8Array {\n  const privateKeyBuffer = typeof privateKey === 'string' ? hexToBytes(privateKey) : privateKey;\n\n  if (privateKeyBuffer.length != 32 && privateKeyBuffer.length != 33) {\n    throw new Error(\n      `Improperly formatted private-key. Private-key byte length should be 32 or 33. Length provided: ${privateKeyBuffer.length}`\n    );\n  }\n\n  if (privateKeyBuffer.length == 33 && privateKeyBuffer[32] !== 1) {\n    throw new Error(\n      'Improperly formatted private-key. 33 bytes indicate compressed key, but the last byte must be == 01'\n    );\n  }\n\n  return privateKeyBuffer;\n}\n","/** @ignore */\nexport function equals(a: Uint8Array, b: Uint8Array) {\n  if (a.byteLength !== b.byteLength) return false;\n  for (let i = 0; i < a.byteLength; i++) {\n    if (a[i] !== b[i]) return false;\n  }\n  return true;\n}\n\n/**\n * @ignore\n * TODO: maybe remove and use string repeat\n */\nexport function alloc(length: number, value: number) {\n  const a = new Uint8Array(length);\n  for (let i = 0; i < length; i++) {\n    a[i] = value;\n  }\n  return a;\n}\n\n/** @ignore */\nexport function readUInt16BE(source: Uint8Array, offset: number): number {\n  return ((source[offset + 0] << 8) | source[offset + 1]) >>> 0;\n}\n\n/** @ignore */\nexport function writeUInt16BE(source: Uint8Array, value: number, offset: number): void {\n  source[offset + 0] = value >>> 8;\n  source[offset + 1] = value >>> 0;\n}\n\n// The following methods are based on `microsoft/vscode` implementation\n// https://github.com/microsoft/vscode/blob/1e6ac12df197fc3e5d1c1bdb25702125cccb135a/src/vs/base/common/buffer.ts\n\n// Copyright (c) 2015 - present Microsoft Corporation\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the “Software”), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n/** @ignore */\nexport function readUInt8(source: Uint8Array, offset: number): number {\n  return source[offset];\n}\n\n/** @ignore */\nexport function writeUInt8(destination: Uint8Array, value: number, offset: number): void {\n  destination[offset] = value;\n}\n\n/** @ignore */\nexport function readUInt16LE(source: Uint8Array, offset: number): number {\n  return ((source[offset + 0] << 0) >>> 0) | ((source[offset + 1] << 8) >>> 0);\n}\n\n/** @ignore */\nexport function writeUInt16LE(destination: Uint8Array, value: number, offset: number): void {\n  destination[offset + 0] = value & 0b1111_1111;\n  value >>>= 8;\n  destination[offset + 1] = value & 0b1111_1111;\n}\n\n/** @ignore */\nexport function readUInt32BE(source: Uint8Array, offset: number): number {\n  return (\n    source[offset] * 2 ** 24 +\n    source[offset + 1] * 2 ** 16 +\n    source[offset + 2] * 2 ** 8 +\n    source[offset + 3]\n  );\n}\n\n/** @ignore */\nexport function writeUInt32BE(destination: Uint8Array, value: number, offset: number): void {\n  destination[offset + 3] = value;\n  value >>>= 8;\n  destination[offset + 2] = value;\n  value >>>= 8;\n  destination[offset + 1] = value;\n  value >>>= 8;\n  destination[offset] = value;\n}\n\n/** @ignore */\nexport function readUInt32LE(source: Uint8Array, offset: number): number {\n  return (\n    ((source[offset + 0] << 0) >>> 0) |\n    ((source[offset + 1] << 8) >>> 0) |\n    ((source[offset + 2] << 16) >>> 0) |\n    ((source[offset + 3] << 24) >>> 0)\n  );\n}\n\n/** @ignore */\nexport function writeUInt32LE(destination: Uint8Array, value: number, offset: number): void {\n  destination[offset + 0] = value & 0b1111_1111;\n  value >>>= 8;\n  destination[offset + 1] = value & 0b1111_1111;\n  value >>>= 8;\n  destination[offset + 2] = value & 0b1111_1111;\n  value >>>= 8;\n  destination[offset + 3] = value & 0b1111_1111;\n}\n"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","config","network","layer1","logLevel","ERROR_CODES","MISSING_PARAMETER","REMOTE_SERVICE_ERROR","INVALID_STATE","NO_SESSION_DATA","DOES_NOT_EXIST","FAILED_DECRYPTION_ERROR","INVALID_DID_ERROR","NOT_ENOUGH_FUNDS_ERROR","INVALID_AMOUNT_ERROR","LOGIN_FAILED_ERROR","SIGNATURE_VERIFICATION_ERROR","CONFLICT_ERROR","NOT_ENOUGH_PROOF_ERROR","BAD_PATH_ERROR","VALIDATION_ERROR","PAYLOAD_TOO_LARGE_ERROR","PRECONDITION_FAILED_ERROR","UNKNOWN","freeze","BlockstackError","Error","constructor","error","super","message","bugDetails","code","stack","parameter","toString","InvalidParameterError","name","MissingParameterError","RemoteServiceError","response","InvalidDIDError","NotEnoughFundsError","leftToFund","InvalidAmountError","fees","specifiedAmount","LoginFailedError","reason","SignatureVerificationError","FailedDecryptionError","InvalidStateError","NoSessionDataError","GaiaHubError","hubError","statusCode","status","statusText","body","assign","DoesNotExist","ConflictError","NotEnoughProofError","BadPathError","ValidationError","PayloadTooLargeError","maxUploadByteSize","PreconditionFailedError","levels","levelToInt","intToLevel","index","length","level","Logger","shouldLog","console","logMessage","warn","info","log","debug","toUpperCase","BLOCKSTACK_HANDLER","nextYear","Date","setFullYear","getFullYear","nextMonth","setMonth","getMonth","nextHour","setHours","getHours","megabytesToBytes","megabytes","Number","isFinite","Math","floor","getAesCbcOutputLength","inputByteLength","getBase64OutputLength","ceil","updateQueryStringParameter","uri","re","RegExp","separator","indexOf","match","replace","isLaterVersion","v1","v2","v1tuple","split","map","x","parseInt","v2tuple","push","makeUUID4","d","getTime","performance","now","c","random","isSameOriginAbsoluteUrl","uri1","uri2","parsedUri1","URL","parsedUri2","port1","port","protocol","port2","scheme","hostname","absolute","includes","getGlobalScope","self","getAPIUsageErrorMessage","scopeObject","apiName","usageDesc","getGlobalObject","throwIfUnavailable","returnEmptyObject","globalScope","errMsg","getGlobalObjects","names","result","i","intToBytes","signed","byteLength","bigIntToBytes","intToBigInt","parsedValue","isInteger","RangeError","MAX_SAFE_INTEGER","BigInt","toLowerCase","startsWith","hex","slice","padStart","hexToBytes","SyntaxError","Uint8Array","bn","fromTwos","bytesToHex","TypeError","with0x","hexToBigInt","intToHex","integer","lengthBytes","hexToInt","toTwos","width","n","nthBit","hexes","Array","from","_","uint8a","u","paddedHex","array","j","hexByte","byte","isNaN","utf8ToBytes","str","TextEncoder","encode","bytesToUtf8","arr","TextDecoder","decode","asciiToBytes","byteArray","charCodeAt","bytesToAscii","String","fromCharCode","apply","isNotOctet","octet","octetsToBytes","numbers","some","toBytes","data","concatBytes","arrays","every","a","reduce","pad","set","concatArray","elements","isInstance","object","type","ChainID","TransactionVersion","PeerNetworkID","PRIVATE_KEY_COMPRESSED_LENGTH","PRIVATE_KEY_UNCOMPRESSED_LENGTH","BLOCKSTACK_DEFAULT_GAIA_HUB_URL","COORDINATE_BYTES","parseRecoverableSignatureVrs","signature","recoveryIdHex","s","recoveryId","signatureVrsToRsv","signatureRsvToVrs","privateKeyToBytes","privateKey","privateKeyBuffer","equals","b","alloc","readUInt16BE","source","offset","writeUInt16BE","readUInt8","writeUInt8","destination","readUInt16LE","writeUInt16LE","readUInt32BE","writeUInt32BE","readUInt32LE","writeUInt32LE"],"sourceRoot":""}