import { ClarityValue } from './clarity';
import { StacksMessageType } from './constants';
import { StacksPrivateKey } from './keys';
export declare const STRUCTURED_DATA_PREFIX: Uint8Array;
export declare function hashStructuredData(structuredData: ClarityValue): Uint8Array;
export declare function encodeStructuredData({ message, domain, }: {
    message: ClarityValue;
    domain: ClarityValue;
}): Uint8Array;
export type DecodedStructuredData = {
    domainHash: Uint8Array;
    messageHash: Uint8Array;
};
export declare function decodeStructuredDataSignature(signature: string | Uint8Array): DecodedStructuredData;
export interface StructuredDataSignature {
    readonly type: StacksMessageType.StructuredDataSignature;
    data: string;
}
export declare function signStructuredData({ message, domain, privateKey, }: {
    message: ClarityValue;
    domain: ClarityValue;
    privateKey: StacksPrivateKey;
}): StructuredDataSignature;
