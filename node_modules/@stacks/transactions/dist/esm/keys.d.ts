import { BytesReader } from './bytesReader';
import { MessageSignature } from './common';
import { AddressVersion, PubKeyEncoding, StacksMessageType, TransactionVersion } from './constants';
export interface StacksPublicKey {
    readonly type: StacksMessageType.PublicKey;
    readonly data: Uint8Array;
}
export declare function getAddressFromPrivateKey(privateKey: string | Uint8Array, transactionVersion?: TransactionVersion): string;
export declare function getAddressFromPublicKey(publicKey: string | Uint8Array, transactionVersion?: TransactionVersion): string;
export declare function createStacksPublicKey(key: string): StacksPublicKey;
export declare function publicKeyFromSignatureVrs(messageHash: string, messageSignature: MessageSignature, pubKeyEncoding?: PubKeyEncoding): string;
export declare function publicKeyFromSignatureRsv(messageHash: string, messageSignature: MessageSignature, pubKeyEncoding?: PubKeyEncoding): string;
export declare function publicKeyFromBytes(data: Uint8Array): StacksPublicKey;
export declare function isCompressed(key: StacksPublicKey): boolean;
export declare function publicKeyToString(key: StacksPublicKey): string;
export declare function serializePublicKey(key: StacksPublicKey): Uint8Array;
export declare function pubKeyfromPrivKey(privateKey: string | Uint8Array): StacksPublicKey;
export declare function compressPublicKey(publicKey: string | Uint8Array): StacksPublicKey;
export declare function deserializePublicKey(bytesReader: BytesReader): StacksPublicKey;
export interface StacksPrivateKey {
    compressed: boolean;
    data: Uint8Array;
}
export declare function createStacksPrivateKey(key: string | Uint8Array): StacksPrivateKey;
export declare function makeRandomPrivKey(): StacksPrivateKey;
export declare function signWithKey(privateKey: StacksPrivateKey, messageHash: string): MessageSignature;
export declare function signMessageHashRsv({ messageHash, privateKey, }: {
    messageHash: string;
    privateKey: StacksPrivateKey;
}): MessageSignature;
export declare function getPublicKey(privateKey: StacksPrivateKey): StacksPublicKey;
export declare function privateKeyToString(privateKey: StacksPrivateKey): string;
export declare function publicKeyToAddress(version: AddressVersion, publicKey: StacksPublicKey): string;
