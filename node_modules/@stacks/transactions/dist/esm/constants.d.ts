declare enum ChainID {
    Testnet = 2147483648,
    Mainnet = 1
}
declare const DEFAULT_CHAIN_ID = ChainID.Mainnet;
declare const MAX_STRING_LENGTH_BYTES = 128;
declare const CLARITY_INT_SIZE = 128;
declare const CLARITY_INT_BYTE_SIZE = 16;
declare const COINBASE_LENGTH_BYTES = 32;
declare const RECOVERABLE_ECDSA_SIG_LENGTH_BYTES = 65;
declare const COMPRESSED_PUBKEY_LENGTH_BYTES = 32;
declare const UNCOMPRESSED_PUBKEY_LENGTH_BYTES = 64;
declare const MEMO_MAX_LENGTH_BYTES = 34;
declare const DEFAULT_CORE_NODE_API_URL = "https://stacks-node-api.mainnet.stacks.co";
declare enum StacksMessageType {
    Address = 0,
    Principal = 1,
    LengthPrefixedString = 2,
    MemoString = 3,
    AssetInfo = 4,
    PostCondition = 5,
    PublicKey = 6,
    LengthPrefixedList = 7,
    Payload = 8,
    MessageSignature = 9,
    StructuredDataSignature = 10,
    TransactionAuthField = 11
}
type WhenMessageTypeMap<T> = Record<StacksMessageType, T>;
export declare function whenMessageType(messageType: StacksMessageType): <T>(messageTypeMap: WhenMessageTypeMap<T>) => T;
declare enum PayloadType {
    TokenTransfer = 0,
    SmartContract = 1,
    VersionedSmartContract = 6,
    ContractCall = 2,
    PoisonMicroblock = 3,
    Coinbase = 4,
    CoinbaseToAltRecipient = 5
}
declare enum ClarityVersion {
    Clarity1 = 1,
    Clarity2 = 2
}
declare enum AnchorMode {
    OnChainOnly = 1,
    OffChainOnly = 2,
    Any = 3
}
declare const AnchorModeNames: readonly ["onChainOnly", "offChainOnly", "any"];
type AnchorModeName = (typeof AnchorModeNames)[number];
declare function anchorModeFromNameOrValue(mode: AnchorModeName | AnchorMode): AnchorMode;
declare enum TransactionVersion {
    Mainnet = 0,
    Testnet = 128
}
declare const DEFAULT_TRANSACTION_VERSION = TransactionVersion.Mainnet;
declare enum PostConditionMode {
    Allow = 1,
    Deny = 2
}
declare enum PostConditionType {
    STX = 0,
    Fungible = 1,
    NonFungible = 2
}
declare enum AuthType {
    Standard = 4,
    Sponsored = 5
}
declare enum AddressHashMode {
    SerializeP2PKH = 0,
    SerializeP2SH = 1,
    SerializeP2WPKH = 2,
    SerializeP2WSH = 3
}
type SingleSigHashMode = AddressHashMode.SerializeP2PKH | AddressHashMode.SerializeP2WPKH;
type MultiSigHashMode = AddressHashMode.SerializeP2SH | AddressHashMode.SerializeP2WSH;
declare enum AddressVersion {
    MainnetSingleSig = 22,
    MainnetMultiSig = 20,
    TestnetSingleSig = 26,
    TestnetMultiSig = 21
}
declare enum PubKeyEncoding {
    Compressed = 0,
    Uncompressed = 1
}
declare enum FungibleConditionCode {
    Equal = 1,
    Greater = 2,
    GreaterEqual = 3,
    Less = 4,
    LessEqual = 5
}
declare enum NonFungibleConditionCode {
    Sends = 16,
    DoesNotSend = 17
}
declare enum PostConditionPrincipalID {
    Origin = 1,
    Standard = 2,
    Contract = 3
}
declare enum AssetType {
    STX = 0,
    Fungible = 1,
    NonFungible = 2
}
declare enum TxRejectedReason {
    Serialization = "Serialization",
    Deserialization = "Deserialization",
    SignatureValidation = "SignatureValidation",
    FeeTooLow = "FeeTooLow",
    BadNonce = "BadNonce",
    NotEnoughFunds = "NotEnoughFunds",
    NoSuchContract = "NoSuchContract",
    NoSuchPublicFunction = "NoSuchPublicFunction",
    BadFunctionArgument = "BadFunctionArgument",
    ContractAlreadyExists = "ContractAlreadyExists",
    PoisonMicroblocksDoNotConflict = "PoisonMicroblocksDoNotConflict",
    PoisonMicroblockHasUnknownPubKeyHash = "PoisonMicroblockHasUnknownPubKeyHash",
    PoisonMicroblockIsInvalid = "PoisonMicroblockIsInvalid",
    BadAddressVersionByte = "BadAddressVersionByte",
    NoCoinbaseViaMempool = "NoCoinbaseViaMempool",
    ServerFailureNoSuchChainTip = "ServerFailureNoSuchChainTip",
    ServerFailureDatabase = "ServerFailureDatabase",
    ServerFailureOther = "ServerFailureOther"
}
export { MAX_STRING_LENGTH_BYTES, CLARITY_INT_SIZE, CLARITY_INT_BYTE_SIZE, COINBASE_LENGTH_BYTES as COINBASE_BYTES_LENGTH, DEFAULT_CHAIN_ID, DEFAULT_TRANSACTION_VERSION, RECOVERABLE_ECDSA_SIG_LENGTH_BYTES, COMPRESSED_PUBKEY_LENGTH_BYTES, UNCOMPRESSED_PUBKEY_LENGTH_BYTES, MEMO_MAX_LENGTH_BYTES, DEFAULT_CORE_NODE_API_URL, ChainID, StacksMessageType, PayloadType, ClarityVersion, AnchorMode, AnchorModeName, AnchorModeNames, anchorModeFromNameOrValue, TransactionVersion, PostConditionMode, PostConditionType, PostConditionPrincipalID, AuthType, AddressHashMode, SingleSigHashMode, MultiSigHashMode, AddressVersion, PubKeyEncoding, FungibleConditionCode, NonFungibleConditionCode, AssetType, TxRejectedReason, };
